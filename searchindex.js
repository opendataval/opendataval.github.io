Search.setIndex({"docnames": ["generated/generated/generated/opendataval.dataloader.datasets.datasets", "generated/generated/generated/opendataval.dataloader.datasets.imagesets", "generated/generated/generated/opendataval.dataloader.datasets.nlpsets", "generated/generated/opendataval.dataloader.CatDataset", "generated/generated/opendataval.dataloader.DataFetcher", "generated/generated/opendataval.dataloader.Register", "generated/generated/opendataval.dataloader.cache", "generated/generated/opendataval.dataloader.datasets", "generated/generated/opendataval.dataloader.datasets.datasets", "generated/generated/opendataval.dataloader.datasets.imagesets", "generated/generated/opendataval.dataloader.datasets.nlpsets", "generated/generated/opendataval.dataloader.mix_labels", "generated/generated/opendataval.dataloader.one_hot_encode", "generated/generated/opendataval.dataval.AME", "generated/generated/opendataval.dataval.BetaShapley", "generated/generated/opendataval.dataval.DVRL", "generated/generated/opendataval.dataval.DataBanzhaf", "generated/generated/opendataval.dataval.DataEvaluator", "generated/generated/opendataval.dataval.DataOob", "generated/generated/opendataval.dataval.DataShapley", "generated/generated/opendataval.dataval.InfluenceFunctionEval", "generated/generated/opendataval.dataval.KNNShapley", "generated/generated/opendataval.dataval.LavaEvaluator", "generated/generated/opendataval.dataval.LeaveOneOut", "generated/generated/opendataval.dataval.RandomEvaluator", "generated/generated/opendataval.dataval.RobustVolumeShapley", "generated/generated/opendataval.dataval.ShapEvaluator", "generated/generated/opendataval.experiment.ExperimentMediator", "generated/generated/opendataval.experiment.exper_methods", "generated/generated/opendataval.model.ClassifierSkLearnWrapper", "generated/generated/opendataval.model.ClassifierUnweightedSkLearnWrapper", "generated/generated/opendataval.model.Model", "generated/generated/opendataval.model.ModelFactory", "generated/generated/opendataval.model.RegressionSkLearnWrapper", "generated/generated/opendataval.model.TorchClassMixin", "generated/generated/opendataval.model.TorchPredictMixin", "generated/generated/opendataval.model.TorchRegressMixin", "generated/opendataval.__version__", "generated/opendataval.dataloader", "generated/opendataval.dataloader.CatDataset", "generated/opendataval.dataloader.DataFetcher", "generated/opendataval.dataloader.Register", "generated/opendataval.dataloader.cache", "generated/opendataval.dataloader.datasets", "generated/opendataval.dataloader.datasets.datasets", "generated/opendataval.dataloader.datasets.imagesets", "generated/opendataval.dataloader.datasets.nlpsets", "generated/opendataval.dataloader.mix_labels", "generated/opendataval.dataloader.one_hot_encode", "generated/opendataval.dataval", "generated/opendataval.dataval.AME", "generated/opendataval.dataval.BetaShapley", "generated/opendataval.dataval.DVRL", "generated/opendataval.dataval.DataBanzhaf", "generated/opendataval.dataval.DataEvaluator", "generated/opendataval.dataval.DataOob", "generated/opendataval.dataval.DataShapley", "generated/opendataval.dataval.InfluenceFunctionEval", "generated/opendataval.dataval.KNNShapley", "generated/opendataval.dataval.LavaEvaluator", "generated/opendataval.dataval.LeaveOneOut", "generated/opendataval.dataval.RandomEvaluator", "generated/opendataval.dataval.RobustVolumeShapley", "generated/opendataval.dataval.ShapEvaluator", "generated/opendataval.experiment", "generated/opendataval.experiment.ExperimentMediator", "generated/opendataval.experiment.exper_methods", "generated/opendataval.model", "generated/opendataval.model.ClassifierSkLearnWrapper", "generated/opendataval.model.ClassifierUnweightedSkLearnWrapper", "generated/opendataval.model.Model", "generated/opendataval.model.ModelFactory", "generated/opendataval.model.RegressionSkLearnWrapper", "generated/opendataval.model.TorchClassMixin", "generated/opendataval.model.TorchPredictMixin", "generated/opendataval.model.TorchRegressMixin", "generated/opendataval.util.load_mediator_output", "generated/opendataval.util.set_random_state", "index", "leaderboards", "license", "modules", "opendataval", "opendataval.dataloader", "opendataval.dataloader.datasets", "opendataval.dataval", "opendataval.dataval.ame", "opendataval.dataval.dvrl", "opendataval.dataval.influence", "opendataval.dataval.knnshap", "opendataval.dataval.lava", "opendataval.dataval.margcontrib", "opendataval.dataval.oob", "opendataval.dataval.random", "opendataval.dataval.volume", "opendataval.experiment", "opendataval.model", "paper"], "filenames": ["generated/generated/generated/opendataval.dataloader.datasets.datasets.rst", "generated/generated/generated/opendataval.dataloader.datasets.imagesets.rst", "generated/generated/generated/opendataval.dataloader.datasets.nlpsets.rst", "generated/generated/opendataval.dataloader.CatDataset.rst", "generated/generated/opendataval.dataloader.DataFetcher.rst", "generated/generated/opendataval.dataloader.Register.rst", "generated/generated/opendataval.dataloader.cache.rst", "generated/generated/opendataval.dataloader.datasets.rst", "generated/generated/opendataval.dataloader.datasets.datasets.rst", "generated/generated/opendataval.dataloader.datasets.imagesets.rst", "generated/generated/opendataval.dataloader.datasets.nlpsets.rst", "generated/generated/opendataval.dataloader.mix_labels.rst", "generated/generated/opendataval.dataloader.one_hot_encode.rst", "generated/generated/opendataval.dataval.AME.rst", "generated/generated/opendataval.dataval.BetaShapley.rst", "generated/generated/opendataval.dataval.DVRL.rst", "generated/generated/opendataval.dataval.DataBanzhaf.rst", "generated/generated/opendataval.dataval.DataEvaluator.rst", "generated/generated/opendataval.dataval.DataOob.rst", "generated/generated/opendataval.dataval.DataShapley.rst", "generated/generated/opendataval.dataval.InfluenceFunctionEval.rst", "generated/generated/opendataval.dataval.KNNShapley.rst", "generated/generated/opendataval.dataval.LavaEvaluator.rst", "generated/generated/opendataval.dataval.LeaveOneOut.rst", "generated/generated/opendataval.dataval.RandomEvaluator.rst", "generated/generated/opendataval.dataval.RobustVolumeShapley.rst", "generated/generated/opendataval.dataval.ShapEvaluator.rst", "generated/generated/opendataval.experiment.ExperimentMediator.rst", "generated/generated/opendataval.experiment.exper_methods.rst", "generated/generated/opendataval.model.ClassifierSkLearnWrapper.rst", "generated/generated/opendataval.model.ClassifierUnweightedSkLearnWrapper.rst", "generated/generated/opendataval.model.Model.rst", "generated/generated/opendataval.model.ModelFactory.rst", "generated/generated/opendataval.model.RegressionSkLearnWrapper.rst", "generated/generated/opendataval.model.TorchClassMixin.rst", "generated/generated/opendataval.model.TorchPredictMixin.rst", "generated/generated/opendataval.model.TorchRegressMixin.rst", "generated/opendataval.__version__.rst", "generated/opendataval.dataloader.rst", "generated/opendataval.dataloader.CatDataset.rst", "generated/opendataval.dataloader.DataFetcher.rst", "generated/opendataval.dataloader.Register.rst", "generated/opendataval.dataloader.cache.rst", "generated/opendataval.dataloader.datasets.rst", "generated/opendataval.dataloader.datasets.datasets.rst", "generated/opendataval.dataloader.datasets.imagesets.rst", "generated/opendataval.dataloader.datasets.nlpsets.rst", "generated/opendataval.dataloader.mix_labels.rst", "generated/opendataval.dataloader.one_hot_encode.rst", "generated/opendataval.dataval.rst", "generated/opendataval.dataval.AME.rst", "generated/opendataval.dataval.BetaShapley.rst", "generated/opendataval.dataval.DVRL.rst", "generated/opendataval.dataval.DataBanzhaf.rst", "generated/opendataval.dataval.DataEvaluator.rst", "generated/opendataval.dataval.DataOob.rst", "generated/opendataval.dataval.DataShapley.rst", "generated/opendataval.dataval.InfluenceFunctionEval.rst", "generated/opendataval.dataval.KNNShapley.rst", "generated/opendataval.dataval.LavaEvaluator.rst", "generated/opendataval.dataval.LeaveOneOut.rst", "generated/opendataval.dataval.RandomEvaluator.rst", "generated/opendataval.dataval.RobustVolumeShapley.rst", "generated/opendataval.dataval.ShapEvaluator.rst", "generated/opendataval.experiment.rst", "generated/opendataval.experiment.ExperimentMediator.rst", "generated/opendataval.experiment.exper_methods.rst", "generated/opendataval.model.rst", "generated/opendataval.model.ClassifierSkLearnWrapper.rst", "generated/opendataval.model.ClassifierUnweightedSkLearnWrapper.rst", "generated/opendataval.model.Model.rst", "generated/opendataval.model.ModelFactory.rst", "generated/opendataval.model.RegressionSkLearnWrapper.rst", "generated/opendataval.model.TorchClassMixin.rst", "generated/opendataval.model.TorchPredictMixin.rst", "generated/opendataval.model.TorchRegressMixin.rst", "generated/opendataval.util.load_mediator_output.rst", "generated/opendataval.util.set_random_state.rst", "index.rst", "leaderboards.rst", "license.rst", "modules.rst", "opendataval.rst", "opendataval.dataloader.rst", "opendataval.dataloader.datasets.rst", "opendataval.dataval.rst", "opendataval.dataval.ame.rst", "opendataval.dataval.dvrl.rst", "opendataval.dataval.influence.rst", "opendataval.dataval.knnshap.rst", "opendataval.dataval.lava.rst", "opendataval.dataval.margcontrib.rst", "opendataval.dataval.oob.rst", "opendataval.dataval.random.rst", "opendataval.dataval.volume.rst", "opendataval.experiment.rst", "opendataval.model.rst", "paper.rst"], "titles": ["opendataval.dataloader.datasets.datasets", "opendataval.dataloader.datasets.imagesets", "opendataval.dataloader.datasets.nlpsets", "opendataval.dataloader.CatDataset", "opendataval.dataloader.DataFetcher", "opendataval.dataloader.Register", "opendataval.dataloader.cache", "opendataval.dataloader.datasets", "opendataval.dataloader.datasets.datasets", "opendataval.dataloader.datasets.imagesets", "opendataval.dataloader.datasets.nlpsets", "opendataval.dataloader.mix_labels", "opendataval.dataloader.one_hot_encode", "opendataval.dataval.AME", "opendataval.dataval.BetaShapley", "opendataval.dataval.DVRL", "opendataval.dataval.DataBanzhaf", "opendataval.dataval.DataEvaluator", "opendataval.dataval.DataOob", "opendataval.dataval.DataShapley", "opendataval.dataval.InfluenceFunctionEval", "opendataval.dataval.KNNShapley", "opendataval.dataval.LavaEvaluator", "opendataval.dataval.LeaveOneOut", "opendataval.dataval.RandomEvaluator", "opendataval.dataval.RobustVolumeShapley", "opendataval.dataval.ShapEvaluator", "opendataval.experiment.ExperimentMediator", "opendataval.experiment.exper_methods", "opendataval.model.ClassifierSkLearnWrapper", "opendataval.model.ClassifierUnweightedSkLearnWrapper", "opendataval.model.Model", "opendataval.model.ModelFactory", "opendataval.model.RegressionSkLearnWrapper", "opendataval.model.TorchClassMixin", "opendataval.model.TorchPredictMixin", "opendataval.model.TorchRegressMixin", "opendataval.__version__", "opendataval.dataloader", "opendataval.dataloader.CatDataset", "opendataval.dataloader.DataFetcher", "opendataval.dataloader.Register", "opendataval.dataloader.cache", "opendataval.dataloader.datasets", "opendataval.dataloader.datasets.datasets", "opendataval.dataloader.datasets.imagesets", "opendataval.dataloader.datasets.nlpsets", "opendataval.dataloader.mix_labels", "opendataval.dataloader.one_hot_encode", "opendataval.dataval", "opendataval.dataval.AME", "opendataval.dataval.BetaShapley", "opendataval.dataval.DVRL", "opendataval.dataval.DataBanzhaf", "opendataval.dataval.DataEvaluator", "opendataval.dataval.DataOob", "opendataval.dataval.DataShapley", "opendataval.dataval.InfluenceFunctionEval", "opendataval.dataval.KNNShapley", "opendataval.dataval.LavaEvaluator", "opendataval.dataval.LeaveOneOut", "opendataval.dataval.RandomEvaluator", "opendataval.dataval.RobustVolumeShapley", "opendataval.dataval.ShapEvaluator", "opendataval.experiment", "opendataval.experiment.ExperimentMediator", "opendataval.experiment.exper_methods", "opendataval.model", "opendataval.model.ClassifierSkLearnWrapper", "opendataval.model.ClassifierUnweightedSkLearnWrapper", "opendataval.model.Model", "opendataval.model.ModelFactory", "opendataval.model.RegressionSkLearnWrapper", "opendataval.model.TorchClassMixin", "opendataval.model.TorchPredictMixin", "opendataval.model.TorchRegressMixin", "opendataval.util.load_mediator_output", "opendataval.util.set_random_state", "OpenDataVal Documentation", "OpenDataVal Leaderboards", "OpenDataVal license", "opendataval", "opendataval package", "opendataval.dataloader package", "opendataval.dataloader.datasets package", "opendataval.dataval package", "opendataval.dataval.ame package", "opendataval.dataval.dvrl package", "opendataval.dataval.influence package", "opendataval.dataval.knnshap package", "opendataval.dataval.lava package", "opendataval.dataval.margcontrib package", "opendataval.dataval.oob package", "opendataval.dataval.random package", "opendataval.dataval.volume package", "opendataval.experiment package", "opendataval.model package", "OpenDataVal: a Unified Benchmark for Data Valuation"], "terms": {"default": [0, 4, 5, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 40, 41, 42, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "data": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 78, 79, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "set": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 25, 27, 39, 40, 41, 44, 45, 46, 47, 62, 64, 65, 77, 82, 85, 88, 90, 91, 94, 95, 96], "function": [0, 1, 2, 4, 5, 8, 9, 10, 14, 20, 28, 38, 40, 41, 44, 45, 46, 51, 57, 64, 66, 67, 79, 82, 83, 84, 85, 87, 88, 90, 91, 95, 96], "torchvis": [1, 9, 45, 84], "us": [1, 2, 4, 7, 9, 10, 14, 15, 17, 21, 22, 25, 27, 32, 40, 43, 45, 46, 51, 52, 54, 58, 59, 62, 64, 65, 67, 71, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96], "depend": [1, 2, 9, 10, 45, 46, 84, 85], "modul": [1, 2, 9, 10, 34, 35, 36, 45, 46, 73, 74, 75, 81], "attribut": [1, 2, 5, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 41, 45, 46, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 72, 73, 74, 75], "class": [1, 3, 4, 5, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 72, 73, 74, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "nlp": [2, 10, 46, 78, 83, 84], "huggingfac": [2, 10, 46, 84, 96], "transform": [2, 4, 5, 10, 40, 41, 46, 83, 84, 85, 86, 87, 88, 91, 92, 94, 96], "dataset": [3, 6, 18, 38, 39, 42, 55, 78, 79, 82, 83, 85, 87, 90, 91, 92, 95, 96], "list": [3, 39, 82, 83, 84, 92, 95, 96], "torch": [3, 4, 15, 22, 32, 34, 35, 36, 39, 40, 52, 59, 71, 73, 74, 75, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95], "util": [3, 25, 39, 62, 81, 84, 85, 94], "ani": [3, 5, 17, 27, 29, 30, 32, 33, 39, 41, 54, 65, 68, 69, 71, 72, 78, 80, 83, 85, 86, 87, 88, 91, 92, 95, 96], "wrap": [3, 29, 30, 33, 39, 68, 69, 72, 82, 83, 84, 96], "index": [3, 39, 78, 83, 95], "tupl": [3, 4, 17, 32, 39, 40, 54, 71, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96], "we": [3, 11, 14, 15, 18, 19, 21, 26, 39, 47, 51, 52, 55, 56, 58, 63, 78, 83, 85, 87, 88, 89, 91, 92, 95, 96], "would": [3, 17, 39, 54, 83, 85], "like": [3, 39, 83, 87], "concat": [3, 15, 39, 52, 83, 87], "togeth": [3, 39, 83], "must": [3, 4, 5, 14, 27, 39, 40, 41, 51, 65, 83, 90, 91, 95, 96], "same": [3, 4, 11, 25, 39, 40, 47, 62, 83, 85, 90, 94, 95, 96], "length": [3, 4, 39, 40, 83, 95], "valueerror": [3, 4, 12, 32, 39, 40, 48, 71, 83, 90, 96], "If": [3, 4, 5, 25, 39, 40, 41, 62, 83, 87, 90, 94, 95, 96], "all": [3, 4, 5, 26, 27, 39, 40, 41, 63, 65, 78, 79, 80, 82, 83, 84, 88, 89, 90, 91, 92, 95], "input": [3, 4, 12, 15, 18, 32, 39, 40, 48, 52, 55, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "ar": [3, 4, 5, 14, 18, 19, 26, 39, 40, 41, 51, 55, 56, 63, 64, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 95, 96], "__init__": [3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 72, 73, 74, 75, 84], "method": [3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 72, 73, 74, 75, 82, 85, 91, 96], "dataset_nam": [4, 5, 40, 41, 83, 95], "str": [4, 5, 6, 7, 11, 14, 17, 19, 26, 27, 32, 40, 41, 42, 43, 47, 51, 54, 56, 63, 65, 71, 76, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96], "cache_dir": [4, 6, 40, 42, 83, 84, 95], "none": [4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 40, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 71, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "force_download": [4, 6, 40, 42, 83, 84, 95], "bool": [4, 5, 6, 25, 40, 41, 42, 62, 83, 84, 90, 94, 95, 96], "fals": [4, 5, 6, 40, 41, 42, 83, 84, 90, 95], "random_st": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 77, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "randomst": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 77, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "load": [4, 7, 21, 40, 43, 58, 76, 82, 84, 87, 89, 90, 95, 96], "an": [4, 17, 21, 27, 38, 40, 49, 54, 58, 64, 65, 67, 78, 80, 82, 83, 84, 85, 87, 89, 90, 95, 96], "experi": [4, 13, 17, 40, 50, 54, 79, 82, 83, 85, 86], "from": [4, 24, 25, 32, 40, 49, 61, 62, 71, 79, 80, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96], "name": [4, 5, 6, 7, 27, 32, 38, 40, 41, 42, 43, 65, 71, 79, 82, 83, 84, 95, 96], "facad": [4, 40, 83], "regist": [4, 7, 38, 40, 43, 49, 82, 84, 85, 95], "object": [4, 5, 11, 38, 40, 41, 47, 67, 82, 83, 84, 85, 90, 95, 96], "prepar": [4, 40, 83], "provid": [4, 31, 38, 40, 49, 64, 70, 78, 80, 82, 83, 84, 85, 90, 95, 96], "api": [4, 17, 38, 40, 54, 64, 78, 82, 83], "subsequ": [4, 40, 83], "split": [4, 25, 40, 62, 83, 94], "ad": [4, 5, 11, 40, 41, 47, 82, 83, 85, 91], "nois": [4, 11, 14, 26, 40, 47, 51, 63, 83, 84, 91, 95], "tensor": [4, 15, 21, 22, 32, 40, 52, 58, 59, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "option": [4, 5, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "directori": [4, 6, 27, 40, 42, 65, 83, 84, 95, 96], "where": [4, 40, 78, 83, 84, 90, 95], "cach": [4, 5, 14, 17, 19, 26, 40, 41, 51, 54, 56, 63, 83, 84, 85, 91, 95], "which": [4, 25, 40, 62, 83, 86, 90, 91, 94, 95, 96], "forc": [4, 6, 40, 42, 83, 84, 95], "download": [4, 5, 6, 40, 41, 42, 83, 84, 95], "sourc": [4, 40, 78, 83, 90, 95], "url": [4, 6, 40, 42, 83, 84, 95], "random": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 77, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95], "initi": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 35, 36, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "state": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 35, 36, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 73, 74, 75, 77, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "datapoint": [4, 40, 83], "train": [4, 11, 13, 15, 17, 20, 21, 27, 40, 47, 50, 52, 54, 57, 58, 65, 67, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "valid": [4, 11, 18, 25, 40, 47, 55, 62, 79, 83, 84, 85, 90, 92, 94, 95], "test": [4, 20, 28, 40, 57, 64, 66, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95], "covari": [4, 32, 38, 40, 71, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96], "label": [4, 5, 11, 27, 29, 30, 32, 38, 40, 41, 47, 65, 68, 69, 71, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96], "covar_dim": [4, 32, 40, 71, 83, 96], "int": [4, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 29, 30, 32, 40, 50, 51, 52, 53, 55, 56, 57, 58, 62, 63, 68, 69, 71, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "dimens": [4, 15, 32, 40, 52, 71, 83, 87, 90, 96], "label_dim": [4, 32, 40, 71, 83, 96], "num_point": [4, 20, 40, 57, 83, 88], "number": [4, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 37, 40, 50, 51, 52, 53, 55, 56, 57, 58, 62, 63, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "point": [4, 11, 18, 20, 21, 27, 40, 47, 55, 57, 58, 65, 78, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "total": [4, 25, 40, 62, 83, 94, 95], "one_hot": [4, 5, 40, 41, 83], "true": [4, 25, 40, 62, 83, 84, 90, 94, 95, 96], "ha": [4, 40, 83, 85, 90, 91, 95, 96], "categor": [4, 40, 83, 84, 85, 96], "one": [4, 5, 18, 28, 40, 41, 55, 66, 82, 83, 85, 90, 91, 92, 95, 96], "hot": [4, 5, 12, 40, 41, 48, 82, 83, 90], "encod": [4, 5, 12, 40, 41, 48, 82, 83, 87, 90], "_indic": [4, 40, 83], "np": [4, 11, 14, 17, 19, 26, 40, 47, 51, 54, 56, 63, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "ndarrai": [4, 11, 12, 40, 47, 48, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "The": [4, 17, 40, 49, 54, 80, 82, 83, 84, 85, 87, 88, 90, 96], "indic": [4, 11, 27, 40, 47, 65, 79, 83, 87, 95, 96], "origin": [4, 25, 40, 62, 83, 94], "make": [4, 40, 67, 83, 96], "noisy_train_indic": [4, 11, 40, 47, 83, 95], "them": [4, 38, 40, 82, 83, 96], "x": [4, 25, 40, 62, 82, 83, 84, 87, 90, 94, 95, 96], "y": [4, 14, 18, 22, 26, 40, 51, 55, 59, 63, 82, 83, 85, 87, 89, 90, 91, 92, 96], "_": [4, 40, 83, 90], "access": [4, 27, 40, 65, 83, 95], "raw": [4, 40, 83, 84, 85], "prior": [4, 14, 19, 26, 40, 51, 56, 63, 83, 84, 90, 91], "being": [4, 40, 83, 87], "keyerror": [4, 40, 83], "In": [4, 40, 64, 78, 83, 87, 95], "order": [4, 40, 83, 90, 92], "you": [4, 40, 83, 91], "creat": [4, 5, 32, 40, 41, 49, 71, 82, 85, 95, 96], "exce": [4, 40, 83], "other": [4, 40, 67, 80, 83, 91, 96], "word": [4, 17, 27, 32, 40, 54, 65, 67, 71, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 96], "valu": [4, 14, 15, 16, 17, 18, 19, 20, 24, 26, 40, 49, 51, 52, 53, 54, 55, 56, 57, 61, 63, 67, 78, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "less": [4, 15, 21, 40, 52, 58, 83, 85, 87, 89, 95, 96], "than": [4, 15, 40, 52, 83, 87, 95, 96], "thei": [4, 40, 83, 84], "float": [4, 11, 14, 15, 18, 19, 20, 25, 26, 40, 47, 51, 52, 55, 56, 57, 62, 63, 82, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96], "1": [4, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 37, 40, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "0": [4, 11, 15, 18, 20, 24, 25, 37, 40, 47, 52, 55, 57, 61, 62, 67, 78, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96], "anyth": [4, 40, 83], "els": [4, 40, 83], "error": [4, 6, 40, 42, 67, 83, 84, 85, 96], "specifi": [4, 14, 20, 21, 22, 32, 40, 51, 57, 58, 59, 71, 83, 85, 88, 89, 90, 91, 94, 95, 96], "repeat": [4, 40, 83], "outsid": [4, 15, 40, 52, 83, 87], "rang": [4, 40, 83], "cacheabl": [5, 41, 83], "presplit": [5, 41, 83], "defin": [5, 38, 41, 83, 84, 95], "its": [5, 41, 83], "retriev": [5, 41, 83], "fetch": [5, 41, 83], "datafetch": [5, 7, 11, 27, 32, 38, 41, 43, 47, 49, 65, 71, 79, 82, 83, 84, 85, 95, 96], "also": [5, 41, 83, 95], "allow": [5, 38, 41, 83], "specif": [5, 21, 32, 41, 58, 71, 83, 85, 88, 89, 96], "appli": [5, 41, 78, 83, 95, 96], "thi": [5, 11, 21, 32, 38, 41, 47, 58, 71, 78, 80, 83, 89, 90, 91, 95, 96], "give": [5, 41, 83], "benefit": [5, 41, 83], "distinguish": [5, 41, 83], "separ": [5, 38, 41, 83], "whether": [5, 41, 80, 83, 84, 90, 95, 96], "should": [5, 41, 78, 83, 90, 96], "can": [5, 7, 21, 29, 30, 41, 43, 58, 64, 68, 69, 78, 79, 83, 84, 87, 89, 90, 91, 95, 96], "wa": [5, 41, 83, 90, 95, 96], "keep": [5, 41, 83], "track": [5, 41, 83], "uniqu": [5, 11, 14, 19, 26, 41, 47, 51, 56, 63, 83, 91], "duplic": [5, 41, 83], "user": [5, 41, 78, 83], "path": [6, 27, 42, 65, 83, 84, 95], "file_nam": [6, 42, 83, 84, 95], "file": [6, 42, 79, 80, 83, 84, 95], "i": [6, 11, 12, 17, 20, 21, 25, 32, 42, 47, 48, 49, 54, 57, 58, 62, 67, 71, 78, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 96], "present": [6, 42, 83], "filepath": [6, 42, 76, 82, 83], "within": [6, 42, 78, 83, 87, 95], "regardless": [6, 42, 83], "httperror": [6, 42, 83], "http": [6, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 42, 50, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "occur": [6, 42, 83], "dure": [6, 21, 42, 58, 83, 89], "catalog": [7, 43, 84], "pass": [7, 28, 32, 43, 66, 71, 83, 84, 87, 95, 96], "need": [7, 43, 83, 84, 90, 95, 96], "fetcher": [11, 27, 32, 47, 65, 71, 79, 82, 85, 95, 96], "noise_r": [11, 47, 83], "2": [11, 26, 29, 30, 47, 63, 68, 69, 80, 83, 84, 90, 91, 95, 96], "dict": [11, 17, 27, 47, 54, 65, 82, 83, 85, 86, 87, 88, 91, 92, 94, 95, 96], "numpi": [11, 12, 47, 48, 83, 84, 91, 95], "mix": [11, 47, 83], "y_train": [11, 17, 47, 54, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96], "For": [11, 47, 83, 87, 95, 96], "given": [11, 47, 83, 84, 95, 96], "shift": [11, 47, 83], "forward": [11, 47, 83, 84, 87, 96], "up": [11, 27, 47, 64, 65, 83, 84, 91, 95], "n": [11, 12, 47, 48, 83, 84, 90, 91, 95], "step": [11, 47, 83], "prevent": [11, 47, 83], "select": [11, 47, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 96], "when": [11, 12, 32, 47, 48, 71, 83, 84, 85, 88, 90, 91, 95, 96], "hous": [11, 47, 83], "have": [11, 27, 29, 30, 47, 65, 68, 69, 78, 83, 87, 90, 95, 96], "proport": [11, 18, 20, 47, 55, 57, 83, 86, 88, 92, 95], "add": [11, 38, 47, 83, 87, 92, 95], "dictionari": [11, 47, 83, 94, 95], "updat": [11, 47, 83, 95], "y_valid": [11, 17, 47, 54, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95], "One": [12, 23, 48, 60, 83, 91], "arrai": [12, 17, 48, 54, 67, 78, 83, 84, 85, 96], "shape": [12, 32, 48, 71, 83, 88, 96], "arg": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 71, 72, 73, 74, 75, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "kwarg": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 71, 72, 73, 74, 75, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "implement": [13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 78, 82, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "averag": [13, 50, 86, 87, 88, 91], "margin": [13, 14, 19, 26, 50, 51, 56, 63, 86, 91, 94], "effect": [13, 50, 78, 86], "valuat": [13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 26, 50, 51, 52, 53, 55, 56, 58, 59, 60, 62, 63, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95], "j": [13, 14, 15, 16, 18, 19, 26, 50, 51, 52, 53, 55, 56, 63, 84, 86, 87, 90, 91, 92, 95, 96], "lin": [13, 50, 86], "A": [13, 16, 19, 22, 26, 50, 53, 56, 59, 63, 80, 84, 86, 90, 91, 94, 95], "zhang": [13, 20, 50, 57, 84, 86, 88, 95], "m": [13, 22, 50, 59, 84, 86, 90, 95, 96], "lecuy": [13, 50, 86], "li": [13, 50, 84, 86], "panda": [13, 50, 76, 82, 83, 86, 95], "": [13, 15, 25, 50, 52, 62, 78, 84, 86, 87, 91, 94, 95], "sen": [13, 50, 86], "measur": [13, 25, 50, 62, 86, 89, 94], "deep": [13, 50, 84, 86, 96], "learn": [13, 14, 15, 16, 19, 22, 26, 29, 30, 33, 50, 51, 52, 53, 56, 59, 63, 68, 69, 72, 78, 84, 86, 87, 90, 91], "predict": [13, 17, 18, 21, 27, 32, 35, 50, 54, 55, 58, 65, 67, 71, 74, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "via": [13, 20, 50, 57, 82, 86, 88, 90, 95], "arxiv": [13, 14, 15, 16, 18, 19, 20, 21, 26, 50, 51, 52, 53, 55, 56, 57, 58, 63, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97], "org": [13, 14, 15, 16, 18, 19, 20, 21, 26, 50, 51, 52, 53, 55, 56, 57, 58, 63, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96], "2022": [13, 16, 50, 53, 86, 91], "avail": [13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 50, 51, 52, 53, 55, 56, 57, 58, 59, 63, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96], "ab": [13, 14, 15, 16, 18, 19, 20, 21, 26, 50, 51, 52, 53, 55, 56, 57, 58, 63, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96], "2206": [13, 50, 86], "10013": [13, 50, 86], "num_model": [13, 16, 18, 20, 50, 53, 55, 57, 86, 91, 92], "model": [13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 78, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95], "bag": [13, 18, 50, 55, 86, 92], "aggreg": [13, 18, 50, 55, 86, 92], "1000": [13, 14, 15, 16, 18, 19, 20, 25, 26, 50, 51, 52, 53, 55, 56, 57, 62, 63, 86, 87, 88, 91, 92, 94], "beta": [14, 26, 51, 63, 91], "shaplei": [14, 19, 21, 25, 26, 51, 56, 58, 62, 63, 84, 85, 89, 91, 94], "alpha": [14, 51, 91], "kwon": [14, 18, 26, 51, 55, 63, 91, 92], "zou": [14, 18, 19, 26, 51, 55, 56, 63, 84, 91, 92], "unifi": [14, 26, 51, 63, 78, 91], "reduc": [14, 26, 51, 63, 91], "framework": [14, 16, 26, 51, 53, 63, 78, 82, 91], "machin": [14, 16, 19, 26, 51, 53, 56, 63, 78, 84, 87, 91], "2021": [14, 25, 26, 51, 62, 63, 84, 91, 94], "2110": [14, 26, 51, 63, 91], "14049": [14, 26, 51, 63, 91], "gr_threshold": [14, 19, 26, 51, 56, 63, 91], "converg": [14, 19, 25, 26, 51, 56, 62, 63, 91, 94], "threshold": [14, 15, 19, 26, 51, 52, 56, 63, 87, 91, 95], "gelman": [14, 19, 26, 51, 56, 63, 91], "rubin": [14, 19, 26, 51, 56, 63, 91], "statist": [14, 19, 25, 26, 51, 56, 62, 63, 87, 91, 94], "hard": [14, 19, 26, 51, 56, 63, 91], "so": [14, 19, 26, 51, 56, 63, 80, 90, 91, 96], "resort": [14, 19, 26, 51, 56, 63, 91], "mcmc": [14, 19, 26, 51, 56, 63, 91], "sampl": [14, 18, 19, 20, 25, 26, 51, 55, 56, 57, 62, 63, 82, 86, 87, 88, 90, 91, 92, 94, 95, 96], "05": [14, 19, 25, 26, 51, 56, 62, 63, 91, 94, 95], "max_mc_epoch": [14, 19, 26, 51, 56, 63, 91], "max": [14, 19, 26, 51, 56, 63, 91], "outer": [14, 19, 26, 51, 56, 63, 91], "iter": [14, 19, 25, 26, 51, 56, 62, 63, 91, 94, 95], "100": [14, 15, 19, 26, 51, 52, 56, 63, 84, 87, 91], "models_per_iter": [14, 19, 26, 51, 56, 63, 91], "fit": [14, 19, 20, 26, 29, 30, 51, 56, 57, 63, 68, 69, 80, 86, 88, 91, 96], "take": [14, 16, 19, 20, 26, 27, 51, 53, 56, 57, 63, 65, 67, 83, 84, 88, 91, 94, 95, 96], "per": [14, 19, 26, 51, 56, 63, 83, 87, 91, 95], "check": [14, 19, 25, 26, 51, 56, 62, 63, 83, 87, 91, 94, 95], "gr": [14, 19, 25, 26, 51, 56, 62, 63, 91, 94], "mc_epoch": [14, 19, 25, 26, 51, 56, 62, 63, 91, 94], "minimum": [14, 19, 26, 51, 56, 63, 91, 96], "befor": [14, 19, 26, 51, 56, 63, 91], "cache_nam": [14, 19, 26, 51, 56, 63, 91], "contribut": [14, 17, 19, 26, 51, 54, 56, 63, 85, 91, 94], "distribut": [14, 51, 80, 83, 90, 91], "weight": [14, 29, 30, 51, 68, 69, 90, 91, 96], "4": [14, 23, 51, 60, 80, 87, 91], "reinforc": [15, 52, 84, 87], "pytorch": [15, 52, 84, 87, 89], "yoon": [15, 52, 84, 87], "arik": [15, 52, 84, 87], "t": [15, 16, 22, 25, 30, 52, 53, 59, 62, 67, 69, 84, 87, 90, 91, 94, 96], "pfister": [15, 52, 84, 87], "2019": [15, 19, 21, 26, 52, 56, 58, 63, 84, 85, 87, 89, 91, 96], "1909": [15, 52, 84, 87], "11671": [15, 52, 84, 87], "hidden_dim": [15, 52, 87, 96], "hidden": [15, 52, 87, 96], "rl": [15, 52, 87], "multilay": [15, 52, 87, 96], "perceptron": [15, 52, 87, 96], "estim": [15, 18, 20, 52, 55, 57, 87, 88, 91, 92, 95], "ve": [15, 52, 87], "detail": [15, 52, 87], "datavalueestimatorrl": [15, 52, 87], "layer_numb": [15, 52, 87], "layer": [15, 52, 84, 87, 96], "5": [15, 52, 67, 87, 88, 91, 96], "comb_dim": [15, 52, 87], "after": [15, 52, 79, 83, 87, 92, 95], "how": [15, 17, 52, 54, 83, 85, 87, 90, 92], "mani": [15, 52, 87], "much": [15, 17, 52, 54, 85, 87, 90], "10": [15, 21, 52, 58, 82, 84, 87, 89, 96], "rl_epoch": [15, 52, 87], "epoch": [15, 17, 26, 52, 54, 63, 67, 85, 87, 91, 96], "rl_batch_siz": [15, 52, 87], "batch": [15, 21, 52, 58, 67, 87, 89, 90, 96], "size": [15, 21, 52, 58, 67, 84, 87, 89, 90, 95, 96], "32": [15, 21, 52, 58, 67, 87, 89, 96], "lr": [15, 52, 87, 96], "rate": [15, 52, 67, 87, 96], "01": [15, 52, 67, 87, 96], "search": [15, 52, 87, 95], "mai": [15, 52, 87, 91], "get": [15, 52, 83, 84, 86, 87, 90, 91], "stuck": [15, 52, 87], "certain": [15, 52, 85, 87], "bound": [15, 52, 87], "close": [15, 20, 52, 57, 87, 88], "thu": [15, 52, 84, 87, 95], "encourag": [15, 52, 87], "9": [15, 52, 82, 87], "devic": [15, 22, 32, 52, 59, 71, 85, 87, 90, 95, 96], "acceler": [15, 22, 32, 52, 59, 71, 87, 90, 95, 96], "cpu": [15, 22, 32, 52, 59, 71, 85, 87, 90, 95, 96], "type": [15, 22, 32, 52, 59, 71, 82, 83, 84, 87, 90, 95, 96], "banzhaf": [16, 53, 85, 88], "wang": [16, 22, 53, 59, 90, 91], "r": [16, 21, 22, 23, 53, 58, 59, 60, 84, 85, 87, 89, 90, 91], "jia": [16, 21, 22, 53, 58, 59, 85, 89, 90, 91], "robust": [16, 25, 53, 62, 82, 91, 94], "2205": [16, 53, 91], "15466": [16, 53, 91], "comput": [16, 17, 20, 26, 53, 54, 57, 63, 79, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96], "abstract": [17, 26, 31, 54, 63, 70, 85, 91, 96], "evalu": [17, 18, 20, 22, 25, 27, 28, 54, 55, 57, 59, 62, 65, 66, 67, 78, 79, 82, 86, 87, 88, 90, 91, 92, 94, 95, 96], "facilit": [17, 54, 85], "follow": [17, 25, 49, 54, 62, 79, 80, 83, 85, 87, 89, 90, 94, 95], "exampl": [17, 18, 20, 29, 30, 33, 54, 55, 57, 68, 69, 72, 85, 88, 92, 96], "work": [17, 49, 54, 83, 85], "input_model": [17, 54, 85], "input_metr": [17, 54, 85], "metric": [17, 18, 22, 25, 27, 54, 55, 59, 62, 65, 81, 85, 86, 90, 92, 94, 95], "input_data": [17, 54, 82, 85, 86, 87, 88, 91, 92, 94], "x_train": [17, 25, 54, 62, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96], "x_valid": [17, 54, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95], "train_data_valu": [17, 54, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "batch_siz": [17, 21, 54, 58, 85, 89, 90, 96], "evaluate_data_valu": [17, 54, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "davaevalu": [17, 54, 85], "posit": [17, 32, 54, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96], "argument": [17, 27, 32, 54, 65, 67, 71, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96], "kei": [17, 27, 32, 54, 65, 67, 71, 83, 85, 86, 87, 88, 89, 91, 92, 95, 96], "pred_model": [17, 27, 54, 65, 82, 85, 95], "find": [17, 20, 54, 57, 78, 85, 88, 91, 93, 94, 95], "each": [17, 20, 54, 57, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "datum": [17, 54, 85], "toward": [17, 54, 85], "data_valu": [17, 54, 85], "exper_method": [17, 49, 54, 64, 82, 85], "out": [18, 23, 55, 60, 80, 85, 86, 87, 88, 91, 92, 94], "compar": [18, 27, 55, 65, 78, 79, 85, 90, 92, 95], "across": [18, 55, 78, 88, 91, 92], "sever": [18, 55, 64, 78, 82, 92, 95, 96], "includ": [18, 55, 78, 80, 88, 91, 92], "accuraci": [18, 20, 27, 55, 57, 65, 82, 84, 88, 92, 95], "l2": [18, 55, 92], "distanc": [18, 55, 90, 92], "oob": [18, 55, 85], "simpl": [18, 55, 87, 91, 92], "effici": [18, 21, 55, 58, 85, 87, 89, 90, 91, 92], "2023": [18, 22, 55, 59, 80, 90, 92], "2304": [18, 55, 92], "07718": [18, 55, 92], "sample_s": [18, 55, 92], "len": [18, 25, 55, 62, 83, 92, 94, 96], "ghorbani": [19, 26, 56, 63, 84, 91], "equit": [19, 26, 56, 63, 84, 91], "1904": [19, 26, 56, 63, 84, 91], "02868": [19, 26, 56, 63, 84, 91], "influenc": [20, 57, 85, 95], "through": [20, 57, 84, 87, 88, 96], "relat": [20, 57, 67, 88, 96], "subsampl": [20, 57, 88, 90], "v": [20, 57, 84, 88, 95, 96], "feldman": [20, 57, 88, 95], "c": [20, 25, 57, 62, 80, 84, 88, 94, 95], "what": [20, 57, 83, 88, 95, 96], "neural": [20, 25, 34, 35, 36, 57, 62, 73, 74, 75, 88, 94, 95, 96], "network": [20, 34, 35, 36, 57, 73, 74, 75, 88, 95, 96], "memor": [20, 57, 88, 95], "why": [20, 57, 88, 95], "discov": [20, 57, 88, 95], "long": [20, 57, 84, 88, 95], "tail": [20, 57, 88, 95], "2020": [20, 57, 84, 88, 90, 95], "2008": [20, 57, 88, 95], "03703": [20, 57, 88, 95], "cardin": [20, 57, 88, 91], "subset": [20, 57, 83, 86, 88, 90, 91, 95], "p": [20, 57, 84, 87, 88, 90, 96], "7": [20, 57, 88], "knn": [21, 58, 85, 89, 95], "mixin": [21, 34, 35, 36, 58, 73, 74, 75, 85, 89], "mean": [21, 58, 67, 82, 89, 95, 96], "cannot": [21, 58, 89], "underli": [21, 58, 85, 89], "dataevalu": [21, 24, 25, 27, 28, 49, 58, 61, 62, 64, 65, 66, 67, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "howev": [21, 58, 78, 89], "pretrain": [21, 58, 89, 96], "embed": [21, 58, 83, 84, 85, 89, 90, 96], "et": [21, 58, 85, 86, 89, 90], "al": [21, 58, 85, 86, 89, 90], "task": [21, 58, 78, 79, 84, 85, 89, 96], "nearest": [21, 58, 85, 89], "neighbor": [21, 58, 85, 89], "algorithm": [21, 22, 25, 58, 59, 62, 67, 78, 84, 85, 87, 89, 90, 94, 96], "1908": [21, 58, 85, 89], "08619": [21, 58, 85, 89], "k_neighbor": [21, 58, 89], "group": [21, 27, 58, 65, 85, 89, 95], "time": [21, 27, 28, 58, 65, 66, 82, 84, 89, 90, 91, 95, 96], "embedding_model": [21, 22, 58, 59, 85, 89], "pre": [21, 22, 58, 59, 84, 87, 89, 90, 95, 96], "lava": [22, 59, 85], "h": [22, 59, 90], "just": [22, 59, 78, 83, 84, 90, 96], "f": [22, 59, 90, 95], "kang": [22, 59, 90], "zeng": [22, 59, 90], "ko": [22, 59, 90], "jin": [22, 59, 90], "without": [22, 59, 80, 85, 88, 90, 96], "openreview": [22, 59, 90], "net": [22, 59, 90, 96], "forum": [22, 59, 90], "id": [22, 59, 84, 90, 96], "jjup86nbl4q": [22, 59, 90], "modellessmixin": [22, 25, 59, 62, 85, 89, 90, 94], "doesn": [22, 25, 59, 62, 90, 94, 96], "requir": [22, 25, 59, 62, 83, 90, 94, 95, 96], "leav": [23, 60, 91], "cook": [23, 60, 91], "detect": [23, 60, 79, 91], "influenti": [23, 60, 91], "observ": [23, 60, 91], "linear": [23, 60, 91], "regress": [23, 33, 60, 67, 72, 84, 86, 91, 96], "technometr": [23, 60, 91], "vol": [23, 25, 60, 62, 87, 91, 94, 96], "19": [23, 60, 91], "No": [23, 60, 91], "feb": [23, 60, 91], "1977": [23, 60, 91], "pp": [23, 25, 60, 62, 87, 91, 94, 96], "15": [23, 60, 91], "18": [23, 60, 91], "page": [23, 60, 91], "complet": [24, 61, 93, 95], "baselin": [24, 61, 93], "comparison": [24, 61, 93], "purpos": [24, 61, 80, 93], "gener": [24, 61, 76, 82, 83, 84, 93, 96], "uniform": [24, 61, 88, 91, 93], "volum": [25, 62, 85], "while": [25, 62, 94], "tmc": [25, 62, 94], "semivalu": [25, 26, 62, 63, 91, 94], "doe": [25, 62, 93, 94, 95], "instead": [25, 32, 62, 71, 90, 94, 95, 96], "fix": [25, 62, 94], "taken": [25, 62, 90, 94], "closer": [25, 62, 94], "here": [25, 62, 79, 87, 94, 96], "github": [25, 62, 78, 89, 90, 94], "com": [25, 62, 84, 89, 90, 94], "zhaoxuanwu": [25, 62, 94], "volumebas": [25, 62, 94], "datavalu": [25, 62, 94], "tree": [25, 62, 84, 94], "main": [25, 62, 87, 90, 94], "xu": [25, 62, 94], "z": [25, 62, 94], "wu": [25, 62, 94], "foo": [25, 62, 94], "b": [25, 62, 82, 90, 94], "kian": [25, 62, 94], "free": [25, 62, 80, 94], "replic": [25, 62, 82, 94], "base": [25, 26, 32, 62, 63, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "advanc": [25, 62, 94], "inform": [25, 62, 87, 94], "process": [25, 62, 87, 94], "system": [25, 62, 78, 94], "34": [25, 62, 94], "10837": [25, 62, 94], "10848": [25, 62, 94], "dec": [25, 62, 94], "equal": [25, 62, 85, 94, 95], "trade": [25, 62, 94], "off": [25, 62, 94], "more": [25, 62, 83, 94, 96], "refin": [25, 62, 94], "represent": [25, 62, 87, 94], "divers": [25, 62, 78, 94], "greater": [25, 62, 83, 94, 95], "omega": [25, 62, 94], "width": [25, 62, 94], "discret": [25, 62, 94], "coeffici": [25, 62, 86, 90, 94], "d": [25, 62, 84, 90, 94, 95], "cube": [25, 62, 94], "train_kwarg": [27, 65, 95], "metric_nam": [27, 65, 95], "output_dir": [27, 65, 95], "timedelta": [27, 65, 95], "exper_func": [27, 65, 95], "noisi": [27, 65, 79, 83, 95], "perform": [27, 28, 65, 66, 78, 82, 85, 86, 87, 88, 91, 95, 96], "string": [27, 65, 82, 84, 95], "better": [27, 65, 87, 95], "union": [27, 65, 83, 85, 95], "pathlib": [27, 65, 95], "output": [27, 65, 76, 79, 82, 95, 96], "plot": [28, 66, 95], "base_model": [29, 30, 33, 68, 69, 72, 96], "num_class": [29, 30, 68, 69, 96], "wrapper": [29, 30, 33, 68, 69, 72, 82, 83, 85], "sk": [29, 30, 33, 68, 69, 72, 96], "classifi": [29, 30, 34, 68, 69, 73, 79, 84, 95, 96], "linearregress": [29, 33, 68, 72, 96], "basemodel": [29, 30, 33, 68, 69, 72, 96], "support": [29, 30, 33, 68, 69, 72, 96], "sample_weight": [29, 30, 33, 68, 69, 72, 96], "dimension": [29, 30, 68, 69, 87, 95, 96], "don": [30, 69, 96], "classifiersklearnwrapp": [30, 69, 96], "kneighborsclassifi": [30, 69, 96], "templat": [31, 70, 96], "model_nam": [32, 71, 95, 96], "factori": [32, 71, 96], "preset": [32, 71, 95, 96], "mode": [32, 71, 96], "recommend": [32, 71, 91, 96], "import": [32, 71, 78, 79, 87, 96], "addit": [32, 71, 83, 87, 95, 96], "reli": [32, 71, 96], "typic": [32, 71, 96], "besid": [32, 71, 96], "first": [32, 71, 90, 95, 96], "some": [32, 71, 96], "do": [32, 71, 80, 96], "constructor": [32, 71, 84, 96], "except": [32, 71, 96], "match": [32, 71, 89, 96], "intern": [34, 35, 36, 73, 74, 75, 84], "share": [34, 35, 36, 73, 74, 75, 85], "both": [34, 35, 36, 73, 74, 75], "nn": [34, 35, 36, 73, 74, 75, 95, 96], "scriptmodul": [34, 35, 36, 73, 74, 75], "regressor": [36, 75, 96], "version": [37, 78, 84, 90, 95, 96], "releas": [37, 78], "new": [38, 82, 83], "To": [38, 83], "Then": [38, 83], "u": [38, 83, 84], "flexibl": [38, 83], "call": [38, 83, 84], "later": [38, 83], "quantifi": [49, 78, 82, 85], "abc": [49, 67, 85, 91, 96], "inherit": [49, 82, 85], "flow": [49, 85, 90], "run": [64, 79, 82, 95], "experimentmedi": [64, 76, 82, 95], "exist": [67, 96], "compat": [67, 96], "newcommand": [67, 96], "rule": [67, 96], "0pt": [67, 96], "1em": [67, 96], "3em": [67, 96], "begin": [67, 79, 96], "llll": [67, 96], "hline": [67, 96], "textbf": [67, 96], "mbox": [67, 96], "logist": [67, 96], "ye": [67, 96], "optim": [67, 90, 95, 96], "adam": [67, 96], "loss": [67, 87, 90, 96], "cross": [67, 96], "entropi": [67, 90, 96], "mlp": [67, 82, 87], "classif": [67, 84, 96], "bert": [67, 82, 83, 84, 87], "001": [67, 96], "adamw": [67, 96], "lenet": [67, 82], "squar": [67, 90, 96], "end": [67, 96], "datafram": [76, 82, 83, 95], "csv": [76, 79, 82, 83, 95], "recreat": [77, 82], "result": [77, 82, 84, 95], "link": [78, 90], "instal": 78, "repositori": [78, 84, 90], "issu": [78, 90], "tracker": 78, "open": 78, "imag": [78, 84, 87, 96], "tabular": [78, 87], "algorithim": [78, 85], "few": [78, 96], "line": 78, "code": 78, "assess": 78, "qualiti": 78, "impact": 78, "individu": 78, "critic": 78, "improv": 78, "mitig": 78, "undesir": 78, "bias": [78, 87], "been": [78, 83, 85, 91, 96], "propos": 78, "lack": 78, "standard": [78, 82, 83], "benchmark": [78, 84], "paper": [78, 84, 90, 95, 97], "introduc": [78, 87], "easi": 78, "empow": 78, "research": 78, "practition": 78, "variou": [78, 90], "integr": 78, "environ": 78, "collect": [78, 92], "natur": 78, "languag": [78, 84, 96], "ii": [78, 87], "nine": 78, "differ": [78, 83, 86, 87, 88, 90, 91, 95], "art": 78, "iii": 78, "scikit": 78, "furthermor": 78, "four": 78, "downstream": [78, 84], "analysi": [78, 84, 96], "efficaci": 78, "approach": [78, 91], "singl": 78, "uniformli": 78, "best": 78, "appropri": [78, 87], "emploi": 78, "publicli": 78, "io": 78, "comprehens": 78, "leaderboard": 78, "own": [78, 82, 84, 96], "save": [79, 83, 84, 95], "upload": 79, "challeng": [79, 83], "your": [79, 82, 84, 96], "receiv": 79, "abov": [79, 80, 95], "googl": [79, 84], "form": [79, 88, 94], "appear": 79, "prefix": 79, "submit": 79, "save_datav": [79, 95], "dataload": [79, 82, 95], "iri": [79, 83, 84], "f1": [79, 95], "score": [79, 95], "identifi": [79, 82, 95], "2mean": 79, "mit": [80, 84], "copyright": 80, "anonym": 80, "author": 80, "3": [80, 87, 90, 91], "permiss": 80, "herebi": 80, "grant": 80, "charg": 80, "person": 80, "obtain": 80, "copi": [80, 96], "softwar": 80, "associ": [80, 84, 95, 96], "document": [80, 84, 96], "deal": 80, "restrict": 80, "limit": 80, "right": 80, "modifi": [80, 87], "merg": 80, "publish": 80, "sublicens": 80, "sell": 80, "permit": 80, "whom": 80, "furnish": 80, "subject": 80, "condit": [80, 96], "notic": 80, "shall": 80, "substanti": 80, "portion": 80, "THE": 80, "AS": 80, "warranti": 80, "OF": 80, "kind": 80, "express": 80, "OR": 80, "impli": 80, "BUT": 80, "NOT": [80, 84], "TO": 80, "merchant": 80, "FOR": 80, "particular": 80, "AND": 80, "noninfring": 80, "IN": 80, "NO": 80, "event": 80, "holder": 80, "BE": 80, "liabl": 80, "claim": 80, "damag": 80, "liabil": 80, "action": 80, "contract": 80, "tort": 80, "otherwis": [80, 89, 90, 91], "aris": [80, 85], "connect": 80, "WITH": 80, "packag": 81, "subpackag": 81, "submodul": 81, "content": 81, "noisifi": 82, "datav": [82, 95], "logistic_regress": 82, "qualnam": [82, 83], "start": [82, 83, 92], "boundari": [82, 83], "funcenum": [82, 83], "neg_l2": 82, "neg_ms": 82, "two": [82, 87, 90], "strenum": 82, "enum": 82, "static": [82, 83], "func": [82, 83, 84], "callabl": [82, 83, 84, 85, 90, 95, 96], "seen": 82, "convers": 82, "meanstdtim": 82, "elapsed_tim": 82, "format": 82, "paramsweep": 82, "sweep": 82, "kwargs_list": 82, "python3": 82, "load_mediator_output": 82, "set_random_st": 82, "worth": 82, "easili": 82, "extend": 82, "wai": [82, 85], "determin": [82, 85, 90, 95], "cleanlab": 83, "imageset": 83, "nlpset": 83, "properti": [83, 85, 96], "covar": 83, "datasets_avail": 83, "export_dataset": 83, "covariates_nam": 83, "labels_nam": 83, "output_directori": [83, 95], "posixpath": [83, 95], "home": 83, "runner": 83, "doc": 83, "classmethod": [83, 95], "from_data": 83, "therefor": 83, "alreadi": [83, 87, 91], "flag": 83, "map": 83, "from_data_split": 83, "x_test": [83, 95], "y_test": [83, 95], "add_nois": [83, 95], "self": [83, 84, 85, 94, 95, 96], "noise_arg": 83, "noise_kwarg": [83, 95], "signifi": 83, "chang": [83, 84, 95, 96], "made": [83, 95, 96], "those": [83, 86, 95], "setup": [83, 85], "train_count": [83, 95], "valid_count": [83, 95], "test_count": [83, 95], "split_dataset_by_count": 83, "count": [83, 94], "invalid": 83, "either": [83, 84, 85], "split_dataset_by_indic": 83, "train_indic": 83, "sequenc": [83, 95, 96], "valid_indic": 83, "test_indic": 83, "leak": 83, "least": [83, 95], "split_dataset_by_prop": 83, "train_prop": 83, "valid_prop": 83, "test_prop": 83, "noisefunc": 83, "add_gauss_nois": 83, "mix_label": [83, 95], "mu": 83, "sigma": 83, "gaussian": [83, 84, 90], "center": 83, "deviat": 83, "data_fil": 83, "classvar": [83, 85, 91, 96], "2dplane": [83, 84], "miniboon": [83, 84], "adult": [83, 84], "bbc": [83, 84], "breast_canc": [83, 84], "cifar10": [83, 84], "val": [83, 84, 95], "cifar100": [83, 84], "creditcard": [83, 84], "diabet": [83, 84], "digit": [83, 84, 96], "echomonth": [83, 84], "elect": [83, 84], "electr": [83, 84], "fashion": [83, 84], "fri": [83, 84], "gaussian_classifi": [83, 84], "gaussian_classifier_high_dim": 83, "imagenet": [83, 84], "imdb": [83, 84], "linnerud": [83, 84], "lowbwt": [83, 84], "mnist": [83, 84], "mv": [83, 84], "nomao": [83, 84], "pol": [83, 84], "stl10": [83, 84], "stock": [83, 84], "svhn": [83, 84], "wave_energi": [83, 84], "add_covar_transform": 83, "add_label_transform": 83, "from_covar_func": 83, "from_covar_label_func": 83, "from_csv": 83, "label_column": 83, "from_label_func": 83, "from_numpi": 83, "from_panda": 83, "df": [83, 95], "frame": [83, 95], "load_data": 83, "one_hot_encod": 83, "catdataset": 83, "indextransformdataset": 83, "t_co": 83, "index_transform": 83, "primarili": 83, "__getitem__": 83, "well": [83, 96], "listdataset": [83, 84], "input_list": 83, "want": 83, "back": 83, "around": 83, "intend": [83, 84, 90], "axi": [83, 95], "variabl": [83, 87], "token": [83, 96], "onli": [83, 90, 95, 96], "challenge_url": 84, "yongchanstat": 84, "backend": 84, "drive": 84, "basenam": 84, "download_dr": 84, "drive_id": 84, "retri": 84, "attempt": 84, "iris_challeng": 84, "clean": 84, "lab": 84, "correct": [84, 95], "most": [84, 95], "common": 84, "ml": 84, "cifar": 84, "caltech": 84, "256": [84, 87, 90], "quickdraw": 84, "amazon": 84, "review": 84, "20new": 84, "audioset": 84, "These": 84, "perfect": 84, "nor": 84, "g": [84, 87, 90, 95], "northcutt": 84, "athaly": 84, "mueller": 84, "pervas": 84, "destabil": 84, "onlin": 84, "2103": 84, "14749": 84, "under": [84, 85], "construct": 84, "cleanlabimagenet": 84, "root": 84, "deng": 84, "w": [84, 90, 91, 96], "dong": 84, "socher": 84, "lj": 84, "k": [84, 95, 96], "l": [84, 96], "fei": 84, "larg": [84, 87], "scale": [84, 96], "hierarch": 84, "databas": 84, "jun": 84, "2009": 84, "doi": [84, 87, 96], "1109": [84, 96], "cvpr": 84, "5206848": 84, "visionadapt": 84, "vision": 84, "cifar100_emb": 84, "resnet50": 84, "cifar10_emb": 84, "imagenet_emb": 84, "download_2dplan": 84, "download_miniboon": 84, "download_adult": 84, "binari": [84, 95], "categori": 84, "incom": 84, "dvrl": [84, 85], "kohavi": 84, "naiv": [84, 87], "bay": 84, "decis": 84, "hybrid": 84, "proceed": [84, 96], "second": [84, 90, 95], "confer": 84, "knowledg": 84, "discoveri": [84, 95], "mine": 84, "1996": 84, "sercan": [84, 87], "o": [84, 87, 95], "download_breast_canc": 84, "download_creditcard": 84, "download_diabet": 84, "download_digit": 84, "download_echomonth": 84, "download_elect": 84, "presidenti": 84, "scienc": 84, "e": [84, 87, 90], "presid": 84, "1976": 84, "harvard": 84, "datavers": 84, "2017": [84, 95], "7910": 84, "dvn": 84, "42mvdx": 84, "download_electr": 84, "download_fri": 84, "download_iri": 84, "download_linnerud": 84, "download_lowbwt": 84, "download_mv": 84, "download_nomao": 84, "download_pol": 84, "download_stock": 84, "download_wave_energi": 84, "10000": 84, "input_dim": [84, 96], "artifici": 84, "load_openml": 84, "data_id": 84, "is_classif": 84, "openml": 84, "help": [84, 96], "resnetembed": 84, "dataset_class": 84, "visiondataset": 84, "224": 84, "convert": [84, 96], "pil": 84, "color": [84, 96], "done": 84, "vector": [84, 90], "extract": [84, 87], "avgpool": 84, "hook": 84, "featur": [84, 90, 94], "he": 84, "ren": 84, "sun": 84, "residu": 84, "recognit": [84, 96], "2016": 84, "ieee": [84, 96], "pattern": 84, "90": 84, "image_set": 84, "resiz": 84, "adapt": 84, "__call__": 84, "show_imag": 84, "img": 84, "displai": [84, 95], "stl10_emb": 84, "svhn_emb": 84, "bertembed": 84, "text": [84, 87], "pool": 84, "distilbert": [84, 96], "see": [84, 96], "below": [84, 87, 95, 96], "sentenc": [84, 96], "It": [84, 90], "equival": [84, 91], "frozen": 84, "advis": 84, "locat": 84, "py": [84, 89, 95], "faster": [84, 96], "devlin": [84, 96], "lee": [84, 96], "toutanova": [84, 96], "bidirect": [84, 96], "understand": [84, 96], "2018": [84, 96], "1810": [84, 96], "04805": [84, 96], "sanh": [84, 96], "debut": [84, 96], "chaumond": [84, 96], "wolf": [84, 96], "distil": [84, 96], "smaller": [84, 96], "cheaper": [84, 96], "lighter": [84, 96], "1910": [84, 96], "01108": [84, 96], "max_dataset_s": 84, "2000": 84, "cap": 84, "bbc_embed": 84, "download_bbc": 84, "articl": [84, 97], "green": 84, "cunningham": 84, "practic": 84, "solut": [84, 90], "problem": [84, 90, 96], "diagon": 84, "domin": 84, "kernel": [84, 90, 96], "cluster": [84, 95], "proc": 84, "icml": 84, "2006": 84, "download_imdb": 84, "sentiment": 84, "neg": 84, "maa": 84, "dali": 84, "pham": 84, "huang": 84, "ng": 84, "pott": 84, "49th": 84, "annual": 84, "meet": 84, "linguist": 84, "2011": 84, "imdb_embed": 84, "am": 85, "knnshap": 85, "otdd": 85, "margcontrib": 85, "betashap": 85, "datashap": 85, "loo": 85, "shap": 85, "rv": 85, "baggingevalu": [85, 86], "betashaplei": [85, 91], "databanzhaf": [85, 91], "databanzhafmargcontrib": [85, 91], "dataoob": [85, 92], "datashaplei": [85, 91], "influencefunctionev": [85, 88], "knnshaplei": [85, 89], "lavaevalu": [85, 90], "leaveoneout": [85, 91], "randomevalu": [85, 93], "robustvolumeshaplei": [85, 94], "shapevalu": [85, 91], "y_hat": [85, 87], "between": [85, 87, 90], "move": [85, 96], "becaus": [85, 95], "bug": [85, 90], "store": [85, 86, 87, 88, 90, 91, 92, 94], "held": [85, 86, 87, 88, 91, 92, 94], "input_fetch": 85, "altern": [85, 95], "input_model_metr": 85, "iput": 85, "contain": [85, 95, 96], "assign": [85, 87], "mse": [85, 96], "acc": 85, "predictiong": 85, "ruoxi": 85, "unus": [85, 92, 94], "seri": 85, "against": 85, "tuppl": 85, "lasso": 86, "accord": [86, 91], "everi": [86, 88, 91, 92, 94], "bernouli": 86, "bernoulli": [86, 87], "get_subset_perf": 86, "correspond": [86, 90, 95], "num_work": 87, "probabl": [87, 90, 96], "signal": 87, "worker": 87, "x_dim": 87, "y_dim": 87, "assum": [87, 95], "multi": [87, 96], "architectur": 87, "relev": 87, "high": [87, 95], "induct": 87, "case": 87, "last": [87, 90, 96], "activ": [87, 96], "resnet": 87, "top": 87, "simpli": 87, "come": 87, "predictor": [87, 91], "entir": 87, "definit": 87, "bia": 87, "convolut": [87, 96], "attent": [87, 96], "flatten": 87, "dveloss": 87, "exploration_weight": 87, "custom": 87, "bce": 87, "explor": [87, 95], "constant": 87, "1e3": 87, "pred_datav": 87, "selector_input": 87, "reward_input": 87, "multipli": [87, 91], "reward": 87, "william": 87, "gradient": [87, 90, 96], "connectionist": 87, "8": 87, "229": 87, "1992": 87, "1007": 87, "bf00992696": 87, "full": [87, 90], "minu": [88, 91], "similar": [88, 90], "math": 88, "likewis": 88, "row": [89, 95], "ignor": 89, "ai": 89, "secur": 89, "studi": 89, "blob": 89, "master": 89, "knn_shaplei": 89, "calibr": 90, "dual": 90, "interpret": 90, "wise": 90, "wasserstein": 90, "alvarez": 90, "meli": 90, "fusi": 90, "geometr": 90, "transport": 90, "2002": 90, "02923": 90, "dynam": 90, "space": 90, "2010": 90, "12760": 90, "macos_fix": 90, "geomloss": 90, "maco": 90, "remedi": 90, "nvlab": 90, "stylegan3": 90, "75": 90, "exact": [90, 95], "repo": 90, "strict": 90, "legaci": 90, "notat": 90, "x1": 90, "x2": 90, "y1": 90, "y2": 90, "n1": 90, "n2": 90, "d1": 90, "d2": 90, "c1": 90, "c2": 90, "datasetdist": 90, "feature_cost": 90, "liter": 90, "euclidean": 90, "entreg": 90, "lam_x": 90, "lam_i": 90, "inner_ot_loss": 90, "sinkhorn": 90, "inner_ot_debias": 90, "inner_ot_p": 90, "inner_ot_entreg": 90, "instanti": 90, "target": 90, "cost": 90, "ot": 90, "strength": 90, "regular": 90, "compon": 90, "debias": 90, "inner": 90, "dual_sol": 90, "note": [90, 95, 96], "current": [90, 95, 96], "fulli": 90, "memori": 90, "avoid": 90, "dist": 90, "pi": 90, "coupl": 90, "featurecost": 90, "src_embed": 90, "tgt_embed": 90, "src_dim": 90, "tgt_dim": 90, "batch_augmented_cost": 90, "z1": 90, "z2": 90, "ground": 90, "augment": 90, "dim": [90, 96], "v1": 90, "v2": 90, "precomput": 90, "pairwis": 90, "matrix": [90, 94], "expect": [90, 95], "congruent": 90, "power": 90, "extract_dataset": 90, "x_input": 90, "y_input": 90, "reindex_start": 90, "reindex": 90, "offset": 90, "x_tensor": 90, "stack": [90, 92], "along": 90, "y_tensor": 90, "longer": 90, "pwdist_exact": 90, "symmetr": 90, "cost_funct": 90, "debia": 90, "multipl": 90, "assumpt": 90, "treat": 90, "iif": 90, "diverg": [90, 95], "interpol": 90, "blur": 90, "infti": 90, "tfrac": 90, "1e": 90, "powerset": 91, "previou": 91, "minim": 91, "compute_weight": 91, "combin": 91, "respect": [91, 94, 95, 96], "equat": 91, "frac": 91, "tbinom": 91, "propto": 91, "gr_max": 91, "maximum": 91, "burn": 91, "calcul": 91, "look": [91, 95], "scratch": 91, "marginal_increment_array_stack": 91, "increment": [91, 92], "Of": 92, "groupingindex": 92, "defaultdict": 92, "insert": 92, "add_indic": 92, "record": 92, "return": 93, "randomev": 93, "compute_robust_volum": 94, "x_tild": 94, "hypercub": 94, "compute_x_tilde_and_count": 94, "compress": 94, "dcube": 94, "compute_data_valu": 95, "data_evalu": 95, "include_train": 95, "save_output": 95, "exper_kwarg": 95, "wether": 95, "eval_kwarg": 95, "pd": 95, "model_factory_setup": 95, "mtrand": 95, "modelfactori": [95, 96], "loader": 95, "model_factori": 95, "ax": 95, "figur": 95, "col": 95, "core": 95, "matplotlib": 95, "fig": 95, "subplot": 95, "num_evalu": 95, "column": 95, "set_output_directori": 95, "init": 95, "discover_corrupted_sampl": 95, "percentil": 95, "low": 95, "repeatedli": 95, "found": 95, "addition": 95, "valuabl": 95, "corrupt_found": 95, "corrupt": 95, "inspect": 95, "until": 95, "exhaust": 95, "were": 95, "randomli": 95, "corrupted_sampl": 95, "increasing_bin_remov": 95, "bin_siz": 95, "remov": 95, "inspir": 95, "principl": 95, "bin": 95, "cutoff": 95, "examin": 95, "consid": 95, "frac_datapoints_explor": 95, "_at_datavalu": 95, "noisy_detect": 95, "abil": 95, "2nn": 95, "kmean": 95, "convex": 95, "highest": 95, "lowest": 95, "belong": 95, "zero": [95, 96], "kmeans_f1": 95, "1d": 95, "lower": 95, "higher": [95, 96], "remove_high_low": 95, "remove_least_influential_first_": 95, "remove_most_influential_first_": 95, "output_path": 95, "f1_score": 95, "actual": 95, "oned_twonn_clust": 95, "nlog": 95, "sort": 95, "gr\u00f8nlund": 95, "larsen": 95, "mathiasen": 95, "nielsen": 95, "schneider": 95, "song": 95, "fast": 95, "median": 95, "bregman": 95, "1701": 95, "07204": 95, "repres": [95, 96], "dummi": 96, "mlpclassifi": 96, "predict_proba": 96, "classifierunweightedsklearnwrapp": 96, "bertclassifi": 96, "classifiermlp": 96, "logisticregress": 96, "regressionmlp": 96, "regressionsklearnwrapp": 96, "torchclassmixin": 96, "torchpredictmixin": 96, "torchregressmixin": 96, "clone": 96, "often": 96, "consist": 96, "sklearn": 96, "insuffici": 96, "dummyregressor": 96, "num_sampl": 96, "to_numpi": 96, "mini": 96, "pretrained_model_nam": 96, "uncas": 96, "dropout_r": 96, "num_train_lay": 96, "fine": 96, "tune": 96, "meant": 96, "onto": 96, "dropout": 96, "input_id": 96, "attention_mask": 96, "applic": 96, "token_type_id": 96, "fed": 96, "co": 96, "glossari": 96, "attend": 96, "mask": 96, "tensordataset": 96, "reflect": 96, "depth": 96, "return_attention_mask": 96, "model_input_nam": 96, "non": 96, "aren": 96, "return_token_type_id": 96, "gray_scal": 96, "5x5": 96, "earliest": 96, "conceiv": 96, "cnn": 96, "particularli": 96, "lecun": 96, "bottou": 96, "bengio": 96, "haffner": 96, "86": 96, "11": 96, "2278": 96, "2324": 96, "1998": 96, "726791": 96, "grai": 96, "disabl": 96, "risk": 96, "25": 96, "act_fn": 96, "relu": 96}, "objects": {"": [[82, 0, 0, "-", "opendataval"]], "opendataval": [[37, 1, 1, "", "__version__"], [83, 0, 0, "-", "dataloader"], [85, 0, 0, "-", "dataval"], [95, 0, 0, "-", "experiment"], [82, 0, 0, "-", "metrics"], [96, 0, 0, "-", "model"], [82, 0, 0, "-", "util"]], "opendataval.dataloader": [[39, 2, 1, "", "CatDataset"], [40, 2, 1, "", "DataFetcher"], [41, 2, 1, "", "Register"], [42, 4, 1, "", "cache"], [84, 0, 0, "-", "datasets"], [83, 0, 0, "-", "fetcher"], [47, 4, 1, "", "mix_labels"], [83, 0, 0, "-", "noisify"], [48, 4, 1, "", "one_hot_encode"], [83, 0, 0, "-", "register"], [83, 0, 0, "-", "util"]], "opendataval.dataloader.CatDataset": [[39, 3, 1, "", "__init__"]], "opendataval.dataloader.DataFetcher": [[40, 3, 1, "", "__init__"]], "opendataval.dataloader.Register": [[41, 3, 1, "", "__init__"]], "opendataval.dataloader.datasets": [[84, 0, 0, "-", "challenge"], [84, 0, 0, "-", "cleanlab"], [84, 0, 0, "-", "datasets"], [84, 0, 0, "-", "imagesets"], [84, 0, 0, "-", "nlpsets"]], "opendataval.dataloader.datasets.challenge": [[84, 1, 1, "", "CHALLENGE_URL"], [84, 4, 1, "", "basename"], [84, 4, 1, "", "download_drive"], [84, 4, 1, "", "iris_challenge"]], "opendataval.dataloader.datasets.cleanlab": [[84, 4, 1, "", "CleanLabImagenet"], [84, 1, 1, "", "cifar10"], [84, 1, 1, "", "cifar100"], [84, 4, 1, "", "cifar100_embed"], [84, 4, 1, "", "cifar10_embed"], [84, 1, 1, "", "imagenet"], [84, 4, 1, "", "imagenet_embed"]], "opendataval.dataloader.datasets.datasets": [[84, 4, 1, "", "download_2dplanes"], [84, 4, 1, "", "download_MiniBooNE"], [84, 4, 1, "", "download_adult"], [84, 4, 1, "", "download_breast_cancer"], [84, 4, 1, "", "download_creditcard"], [84, 4, 1, "", "download_diabetes"], [84, 4, 1, "", "download_digits"], [84, 4, 1, "", "download_echoMonths"], [84, 4, 1, "", "download_election"], [84, 4, 1, "", "download_electricity"], [84, 4, 1, "", "download_fried"], [84, 4, 1, "", "download_iris"], [84, 4, 1, "", "download_linnerud"], [84, 4, 1, "", "download_lowbwt"], [84, 4, 1, "", "download_mv"], [84, 4, 1, "", "download_nomao"], [84, 4, 1, "", "download_pol"], [84, 4, 1, "", "download_stock"], [84, 4, 1, "", "download_wave_energy"], [84, 4, 1, "", "gaussian_classifier"], [84, 4, 1, "", "load_openml"]], "opendataval.dataloader.datasets.imagesets": [[84, 4, 1, "", "ResnetEmbeding"], [84, 2, 1, "", "VisionAdapter"], [84, 1, 1, "", "cifar10"], [84, 1, 1, "", "cifar100"], [84, 4, 1, "", "cifar10_embed"], [84, 1, 1, "", "fashion"], [84, 1, 1, "", "numbers"], [84, 4, 1, "", "show_image"], [84, 4, 1, "", "stl10_embed"], [84, 4, 1, "", "svhn_embed"]], "opendataval.dataloader.datasets.nlpsets": [[84, 4, 1, "", "BertEmbeddings"], [84, 1, 1, "", "MAX_DATASET_SIZE"], [84, 4, 1, "", "bbc_embedding"], [84, 4, 1, "", "download_bbc"], [84, 4, 1, "", "download_imdb"], [84, 4, 1, "", "imdb_embedding"]], "opendataval.dataloader.fetcher": [[83, 2, 1, "", "DataFetcher"]], "opendataval.dataloader.fetcher.DataFetcher": [[83, 5, 1, "", "covar_dim"], [83, 5, 1, "", "datapoints"], [83, 3, 1, "", "datasets_available"], [83, 3, 1, "", "export_dataset"], [83, 3, 1, "", "from_data"], [83, 3, 1, "", "from_data_splits"], [83, 5, 1, "", "label_dim"], [83, 3, 1, "", "noisify"], [83, 5, 1, "", "num_points"], [83, 3, 1, "", "setup"], [83, 3, 1, "", "split_dataset_by_count"], [83, 3, 1, "", "split_dataset_by_indices"], [83, 3, 1, "", "split_dataset_by_prop"]], "opendataval.dataloader.noisify": [[83, 2, 1, "", "NoiseFunc"], [83, 4, 1, "", "add_gauss_noise"], [83, 4, 1, "", "mix_labels"]], "opendataval.dataloader.noisify.NoiseFunc": [[83, 6, 1, "", "ADD_GAUSS_NOISE"], [83, 6, 1, "", "MIX_LABELS"]], "opendataval.dataloader.register": [[83, 2, 1, "", "Register"], [83, 4, 1, "", "cache"], [83, 4, 1, "", "one_hot_encode"]], "opendataval.dataloader.register.Register": [[83, 6, 1, "", "CACHE_DIR"], [83, 6, 1, "", "Datasets"], [83, 3, 1, "", "add_covar_transform"], [83, 3, 1, "", "add_label_transform"], [83, 3, 1, "", "from_covar_func"], [83, 3, 1, "", "from_covar_label_func"], [83, 3, 1, "", "from_csv"], [83, 3, 1, "", "from_data"], [83, 3, 1, "", "from_label_func"], [83, 3, 1, "", "from_numpy"], [83, 3, 1, "", "from_pandas"], [83, 3, 1, "", "load_data"]], "opendataval.dataloader.util": [[83, 2, 1, "", "CatDataset"], [83, 2, 1, "", "IndexTransformDataset"], [83, 2, 1, "", "ListDataset"]], "opendataval.dataloader.util.IndexTransformDataset": [[83, 5, 1, "", "transform"]], "opendataval.dataval": [[50, 2, 1, "", "AME"], [51, 2, 1, "", "BetaShapley"], [52, 2, 1, "", "DVRL"], [53, 2, 1, "", "DataBanzhaf"], [54, 2, 1, "", "DataEvaluator"], [55, 2, 1, "", "DataOob"], [56, 2, 1, "", "DataShapley"], [57, 2, 1, "", "InfluenceFunctionEval"], [58, 2, 1, "", "KNNShapley"], [59, 2, 1, "", "LavaEvaluator"], [60, 2, 1, "", "LeaveOneOut"], [61, 2, 1, "", "RandomEvaluator"], [62, 2, 1, "", "RobustVolumeShapley"], [63, 2, 1, "", "ShapEvaluator"], [86, 0, 0, "-", "ame"], [85, 0, 0, "-", "api"], [87, 0, 0, "-", "dvrl"], [88, 0, 0, "-", "influence"], [89, 0, 0, "-", "knnshap"], [90, 0, 0, "-", "lava"], [91, 0, 0, "-", "margcontrib"], [92, 0, 0, "-", "oob"], [93, 0, 0, "-", "random"], [94, 0, 0, "-", "volume"]], "opendataval.dataval.AME": [[50, 3, 1, "", "__init__"]], "opendataval.dataval.BetaShapley": [[51, 3, 1, "", "__init__"]], "opendataval.dataval.DVRL": [[52, 3, 1, "", "__init__"]], "opendataval.dataval.DataBanzhaf": [[53, 3, 1, "", "__init__"]], "opendataval.dataval.DataEvaluator": [[54, 3, 1, "", "__init__"]], "opendataval.dataval.DataOob": [[55, 3, 1, "", "__init__"]], "opendataval.dataval.DataShapley": [[56, 3, 1, "", "__init__"]], "opendataval.dataval.InfluenceFunctionEval": [[57, 3, 1, "", "__init__"]], "opendataval.dataval.KNNShapley": [[58, 3, 1, "", "__init__"]], "opendataval.dataval.LavaEvaluator": [[59, 3, 1, "", "__init__"]], "opendataval.dataval.LeaveOneOut": [[60, 3, 1, "", "__init__"]], "opendataval.dataval.RandomEvaluator": [[61, 3, 1, "", "__init__"]], "opendataval.dataval.RobustVolumeShapley": [[62, 3, 1, "", "__init__"]], "opendataval.dataval.ShapEvaluator": [[63, 3, 1, "", "__init__"]], "opendataval.dataval.ame": [[86, 0, 0, "-", "ame"]], "opendataval.dataval.ame.ame": [[86, 2, 1, "", "AME"], [86, 2, 1, "", "BaggingEvaluator"]], "opendataval.dataval.ame.ame.AME": [[86, 3, 1, "", "evaluate_data_values"], [86, 3, 1, "", "train_data_values"]], "opendataval.dataval.ame.ame.BaggingEvaluator": [[86, 3, 1, "", "evaluate_data_values"], [86, 3, 1, "", "get_subset_perf"], [86, 3, 1, "", "input_data"], [86, 3, 1, "", "train_data_values"]], "opendataval.dataval.api": [[85, 2, 1, "", "DataEvaluator"], [85, 2, 1, "", "ModelLessMixin"]], "opendataval.dataval.api.DataEvaluator": [[85, 6, 1, "", "Evaluators"], [85, 5, 1, "", "data_values"], [85, 3, 1, "", "evaluate"], [85, 3, 1, "", "evaluate_data_values"], [85, 3, 1, "", "input_data"], [85, 3, 1, "", "input_fetcher"], [85, 3, 1, "", "input_metric"], [85, 3, 1, "", "input_model"], [85, 3, 1, "", "input_model_metric"], [85, 3, 1, "", "setup"], [85, 3, 1, "", "train"], [85, 3, 1, "", "train_data_values"]], "opendataval.dataval.api.ModelLessMixin": [[85, 3, 1, "", "embeddings"]], "opendataval.dataval.dvrl": [[87, 0, 0, "-", "dvrl"]], "opendataval.dataval.dvrl.dvrl": [[87, 2, 1, "", "DVRL"], [87, 2, 1, "", "DataValueEstimatorRL"], [87, 2, 1, "", "DveLoss"]], "opendataval.dataval.dvrl.dvrl.DVRL": [[87, 3, 1, "", "evaluate_data_values"], [87, 3, 1, "", "input_data"], [87, 3, 1, "", "train_data_values"]], "opendataval.dataval.dvrl.dvrl.DataValueEstimatorRL": [[87, 3, 1, "", "forward"]], "opendataval.dataval.dvrl.dvrl.DveLoss": [[87, 3, 1, "", "forward"]], "opendataval.dataval.influence": [[88, 0, 0, "-", "influence"]], "opendataval.dataval.influence.influence": [[88, 2, 1, "", "InfluenceFunctionEval"]], "opendataval.dataval.influence.influence.InfluenceFunctionEval": [[88, 3, 1, "", "evaluate_data_values"], [88, 3, 1, "", "input_data"], [88, 3, 1, "", "train_data_values"]], "opendataval.dataval.knnshap": [[89, 0, 0, "-", "knnshap"]], "opendataval.dataval.knnshap.knnshap": [[89, 2, 1, "", "KNNShapley"]], "opendataval.dataval.knnshap.knnshap.KNNShapley": [[89, 3, 1, "", "evaluate_data_values"], [89, 3, 1, "", "match"], [89, 3, 1, "", "train_data_values"]], "opendataval.dataval.lava": [[90, 0, 0, "-", "lava"], [90, 0, 0, "-", "otdd"]], "opendataval.dataval.lava.lava": [[90, 2, 1, "", "LavaEvaluator"], [90, 4, 1, "", "macos_fix"]], "opendataval.dataval.lava.lava.LavaEvaluator": [[90, 3, 1, "", "evaluate_data_values"], [90, 3, 1, "", "train_data_values"]], "opendataval.dataval.lava.otdd": [[90, 2, 1, "", "DatasetDistance"], [90, 2, 1, "", "FeatureCost"], [90, 4, 1, "", "batch_augmented_cost"], [90, 4, 1, "", "extract_dataset"], [90, 4, 1, "", "pwdist_exact"]], "opendataval.dataval.lava.otdd.DatasetDistance": [[90, 3, 1, "", "dual_sol"]], "opendataval.dataval.margcontrib": [[91, 0, 0, "-", "banzhaf"], [91, 0, 0, "-", "betashap"], [91, 0, 0, "-", "datashap"], [91, 0, 0, "-", "loo"], [91, 0, 0, "-", "shap"]], "opendataval.dataval.margcontrib.banzhaf": [[91, 2, 1, "", "DataBanzhaf"], [91, 2, 1, "", "DataBanzhafMargContrib"]], "opendataval.dataval.margcontrib.banzhaf.DataBanzhaf": [[91, 3, 1, "", "evaluate_data_values"], [91, 3, 1, "", "input_data"], [91, 3, 1, "", "train_data_values"]], "opendataval.dataval.margcontrib.banzhaf.DataBanzhafMargContrib": [[91, 3, 1, "", "compute_weight"], [91, 3, 1, "", "evaluate_data_values"]], "opendataval.dataval.margcontrib.betashap": [[91, 2, 1, "", "BetaShapley"]], "opendataval.dataval.margcontrib.betashap.BetaShapley": [[91, 3, 1, "", "compute_weight"], [91, 3, 1, "", "evaluate_data_values"]], "opendataval.dataval.margcontrib.datashap": [[91, 2, 1, "", "DataShapley"]], "opendataval.dataval.margcontrib.datashap.DataShapley": [[91, 3, 1, "", "compute_weight"], [91, 3, 1, "", "evaluate_data_values"]], "opendataval.dataval.margcontrib.loo": [[91, 2, 1, "", "LeaveOneOut"]], "opendataval.dataval.margcontrib.loo.LeaveOneOut": [[91, 3, 1, "", "evaluate_data_values"], [91, 3, 1, "", "input_data"], [91, 3, 1, "", "train_data_values"]], "opendataval.dataval.margcontrib.shap": [[91, 2, 1, "", "ShapEvaluator"]], "opendataval.dataval.margcontrib.shap.ShapEvaluator": [[91, 6, 1, "", "CACHE"], [91, 6, 1, "", "GR_MAX"], [91, 3, 1, "", "compute_weight"], [91, 3, 1, "", "evaluate_data_values"], [91, 3, 1, "", "input_data"], [91, 3, 1, "", "train_data_values"]], "opendataval.dataval.oob": [[92, 0, 0, "-", "oob"]], "opendataval.dataval.oob.oob": [[92, 2, 1, "", "DataOob"], [92, 2, 1, "", "GroupingIndex"]], "opendataval.dataval.oob.oob.DataOob": [[92, 3, 1, "", "evaluate_data_values"], [92, 3, 1, "", "input_data"], [92, 3, 1, "", "train_data_values"]], "opendataval.dataval.oob.oob.GroupingIndex": [[92, 3, 1, "", "add_indices"]], "opendataval.dataval.random": [[93, 0, 0, "-", "random"]], "opendataval.dataval.random.random": [[93, 2, 1, "", "RandomEvaluator"]], "opendataval.dataval.random.random.RandomEvaluator": [[93, 3, 1, "", "evaluate_data_values"], [93, 3, 1, "", "train_data_values"]], "opendataval.dataval.volume": [[94, 0, 0, "-", "rvs"]], "opendataval.dataval.volume.rvs": [[94, 2, 1, "", "RobustVolumeShapley"], [94, 4, 1, "", "compute_robust_volumes"], [94, 4, 1, "", "compute_x_tilde_and_counts"]], "opendataval.dataval.volume.rvs.RobustVolumeShapley": [[94, 3, 1, "", "evaluate_data_values"], [94, 3, 1, "", "input_data"], [94, 3, 1, "", "train_data_values"]], "opendataval.experiment": [[65, 2, 1, "", "ExperimentMediator"], [95, 0, 0, "-", "api"], [95, 0, 0, "-", "exper_methods"], [95, 0, 0, "-", "util"]], "opendataval.experiment.ExperimentMediator": [[65, 3, 1, "", "__init__"]], "opendataval.experiment.api": [[95, 2, 1, "", "ExperimentMediator"]], "opendataval.experiment.api.ExperimentMediator": [[95, 3, 1, "", "compute_data_values"], [95, 3, 1, "", "evaluate"], [95, 3, 1, "", "model_factory_setup"], [95, 3, 1, "", "plot"], [95, 3, 1, "", "save_output"], [95, 3, 1, "", "set_output_directory"], [95, 3, 1, "", "setup"]], "opendataval.experiment.exper_methods": [[95, 4, 1, "", "discover_corrupted_sample"], [95, 4, 1, "", "increasing_bin_removal"], [95, 4, 1, "", "noisy_detection"], [95, 4, 1, "", "remove_high_low"], [95, 4, 1, "", "save_dataval"]], "opendataval.experiment.util": [[95, 4, 1, "", "f1_score"], [95, 4, 1, "", "oned_twonn_clustering"]], "opendataval.metrics": [[82, 2, 1, "", "Metrics"], [82, 4, 1, "", "accuracy"], [82, 4, 1, "", "neg_l2"], [82, 4, 1, "", "neg_mse"]], "opendataval.metrics.Metrics": [[82, 6, 1, "", "ACCURACY"], [82, 6, 1, "", "NEG_L2"], [82, 6, 1, "", "NEG_MSE"]], "opendataval.model": [[68, 2, 1, "", "ClassifierSkLearnWrapper"], [69, 2, 1, "", "ClassifierUnweightedSkLearnWrapper"], [70, 2, 1, "", "Model"], [96, 4, 1, "", "ModelFactory"], [72, 2, 1, "", "RegressionSkLearnWrapper"], [73, 2, 1, "", "TorchClassMixin"], [74, 2, 1, "", "TorchPredictMixin"], [75, 2, 1, "", "TorchRegressMixin"], [96, 0, 0, "-", "api"], [96, 0, 0, "-", "bert"], [96, 0, 0, "-", "lenet"], [96, 0, 0, "-", "logistic_regression"], [96, 0, 0, "-", "mlp"]], "opendataval.model.ClassifierSkLearnWrapper": [[68, 3, 1, "", "__init__"]], "opendataval.model.ClassifierUnweightedSkLearnWrapper": [[69, 3, 1, "", "__init__"]], "opendataval.model.Model": [[70, 3, 1, "", "__init__"]], "opendataval.model.RegressionSkLearnWrapper": [[72, 3, 1, "", "__init__"]], "opendataval.model.TorchClassMixin": [[73, 3, 1, "", "__init__"]], "opendataval.model.TorchPredictMixin": [[74, 3, 1, "", "__init__"]], "opendataval.model.TorchRegressMixin": [[75, 3, 1, "", "__init__"]], "opendataval.model.api": [[96, 2, 1, "", "ClassifierSkLearnWrapper"], [96, 2, 1, "", "ClassifierUnweightedSkLearnWrapper"], [96, 2, 1, "", "Model"], [96, 2, 1, "", "RegressionSkLearnWrapper"], [96, 2, 1, "", "TorchClassMixin"], [96, 2, 1, "", "TorchPredictMixin"], [96, 2, 1, "", "TorchRegressMixin"], [96, 4, 1, "", "to_numpy"]], "opendataval.model.api.ClassifierSkLearnWrapper": [[96, 3, 1, "", "fit"], [96, 3, 1, "", "predict"]], "opendataval.model.api.ClassifierUnweightedSkLearnWrapper": [[96, 3, 1, "", "fit"]], "opendataval.model.api.Model": [[96, 6, 1, "", "Models"], [96, 3, 1, "", "clone"], [96, 3, 1, "", "fit"], [96, 3, 1, "", "predict"]], "opendataval.model.api.RegressionSkLearnWrapper": [[96, 3, 1, "", "fit"], [96, 3, 1, "", "predict"]], "opendataval.model.api.TorchClassMixin": [[96, 5, 1, "", "device"], [96, 3, 1, "", "fit"], [96, 6, 1, "", "training"]], "opendataval.model.api.TorchPredictMixin": [[96, 5, 1, "", "device"], [96, 3, 1, "", "predict"], [96, 6, 1, "", "training"]], "opendataval.model.api.TorchRegressMixin": [[96, 5, 1, "", "device"], [96, 3, 1, "", "fit"], [96, 6, 1, "", "training"]], "opendataval.model.bert": [[96, 2, 1, "", "BertClassifier"]], "opendataval.model.bert.BertClassifier": [[96, 3, 1, "", "fit"], [96, 3, 1, "", "forward"], [96, 3, 1, "", "predict"], [96, 3, 1, "", "tokenize"]], "opendataval.model.lenet": [[96, 2, 1, "", "LeNet"]], "opendataval.model.lenet.LeNet": [[96, 3, 1, "", "forward"]], "opendataval.model.logistic_regression": [[96, 2, 1, "", "LogisticRegression"]], "opendataval.model.logistic_regression.LogisticRegression": [[96, 3, 1, "", "forward"]], "opendataval.model.mlp": [[96, 2, 1, "", "ClassifierMLP"], [96, 2, 1, "", "RegressionMLP"]], "opendataval.model.mlp.ClassifierMLP": [[96, 3, 1, "", "forward"]], "opendataval.model.mlp.RegressionMLP": [[96, 3, 1, "", "forward"]], "opendataval.util": [[82, 2, 1, "", "FuncEnum"], [82, 2, 1, "", "MeanStdTime"], [82, 2, 1, "", "ParamSweep"], [82, 2, 1, "", "StrEnum"], [82, 4, 1, "", "load_mediator_output"], [82, 4, 1, "", "set_random_state"], [82, 2, 1, "", "wrapper"]], "opendataval.util.FuncEnum": [[82, 3, 1, "", "wrap"]], "opendataval.util.ParamSweep": [[82, 3, 1, "", "sweep"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"opendatav": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "dataload": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 83, 84], "dataset": [0, 1, 2, 7, 8, 9, 10, 43, 44, 45, 46, 84], "imageset": [1, 9, 45, 84], "nlpset": [2, 10, 46, 84], "catdataset": [3, 39], "paramet": [3, 4, 5, 6, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 39, 40, 41, 42, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 71, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "rais": [3, 4, 6, 12, 32, 39, 40, 42, 48, 71, 83, 90, 96], "datafetch": [4, 40], "attribut": [4, 17, 27, 40, 54, 65, 83, 85, 95], "regist": [5, 41, 83], "warn": [5, 41, 83], "cach": [6, 42], "return": [6, 11, 32, 42, 47, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "data": [7, 38, 43, 49, 83, 84, 85, 97], "set": [7, 38, 43, 83, 84], "mix_label": [11, 47], "one_hot_encod": [12, 48], "datav": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "am": [13, 50, 86], "refer": [13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "betashaplei": [14, 51], "dvrl": [15, 52, 87], "databanzhaf": [16, 53], "dataevalu": [17, 54], "dataoob": [18, 55], "datashaplei": [19, 56], "influencefunctionev": [20, 57], "knnshaplei": [21, 58], "lavaevalu": [22, 59], "mixin": [22, 25, 59, 62, 67, 90, 94, 96], "leaveoneout": [23, 60], "randomevalu": [24, 61], "robustvolumeshaplei": [25, 62], "shapevalu": [26, 63], "experi": [27, 28, 64, 65, 66, 95], "experimentmedi": [27, 65], "exper_method": [28, 66, 95], "model": [29, 30, 31, 32, 33, 34, 35, 36, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96], "classifiersklearnwrapp": [29, 68], "classifierunweightedsklearnwrapp": [30, 69], "modelfactori": [32, 71], "regressionsklearnwrapp": [33, 72], "torchclassmixin": [34, 73], "torchpredictmixin": [35, 74], "torchregressmixin": [36, 75], "__version__": 37, "loader": [38, 83], "creat": [38, 83], "load": [38, 83], "util": [38, 76, 77, 82, 83, 95], "evalu": [49, 85], "catalog": [49, 85], "setup": [64, 95], "api": [67, 85, 95, 96], "torch": [67, 96], "sci": [67, 96], "kit": [67, 96], "learn": [67, 96], "wrapper": [67, 96], "default": [67, 96], "hyperparamet": [67, 96], "load_mediator_output": 76, "set_random_st": 77, "document": 78, "abstract": 78, "indic": 78, "tabl": 78, "leaderboard": 79, "licens": 80, "packag": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "subpackag": [82, 83, 85], "submodul": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "metric": 82, "modul": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "content": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "fetcher": 83, "noisifi": 83, "challeng": 84, "cleanlab": 84, "influenc": 88, "knnshap": 89, "lava": 90, "otdd": 90, "margcontrib": 91, "banzhaf": 91, "betashap": 91, "datashap": 91, "loo": 91, "shap": 91, "note": 91, "oob": 92, "random": 93, "volum": 94, "rv": 94, "bert": 96, "lenet": 96, "logistic_regress": 96, "mlp": 96, "unifi": 97, "benchmark": 97, "valuat": 97}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"opendataval.dataloader.datasets.datasets": [[0, "module-opendataval.dataloader.datasets.datasets"], [8, "module-opendataval.dataloader.datasets.datasets"], [44, "module-opendataval.dataloader.datasets.datasets"]], "opendataval.dataloader.datasets.imagesets": [[1, "module-opendataval.dataloader.datasets.imagesets"], [9, "module-opendataval.dataloader.datasets.imagesets"], [45, "module-opendataval.dataloader.datasets.imagesets"]], "opendataval.dataloader.datasets.nlpsets": [[2, "module-opendataval.dataloader.datasets.nlpsets"], [10, "module-opendataval.dataloader.datasets.nlpsets"], [46, "module-opendataval.dataloader.datasets.nlpsets"]], "opendataval.dataloader.CatDataset": [[3, "opendataval-dataloader-catdataset"], [39, "opendataval-dataloader-catdataset"]], "Parameters": [[3, "parameters"], [4, "parameters"], [5, "parameters"], [6, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [29, "parameters"], [30, "parameters"], [32, "parameters"], [33, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [47, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [65, "parameters"], [68, "parameters"], [69, "parameters"], [71, "parameters"], [72, "parameters"], [83, "parameters"], [83, "id1"], [83, "id3"], [83, "id5"], [83, "id7"], [83, "id10"], [83, "id13"], [83, "id15"], [83, "id17"], [83, "id18"], [83, "id20"], [83, "id24"], [83, "id26"], [83, "id27"], [84, "parameters"], [84, "id12"], [85, "parameters"], [85, "id1"], [85, "id3"], [85, "id5"], [85, "id6"], [85, "id7"], [85, "id9"], [85, "id11"], [85, "id13"], [86, "parameters"], [86, "id2"], [86, "id5"], [86, "id7"], [86, "id8"], [87, "parameters"], [87, "id2"], [87, "id3"], [87, "id6"], [87, "id7"], [87, "id9"], [87, "id12"], [88, "parameters"], [88, "id2"], [88, "id5"], [89, "parameters"], [90, "parameters"], [90, "id10"], [90, "id12"], [90, "id14"], [90, "id16"], [91, "parameters"], [91, "id2"], [91, "id5"], [91, "id8"], [91, "id13"], [91, "id20"], [91, "id25"], [91, "id27"], [91, "id28"], [91, "id32"], [91, "id34"], [91, "id35"], [92, "parameters"], [92, "id2"], [92, "id3"], [92, "id4"], [93, "parameters"], [94, "parameters"], [94, "id2"], [95, "parameters"], [95, "id1"], [95, "id2"], [95, "id3"], [95, "id5"], [95, "id7"], [95, "id8"], [95, "id11"], [95, "id13"], [95, "id15"], [95, "id19"], [96, "parameters"], [96, "id1"], [96, "id2"], [96, "id3"], [96, "id4"], [96, "id6"], [96, "id8"], [96, "id10"], [96, "id11"], [96, "id12"], [96, "id14"], [96, "id15"], [96, "id17"], [96, "id20"], [96, "id21"], [96, "id23"], [96, "id25"], [96, "id27"], [96, "id31"], [96, "id32"], [96, "id33"], [96, "id35"], [96, "id36"], [96, "id38"], [96, "id39"], [96, "id41"]], "Raises": [[3, "raises"], [4, "raises"], [6, "raises"], [12, "raises"], [32, "raises"], [39, "raises"], [40, "raises"], [42, "raises"], [48, "raises"], [71, "raises"], [83, "raises"], [83, "id2"], [83, "id4"], [83, "id9"], [83, "id12"], [83, "id22"], [83, "id23"], [83, "id25"], [90, "raises"], [96, "raises"]], "opendataval.dataloader.DataFetcher": [[4, "opendataval-dataloader-datafetcher"], [40, "opendataval-dataloader-datafetcher"]], "Attributes": [[4, "attributes"], [17, "attributes"], [27, "attributes"], [40, "attributes"], [54, "attributes"], [65, "attributes"], [83, "attributes"], [85, "attributes"], [85, "id16"], [95, "attributes"]], "opendataval.dataloader.Register": [[5, "opendataval-dataloader-register"], [41, "opendataval-dataloader-register"]], "Warns": [[5, "warns"], [41, "warns"], [83, "warns"]], "opendataval.dataloader.cache": [[6, "opendataval-dataloader-cache"], [42, "opendataval-dataloader-cache"]], "Returns": [[6, "returns"], [11, "returns"], [32, "returns"], [42, "returns"], [47, "returns"], [71, "returns"], [83, "returns"], [83, "id6"], [83, "id8"], [83, "id11"], [83, "id14"], [83, "id16"], [83, "id19"], [83, "id21"], [84, "returns"], [85, "returns"], [85, "id2"], [85, "id4"], [85, "id8"], [85, "id10"], [85, "id12"], [85, "id14"], [85, "id17"], [86, "returns"], [86, "id6"], [87, "returns"], [87, "id8"], [87, "id13"], [88, "returns"], [89, "returns"], [90, "returns"], [90, "id11"], [90, "id13"], [90, "id15"], [90, "id17"], [91, "returns"], [91, "id9"], [91, "id10"], [91, "id16"], [91, "id17"], [91, "id21"], [91, "id22"], [91, "id26"], [91, "id33"], [92, "returns"], [94, "returns"], [94, "id3"], [95, "returns"], [95, "id4"], [95, "id6"], [95, "id9"], [95, "id12"], [95, "id14"], [95, "id16"], [95, "id20"], [96, "returns"], [96, "id5"], [96, "id7"], [96, "id9"], [96, "id13"], [96, "id16"], [96, "id22"], [96, "id24"], [96, "id26"], [96, "id28"], [96, "id34"], [96, "id37"], [96, "id40"], [96, "id42"]], "opendataval.dataloader.datasets": [[7, "module-opendataval.dataloader.datasets"], [43, "module-opendataval.dataloader.datasets"]], "Data sets": [[7, "data-sets"], [43, "data-sets"], [84, "data-sets"]], "opendataval.dataloader.mix_labels": [[11, "opendataval-dataloader-mix-labels"], [47, "opendataval-dataloader-mix-labels"]], "opendataval.dataloader.one_hot_encode": [[12, "opendataval-dataloader-one-hot-encode"], [48, "opendataval-dataloader-one-hot-encode"]], "opendataval.dataval.AME": [[13, "opendataval-dataval-ame"], [50, "opendataval-dataval-ame"]], "References": [[13, "references"], [14, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [20, "references"], [21, "references"], [22, "references"], [23, "references"], [25, "references"], [26, "references"], [50, "references"], [51, "references"], [52, "references"], [53, "references"], [55, "references"], [56, "references"], [57, "references"], [58, "references"], [59, "references"], [60, "references"], [62, "references"], [63, "references"], [84, "references"], [84, "id4"], [84, "id7"], [84, "id9"], [84, "id13"], [84, "id16"], [84, "id18"], [85, "references"], [86, "references"], [86, "id3"], [87, "references"], [87, "id4"], [87, "id10"], [88, "references"], [89, "references"], [89, "id2"], [90, "references"], [90, "id2"], [90, "id6"], [91, "references"], [91, "id3"], [91, "id6"], [91, "id11"], [91, "id14"], [91, "id18"], [91, "id23"], [91, "id29"], [92, "references"], [94, "references"], [95, "references"], [95, "id17"], [96, "references"], [96, "id29"]], "opendataval.dataval.BetaShapley": [[14, "opendataval-dataval-betashapley"], [51, "opendataval-dataval-betashapley"]], "opendataval.dataval.DVRL": [[15, "opendataval-dataval-dvrl"], [52, "opendataval-dataval-dvrl"]], "opendataval.dataval.DataBanzhaf": [[16, "opendataval-dataval-databanzhaf"], [53, "opendataval-dataval-databanzhaf"]], "opendataval.dataval.DataEvaluator": [[17, "opendataval-dataval-dataevaluator"], [54, "opendataval-dataval-dataevaluator"]], "opendataval.dataval.DataOob": [[18, "opendataval-dataval-dataoob"], [55, "opendataval-dataval-dataoob"]], "opendataval.dataval.DataShapley": [[19, "opendataval-dataval-datashapley"], [56, "opendataval-dataval-datashapley"]], "opendataval.dataval.InfluenceFunctionEval": [[20, "opendataval-dataval-influencefunctioneval"], [57, "opendataval-dataval-influencefunctioneval"]], "opendataval.dataval.KNNShapley": [[21, "opendataval-dataval-knnshapley"], [58, "opendataval-dataval-knnshapley"]], "opendataval.dataval.LavaEvaluator": [[22, "opendataval-dataval-lavaevaluator"], [59, "opendataval-dataval-lavaevaluator"]], "Mixins": [[22, "mixins"], [25, "mixins"], [59, "mixins"], [62, "mixins"], [90, "mixins"], [94, "mixins"]], "opendataval.dataval.LeaveOneOut": [[23, "opendataval-dataval-leaveoneout"], [60, "opendataval-dataval-leaveoneout"]], "opendataval.dataval.RandomEvaluator": [[24, "opendataval-dataval-randomevaluator"], [61, "opendataval-dataval-randomevaluator"]], "opendataval.dataval.RobustVolumeShapley": [[25, "opendataval-dataval-robustvolumeshapley"], [62, "opendataval-dataval-robustvolumeshapley"]], "opendataval.dataval.ShapEvaluator": [[26, "opendataval-dataval-shapevaluator"], [63, "opendataval-dataval-shapevaluator"]], "opendataval.experiment.ExperimentMediator": [[27, "opendataval-experiment-experimentmediator"], [65, "opendataval-experiment-experimentmediator"]], "opendataval.experiment.exper_methods": [[28, "module-opendataval.experiment.exper_methods"], [66, "module-opendataval.experiment.exper_methods"]], "opendataval.model.ClassifierSkLearnWrapper": [[29, "opendataval-model-classifiersklearnwrapper"], [68, "opendataval-model-classifiersklearnwrapper"]], "opendataval.model.ClassifierUnweightedSkLearnWrapper": [[30, "opendataval-model-classifierunweightedsklearnwrapper"], [69, "opendataval-model-classifierunweightedsklearnwrapper"]], "opendataval.model.Model": [[31, "opendataval-model-model"], [70, "opendataval-model-model"]], "opendataval.model.ModelFactory": [[32, "opendataval-model-modelfactory"], [71, "opendataval-model-modelfactory"]], "opendataval.model.RegressionSkLearnWrapper": [[33, "opendataval-model-regressionsklearnwrapper"], [72, "opendataval-model-regressionsklearnwrapper"]], "opendataval.model.TorchClassMixin": [[34, "opendataval-model-torchclassmixin"], [73, "opendataval-model-torchclassmixin"]], "opendataval.model.TorchPredictMixin": [[35, "opendataval-model-torchpredictmixin"], [74, "opendataval-model-torchpredictmixin"]], "opendataval.model.TorchRegressMixin": [[36, "opendataval-model-torchregressmixin"], [75, "opendataval-model-torchregressmixin"]], "opendataval.__version__": [[37, "opendataval-version"]], "opendataval.dataloader": [[38, "module-opendataval.dataloader"]], "Data Loader": [[38, "data-loader"], [83, "data-loader"]], "Creating/Loading data sets": [[38, "creating-loading-data-sets"], [83, "creating-loading-data-sets"]], "Utils": [[38, "utils"], [82, "utils"], [83, "utils"]], "opendataval.dataval": [[49, "module-opendataval.dataval"]], "Data Evaluator": [[49, "data-evaluator"], [85, "data-evaluator"]], "Catalog": [[49, "catalog"], [85, "catalog"]], "opendataval.experiment": [[64, "module-opendataval.experiment"]], "Experiment": [[64, "experiment"], [95, "experiment"]], "Experiment Setup": [[64, "experiment-setup"], [95, "experiment-setup"]], "Experiments": [[64, "experiments"], [95, "experiments"]], "opendataval.model": [[67, "module-opendataval.model"]], "Models": [[67, "models"], [96, "models"]], "API": [[67, "api"], [96, "api"]], "Torch Mixins": [[67, "torch-mixins"], [96, "torch-mixins"]], "Sci-kit learn wrappers": [[67, "sci-kit-learn-wrappers"], [96, "sci-kit-learn-wrappers"]], "Default Hyperparameters": [[67, "default-hyperparameters"], [96, "default-hyperparameters"]], "opendataval.util.load_mediator_output": [[76, "opendataval-util-load-mediator-output"]], "opendataval.util.set_random_state": [[77, "opendataval-util-set-random-state"]], "OpenDataVal Documentation": [[78, "opendataval-documentation"]], "Abstract": [[78, "abstract"]], "Indices and tables": [[78, "indices-and-tables"]], "OpenDataVal Leaderboards": [[79, "opendataval-leaderboards"]], "OpenDataVal license": [[80, "opendataval-license"]], "opendataval": [[81, "opendataval"], [82, "opendataval"]], "opendataval package": [[82, "opendataval-package"]], "Subpackages": [[82, "subpackages"], [83, "subpackages"], [85, "subpackages"]], "Submodules": [[82, "submodules"], [83, "submodules"], [84, "submodules"], [85, "submodules"], [86, "submodules"], [87, "submodules"], [88, "submodules"], [89, "submodules"], [90, "submodules"], [91, "submodules"], [92, "submodules"], [93, "submodules"], [94, "submodules"], [95, "submodules"], [96, "submodules"]], "opendataval.metrics module": [[82, "module-opendataval.metrics"]], "opendataval.util module": [[82, "module-opendataval.util"]], "Module contents": [[82, "module-opendataval"], [83, "module-opendataval.dataloader"], [84, "module-opendataval.dataloader.datasets"], [85, "module-opendataval.dataval"], [86, "module-opendataval.dataval.ame"], [87, "module-opendataval.dataval.dvrl"], [88, "module-opendataval.dataval.influence"], [89, "module-opendataval.dataval.knnshap"], [90, "module-opendataval.dataval.lava"], [91, "module-opendataval.dataval.margcontrib"], [92, "module-opendataval.dataval.oob"], [93, "module-opendataval.dataval.random"], [94, "module-opendataval.dataval.volume"], [95, "module-opendataval.experiment"], [96, "module-opendataval.model"]], "Modules": [[82, "modules"]], "opendataval.dataloader package": [[83, "opendataval-dataloader-package"]], "opendataval.dataloader.fetcher module": [[83, "module-opendataval.dataloader.fetcher"]], "opendataval.dataloader.noisify module": [[83, "module-opendataval.dataloader.noisify"]], "opendataval.dataloader.register module": [[83, "module-opendataval.dataloader.register"]], "opendataval.dataloader.util module": [[83, "module-opendataval.dataloader.util"]], "opendataval.dataloader.datasets package": [[84, "opendataval-dataloader-datasets-package"]], "opendataval.dataloader.datasets.challenge module": [[84, "module-opendataval.dataloader.datasets.challenge"]], "opendataval.dataloader.datasets.cleanlab module": [[84, "module-opendataval.dataloader.datasets.cleanlab"]], "opendataval.dataloader.datasets.datasets module": [[84, "module-opendataval.dataloader.datasets.datasets"]], "opendataval.dataloader.datasets.imagesets module": [[84, "module-opendataval.dataloader.datasets.imagesets"]], "opendataval.dataloader.datasets.nlpsets module": [[84, "module-opendataval.dataloader.datasets.nlpsets"]], "opendataval.dataval package": [[85, "opendataval-dataval-package"]], "opendataval.dataval.api module": [[85, "module-opendataval.dataval.api"]], "opendataval.dataval.ame package": [[86, "opendataval-dataval-ame-package"]], "opendataval.dataval.ame.ame module": [[86, "module-opendataval.dataval.ame.ame"]], "opendataval.dataval.dvrl package": [[87, "opendataval-dataval-dvrl-package"]], "opendataval.dataval.dvrl.dvrl module": [[87, "module-opendataval.dataval.dvrl.dvrl"]], "opendataval.dataval.influence package": [[88, "opendataval-dataval-influence-package"]], "opendataval.dataval.influence.influence module": [[88, "module-opendataval.dataval.influence.influence"]], "opendataval.dataval.knnshap package": [[89, "opendataval-dataval-knnshap-package"]], "opendataval.dataval.knnshap.knnshap module": [[89, "module-opendataval.dataval.knnshap.knnshap"]], "opendataval.dataval.lava package": [[90, "opendataval-dataval-lava-package"]], "opendataval.dataval.lava.lava module": [[90, "module-opendataval.dataval.lava.lava"]], "opendataval.dataval.lava.otdd module": [[90, "module-opendataval.dataval.lava.otdd"]], "opendataval.dataval.margcontrib package": [[91, "opendataval-dataval-margcontrib-package"]], "opendataval.dataval.margcontrib.banzhaf module": [[91, "module-opendataval.dataval.margcontrib.banzhaf"]], "opendataval.dataval.margcontrib.betashap module": [[91, "module-opendataval.dataval.margcontrib.betashap"]], "opendataval.dataval.margcontrib.datashap module": [[91, "module-opendataval.dataval.margcontrib.datashap"]], "opendataval.dataval.margcontrib.loo module": [[91, "module-opendataval.dataval.margcontrib.loo"]], "opendataval.dataval.margcontrib.shap module": [[91, "module-opendataval.dataval.margcontrib.shap"]], "Notes": [[91, "notes"]], "opendataval.dataval.oob package": [[92, "opendataval-dataval-oob-package"]], "opendataval.dataval.oob.oob module": [[92, "module-opendataval.dataval.oob.oob"]], "opendataval.dataval.random package": [[93, "opendataval-dataval-random-package"]], "opendataval.dataval.random.random module": [[93, "module-opendataval.dataval.random.random"]], "opendataval.dataval.volume package": [[94, "opendataval-dataval-volume-package"]], "opendataval.dataval.volume.rvs module": [[94, "module-opendataval.dataval.volume.rvs"]], "opendataval.experiment package": [[95, "opendataval-experiment-package"]], "opendataval.experiment.api module": [[95, "module-opendataval.experiment.api"]], "opendataval.experiment.exper_methods module": [[95, "module-opendataval.experiment.exper_methods"]], "opendataval.experiment.util module": [[95, "module-opendataval.experiment.util"]], "opendataval.model package": [[96, "opendataval-model-package"]], "opendataval.model.api module": [[96, "module-opendataval.model.api"]], "opendataval.model.bert module": [[96, "module-opendataval.model.bert"]], "opendataval.model.lenet module": [[96, "module-opendataval.model.lenet"]], "opendataval.model.logistic_regression module": [[96, "module-opendataval.model.logistic_regression"]], "opendataval.model.mlp module": [[96, "module-opendataval.model.mlp"]], "OpenDataVal: a Unified Benchmark for Data Valuation": [[97, "opendataval-a-unified-benchmark-for-data-valuation"]]}, "indexentries": {"module": [[0, "module-opendataval.dataloader.datasets.datasets"], [1, "module-opendataval.dataloader.datasets.imagesets"], [2, "module-opendataval.dataloader.datasets.nlpsets"], [7, "module-opendataval.dataloader.datasets"], [8, "module-opendataval.dataloader.datasets.datasets"], [9, "module-opendataval.dataloader.datasets.imagesets"], [10, "module-opendataval.dataloader.datasets.nlpsets"], [28, "module-opendataval.experiment.exper_methods"], [38, "module-opendataval.dataloader"], [43, "module-opendataval.dataloader.datasets"], [44, "module-opendataval.dataloader.datasets.datasets"], [45, "module-opendataval.dataloader.datasets.imagesets"], [46, "module-opendataval.dataloader.datasets.nlpsets"], [49, "module-opendataval.dataval"], [64, "module-opendataval.experiment"], [66, "module-opendataval.experiment.exper_methods"], [67, "module-opendataval.model"], [82, "module-opendataval"], [82, "module-opendataval.metrics"], [82, "module-opendataval.util"], [83, "module-opendataval.dataloader"], [83, "module-opendataval.dataloader.fetcher"], [83, "module-opendataval.dataloader.noisify"], [83, "module-opendataval.dataloader.register"], [83, "module-opendataval.dataloader.util"], [84, "module-opendataval.dataloader.datasets"], [84, "module-opendataval.dataloader.datasets.challenge"], [84, "module-opendataval.dataloader.datasets.cleanlab"], [84, "module-opendataval.dataloader.datasets.datasets"], [84, "module-opendataval.dataloader.datasets.imagesets"], [84, "module-opendataval.dataloader.datasets.nlpsets"], [85, "module-opendataval.dataval"], [85, "module-opendataval.dataval.api"], [86, "module-opendataval.dataval.ame"], [86, "module-opendataval.dataval.ame.ame"], [87, "module-opendataval.dataval.dvrl"], [87, "module-opendataval.dataval.dvrl.dvrl"], [88, "module-opendataval.dataval.influence"], [88, "module-opendataval.dataval.influence.influence"], [89, "module-opendataval.dataval.knnshap"], [89, "module-opendataval.dataval.knnshap.knnshap"], [90, "module-opendataval.dataval.lava"], [90, "module-opendataval.dataval.lava.lava"], [90, "module-opendataval.dataval.lava.otdd"], [91, "module-opendataval.dataval.margcontrib"], [91, "module-opendataval.dataval.margcontrib.banzhaf"], [91, "module-opendataval.dataval.margcontrib.betashap"], [91, "module-opendataval.dataval.margcontrib.datashap"], [91, "module-opendataval.dataval.margcontrib.loo"], [91, "module-opendataval.dataval.margcontrib.shap"], [92, "module-opendataval.dataval.oob"], [92, "module-opendataval.dataval.oob.oob"], [93, "module-opendataval.dataval.random"], [93, "module-opendataval.dataval.random.random"], [94, "module-opendataval.dataval.volume"], [94, "module-opendataval.dataval.volume.rvs"], [95, "module-opendataval.experiment"], [95, "module-opendataval.experiment.api"], [95, "module-opendataval.experiment.exper_methods"], [95, "module-opendataval.experiment.util"], [96, "module-opendataval.model"], [96, "module-opendataval.model.api"], [96, "module-opendataval.model.bert"], [96, "module-opendataval.model.lenet"], [96, "module-opendataval.model.logistic_regression"], [96, "module-opendataval.model.mlp"]], "opendataval.dataloader.datasets.datasets": [[0, "module-opendataval.dataloader.datasets.datasets"], [8, "module-opendataval.dataloader.datasets.datasets"], [44, "module-opendataval.dataloader.datasets.datasets"], [84, "module-opendataval.dataloader.datasets.datasets"]], "opendataval.dataloader.datasets.imagesets": [[1, "module-opendataval.dataloader.datasets.imagesets"], [9, "module-opendataval.dataloader.datasets.imagesets"], [45, "module-opendataval.dataloader.datasets.imagesets"], [84, "module-opendataval.dataloader.datasets.imagesets"]], "opendataval.dataloader.datasets.nlpsets": [[2, "module-opendataval.dataloader.datasets.nlpsets"], [10, "module-opendataval.dataloader.datasets.nlpsets"], [46, "module-opendataval.dataloader.datasets.nlpsets"], [84, "module-opendataval.dataloader.datasets.nlpsets"]], "catdataset (class in opendataval.dataloader)": [[3, "opendataval.dataloader.CatDataset"], [39, "opendataval.dataloader.CatDataset"]], "__init__() (opendataval.dataloader.catdataset method)": [[3, "opendataval.dataloader.CatDataset.__init__"], [39, "opendataval.dataloader.CatDataset.__init__"]], "datafetcher (class in opendataval.dataloader)": [[4, "opendataval.dataloader.DataFetcher"], [40, "opendataval.dataloader.DataFetcher"]], "__init__() (opendataval.dataloader.datafetcher method)": [[4, "opendataval.dataloader.DataFetcher.__init__"], [40, "opendataval.dataloader.DataFetcher.__init__"]], "register (class in opendataval.dataloader)": [[5, "opendataval.dataloader.Register"], [41, "opendataval.dataloader.Register"]], "__init__() (opendataval.dataloader.register method)": [[5, "opendataval.dataloader.Register.__init__"], [41, "opendataval.dataloader.Register.__init__"]], "cache() (in module opendataval.dataloader)": [[6, "opendataval.dataloader.cache"], [42, "opendataval.dataloader.cache"]], "opendataval.dataloader.datasets": [[7, "module-opendataval.dataloader.datasets"], [43, "module-opendataval.dataloader.datasets"], [84, "module-opendataval.dataloader.datasets"]], "mix_labels() (in module opendataval.dataloader)": [[11, "opendataval.dataloader.mix_labels"], [47, "opendataval.dataloader.mix_labels"]], "one_hot_encode() (in module opendataval.dataloader)": [[12, "opendataval.dataloader.one_hot_encode"], [48, "opendataval.dataloader.one_hot_encode"]], "ame (class in opendataval.dataval)": [[13, "opendataval.dataval.AME"], [50, "opendataval.dataval.AME"]], "__init__() (opendataval.dataval.ame method)": [[13, "opendataval.dataval.AME.__init__"], [50, "opendataval.dataval.AME.__init__"]], "betashapley (class in opendataval.dataval)": [[14, "opendataval.dataval.BetaShapley"], [51, "opendataval.dataval.BetaShapley"]], "__init__() (opendataval.dataval.betashapley method)": [[14, "opendataval.dataval.BetaShapley.__init__"], [51, "opendataval.dataval.BetaShapley.__init__"]], "dvrl (class in opendataval.dataval)": [[15, "opendataval.dataval.DVRL"], [52, "opendataval.dataval.DVRL"]], "__init__() (opendataval.dataval.dvrl method)": [[15, "opendataval.dataval.DVRL.__init__"], [52, "opendataval.dataval.DVRL.__init__"]], "databanzhaf (class in opendataval.dataval)": [[16, "opendataval.dataval.DataBanzhaf"], [53, "opendataval.dataval.DataBanzhaf"]], "__init__() (opendataval.dataval.databanzhaf method)": [[16, "opendataval.dataval.DataBanzhaf.__init__"], [53, "opendataval.dataval.DataBanzhaf.__init__"]], "dataevaluator (class in opendataval.dataval)": [[17, "opendataval.dataval.DataEvaluator"], [54, "opendataval.dataval.DataEvaluator"]], "__init__() (opendataval.dataval.dataevaluator method)": [[17, "opendataval.dataval.DataEvaluator.__init__"], [54, "opendataval.dataval.DataEvaluator.__init__"]], "dataoob (class in opendataval.dataval)": [[18, "opendataval.dataval.DataOob"], [55, "opendataval.dataval.DataOob"]], "__init__() (opendataval.dataval.dataoob method)": [[18, "opendataval.dataval.DataOob.__init__"], [55, "opendataval.dataval.DataOob.__init__"]], "datashapley (class in opendataval.dataval)": [[19, "opendataval.dataval.DataShapley"], [56, "opendataval.dataval.DataShapley"]], "__init__() (opendataval.dataval.datashapley method)": [[19, "opendataval.dataval.DataShapley.__init__"], [56, "opendataval.dataval.DataShapley.__init__"]], "influencefunctioneval (class in opendataval.dataval)": [[20, "opendataval.dataval.InfluenceFunctionEval"], [57, "opendataval.dataval.InfluenceFunctionEval"]], "__init__() (opendataval.dataval.influencefunctioneval method)": [[20, "opendataval.dataval.InfluenceFunctionEval.__init__"], [57, "opendataval.dataval.InfluenceFunctionEval.__init__"]], "knnshapley (class in opendataval.dataval)": [[21, "opendataval.dataval.KNNShapley"], [58, "opendataval.dataval.KNNShapley"]], "__init__() (opendataval.dataval.knnshapley method)": [[21, "opendataval.dataval.KNNShapley.__init__"], [58, "opendataval.dataval.KNNShapley.__init__"]], "lavaevaluator (class in opendataval.dataval)": [[22, "opendataval.dataval.LavaEvaluator"], [59, "opendataval.dataval.LavaEvaluator"]], "__init__() (opendataval.dataval.lavaevaluator method)": [[22, "opendataval.dataval.LavaEvaluator.__init__"], [59, "opendataval.dataval.LavaEvaluator.__init__"]], "leaveoneout (class in opendataval.dataval)": [[23, "opendataval.dataval.LeaveOneOut"], [60, "opendataval.dataval.LeaveOneOut"]], "__init__() (opendataval.dataval.leaveoneout method)": [[23, "opendataval.dataval.LeaveOneOut.__init__"], [60, "opendataval.dataval.LeaveOneOut.__init__"]], "randomevaluator (class in opendataval.dataval)": [[24, "opendataval.dataval.RandomEvaluator"], [61, "opendataval.dataval.RandomEvaluator"]], "__init__() (opendataval.dataval.randomevaluator method)": [[24, "opendataval.dataval.RandomEvaluator.__init__"], [61, "opendataval.dataval.RandomEvaluator.__init__"]], "robustvolumeshapley (class in opendataval.dataval)": [[25, "opendataval.dataval.RobustVolumeShapley"], [62, "opendataval.dataval.RobustVolumeShapley"]], "__init__() (opendataval.dataval.robustvolumeshapley method)": [[25, "opendataval.dataval.RobustVolumeShapley.__init__"], [62, "opendataval.dataval.RobustVolumeShapley.__init__"]], "shapevaluator (class in opendataval.dataval)": [[26, "opendataval.dataval.ShapEvaluator"], [63, "opendataval.dataval.ShapEvaluator"]], "__init__() (opendataval.dataval.shapevaluator method)": [[26, "opendataval.dataval.ShapEvaluator.__init__"], [63, "opendataval.dataval.ShapEvaluator.__init__"]], "experimentmediator (class in opendataval.experiment)": [[27, "opendataval.experiment.ExperimentMediator"], [65, "opendataval.experiment.ExperimentMediator"]], "__init__() (opendataval.experiment.experimentmediator method)": [[27, "opendataval.experiment.ExperimentMediator.__init__"], [65, "opendataval.experiment.ExperimentMediator.__init__"]], "opendataval.experiment.exper_methods": [[28, "module-opendataval.experiment.exper_methods"], [66, "module-opendataval.experiment.exper_methods"], [95, "module-opendataval.experiment.exper_methods"]], "classifiersklearnwrapper (class in opendataval.model)": [[29, "opendataval.model.ClassifierSkLearnWrapper"], [68, "opendataval.model.ClassifierSkLearnWrapper"]], "__init__() (opendataval.model.classifiersklearnwrapper method)": [[29, "opendataval.model.ClassifierSkLearnWrapper.__init__"], [68, "opendataval.model.ClassifierSkLearnWrapper.__init__"]], "classifierunweightedsklearnwrapper (class in opendataval.model)": [[30, "opendataval.model.ClassifierUnweightedSkLearnWrapper"], [69, "opendataval.model.ClassifierUnweightedSkLearnWrapper"]], "__init__() (opendataval.model.classifierunweightedsklearnwrapper method)": [[30, "opendataval.model.ClassifierUnweightedSkLearnWrapper.__init__"], [69, "opendataval.model.ClassifierUnweightedSkLearnWrapper.__init__"]], "model (class in opendataval.model)": [[31, "opendataval.model.Model"], [70, "opendataval.model.Model"]], "__init__() (opendataval.model.model method)": [[31, "opendataval.model.Model.__init__"], [70, "opendataval.model.Model.__init__"]], "modelfactory() (in module opendataval.model)": [[32, "opendataval.model.ModelFactory"], [71, "opendataval.model.ModelFactory"], [96, "opendataval.model.ModelFactory"]], "regressionsklearnwrapper (class in opendataval.model)": [[33, "opendataval.model.RegressionSkLearnWrapper"], [72, "opendataval.model.RegressionSkLearnWrapper"]], "__init__() (opendataval.model.regressionsklearnwrapper method)": [[33, "opendataval.model.RegressionSkLearnWrapper.__init__"], [72, "opendataval.model.RegressionSkLearnWrapper.__init__"]], "torchclassmixin (class in opendataval.model)": [[34, "opendataval.model.TorchClassMixin"], [73, "opendataval.model.TorchClassMixin"]], "__init__() (opendataval.model.torchclassmixin method)": [[34, "opendataval.model.TorchClassMixin.__init__"], [73, "opendataval.model.TorchClassMixin.__init__"]], "torchpredictmixin (class in opendataval.model)": [[35, "opendataval.model.TorchPredictMixin"], [74, "opendataval.model.TorchPredictMixin"]], "__init__() (opendataval.model.torchpredictmixin method)": [[35, "opendataval.model.TorchPredictMixin.__init__"], [74, "opendataval.model.TorchPredictMixin.__init__"]], "torchregressmixin (class in opendataval.model)": [[36, "opendataval.model.TorchRegressMixin"], [75, "opendataval.model.TorchRegressMixin"]], "__init__() (opendataval.model.torchregressmixin method)": [[36, "opendataval.model.TorchRegressMixin.__init__"], [75, "opendataval.model.TorchRegressMixin.__init__"]], "__version__ (in module opendataval)": [[37, "opendataval.__version__"]], "opendataval.dataloader": [[38, "module-opendataval.dataloader"], [83, "module-opendataval.dataloader"]], "opendataval.dataval": [[49, "module-opendataval.dataval"], [85, "module-opendataval.dataval"]], "opendataval.experiment": [[64, "module-opendataval.experiment"], [95, "module-opendataval.experiment"]], "opendataval.model": [[67, "module-opendataval.model"], [96, "module-opendataval.model"]], "load_mediator_output() (in module opendataval.util)": [[76, "opendataval.util.load_mediator_output"], [82, "opendataval.util.load_mediator_output"]], "set_random_state() (in module opendataval.util)": [[77, "opendataval.util.set_random_state"], [82, "opendataval.util.set_random_state"]], "accuracy (opendataval.metrics.metrics attribute)": [[82, "opendataval.metrics.Metrics.ACCURACY"]], "funcenum (class in opendataval.util)": [[82, "opendataval.util.FuncEnum"]], "meanstdtime (class in opendataval.util)": [[82, "opendataval.util.MeanStdTime"]], "metrics (class in opendataval.metrics)": [[82, "opendataval.metrics.Metrics"]], "neg_l2 (opendataval.metrics.metrics attribute)": [[82, "opendataval.metrics.Metrics.NEG_L2"]], "neg_mse (opendataval.metrics.metrics attribute)": [[82, "opendataval.metrics.Metrics.NEG_MSE"]], "paramsweep (class in opendataval.util)": [[82, "opendataval.util.ParamSweep"]], "strenum (class in opendataval.util)": [[82, "opendataval.util.StrEnum"]], "accuracy() (in module opendataval.metrics)": [[82, "opendataval.metrics.accuracy"]], "neg_l2() (in module opendataval.metrics)": [[82, "opendataval.metrics.neg_l2"]], "neg_mse() (in module opendataval.metrics)": [[82, "opendataval.metrics.neg_mse"]], "opendataval": [[82, "module-opendataval"]], "opendataval.metrics": [[82, "module-opendataval.metrics"]], "opendataval.util": [[82, "module-opendataval.util"]], "sweep() (opendataval.util.paramsweep method)": [[82, "opendataval.util.ParamSweep.sweep"]], "wrap() (opendataval.util.funcenum static method)": [[82, "opendataval.util.FuncEnum.wrap"]], "wrapper (class in opendataval.util)": [[82, "opendataval.util.wrapper"]], "add_gauss_noise (opendataval.dataloader.noisify.noisefunc attribute)": [[83, "opendataval.dataloader.noisify.NoiseFunc.ADD_GAUSS_NOISE"]], "cache_dir (opendataval.dataloader.register.register attribute)": [[83, "opendataval.dataloader.register.Register.CACHE_DIR"]], "catdataset (class in opendataval.dataloader.util)": [[83, "opendataval.dataloader.util.CatDataset"]], "datafetcher (class in opendataval.dataloader.fetcher)": [[83, "opendataval.dataloader.fetcher.DataFetcher"]], "datasets (opendataval.dataloader.register.register attribute)": [[83, "opendataval.dataloader.register.Register.Datasets"]], "indextransformdataset (class in opendataval.dataloader.util)": [[83, "opendataval.dataloader.util.IndexTransformDataset"]], "listdataset (class in opendataval.dataloader.util)": [[83, "opendataval.dataloader.util.ListDataset"]], "mix_labels (opendataval.dataloader.noisify.noisefunc attribute)": [[83, "opendataval.dataloader.noisify.NoiseFunc.MIX_LABELS"]], "noisefunc (class in opendataval.dataloader.noisify)": [[83, "opendataval.dataloader.noisify.NoiseFunc"]], "register (class in opendataval.dataloader.register)": [[83, "opendataval.dataloader.register.Register"]], "add_covar_transform() (opendataval.dataloader.register.register method)": [[83, "opendataval.dataloader.register.Register.add_covar_transform"]], "add_gauss_noise() (in module opendataval.dataloader.noisify)": [[83, "opendataval.dataloader.noisify.add_gauss_noise"]], "add_label_transform() (opendataval.dataloader.register.register method)": [[83, "opendataval.dataloader.register.Register.add_label_transform"]], "cache() (in module opendataval.dataloader.register)": [[83, "opendataval.dataloader.register.cache"]], "covar_dim (opendataval.dataloader.fetcher.datafetcher property)": [[83, "opendataval.dataloader.fetcher.DataFetcher.covar_dim"]], "datapoints (opendataval.dataloader.fetcher.datafetcher property)": [[83, "opendataval.dataloader.fetcher.DataFetcher.datapoints"]], "datasets_available() (opendataval.dataloader.fetcher.datafetcher static method)": [[83, "opendataval.dataloader.fetcher.DataFetcher.datasets_available"]], "export_dataset() (opendataval.dataloader.fetcher.datafetcher method)": [[83, "opendataval.dataloader.fetcher.DataFetcher.export_dataset"]], "from_covar_func() (opendataval.dataloader.register.register method)": [[83, "opendataval.dataloader.register.Register.from_covar_func"]], "from_covar_label_func() (opendataval.dataloader.register.register method)": [[83, "opendataval.dataloader.register.Register.from_covar_label_func"]], "from_csv() (opendataval.dataloader.register.register method)": [[83, "opendataval.dataloader.register.Register.from_csv"]], "from_data() (opendataval.dataloader.fetcher.datafetcher class method)": [[83, "opendataval.dataloader.fetcher.DataFetcher.from_data"]], "from_data() (opendataval.dataloader.register.register method)": [[83, "opendataval.dataloader.register.Register.from_data"]], "from_data_splits() (opendataval.dataloader.fetcher.datafetcher class method)": [[83, "opendataval.dataloader.fetcher.DataFetcher.from_data_splits"]], "from_label_func() (opendataval.dataloader.register.register method)": [[83, "opendataval.dataloader.register.Register.from_label_func"]], "from_numpy() (opendataval.dataloader.register.register method)": [[83, "opendataval.dataloader.register.Register.from_numpy"]], "from_pandas() (opendataval.dataloader.register.register method)": [[83, "opendataval.dataloader.register.Register.from_pandas"]], "label_dim (opendataval.dataloader.fetcher.datafetcher property)": [[83, "opendataval.dataloader.fetcher.DataFetcher.label_dim"]], "load_data() (opendataval.dataloader.register.register method)": [[83, "opendataval.dataloader.register.Register.load_data"]], "mix_labels() (in module opendataval.dataloader.noisify)": [[83, "opendataval.dataloader.noisify.mix_labels"]], "noisify() (opendataval.dataloader.fetcher.datafetcher method)": [[83, "opendataval.dataloader.fetcher.DataFetcher.noisify"]], "num_points (opendataval.dataloader.fetcher.datafetcher property)": [[83, "opendataval.dataloader.fetcher.DataFetcher.num_points"]], "one_hot_encode() (in module opendataval.dataloader.register)": [[83, "opendataval.dataloader.register.one_hot_encode"]], "opendataval.dataloader.fetcher": [[83, "module-opendataval.dataloader.fetcher"]], "opendataval.dataloader.noisify": [[83, "module-opendataval.dataloader.noisify"]], "opendataval.dataloader.register": [[83, "module-opendataval.dataloader.register"]], "opendataval.dataloader.util": [[83, "module-opendataval.dataloader.util"]], "setup() (opendataval.dataloader.fetcher.datafetcher class method)": [[83, "opendataval.dataloader.fetcher.DataFetcher.setup"]], "split_dataset_by_count() (opendataval.dataloader.fetcher.datafetcher method)": [[83, "opendataval.dataloader.fetcher.DataFetcher.split_dataset_by_count"]], "split_dataset_by_indices() (opendataval.dataloader.fetcher.datafetcher method)": [[83, "opendataval.dataloader.fetcher.DataFetcher.split_dataset_by_indices"]], "split_dataset_by_prop() (opendataval.dataloader.fetcher.datafetcher method)": [[83, "opendataval.dataloader.fetcher.DataFetcher.split_dataset_by_prop"]], "transform (opendataval.dataloader.util.indextransformdataset property)": [[83, "opendataval.dataloader.util.IndexTransformDataset.transform"]], "bertembeddings() (in module opendataval.dataloader.datasets.nlpsets)": [[84, "opendataval.dataloader.datasets.nlpsets.BertEmbeddings"]], "challenge_url (in module opendataval.dataloader.datasets.challenge)": [[84, "opendataval.dataloader.datasets.challenge.CHALLENGE_URL"]], "cleanlabimagenet() (in module opendataval.dataloader.datasets.cleanlab)": [[84, "opendataval.dataloader.datasets.cleanlab.CleanLabImagenet"]], "max_dataset_size (in module opendataval.dataloader.datasets.nlpsets)": [[84, "opendataval.dataloader.datasets.nlpsets.MAX_DATASET_SIZE"]], "resnetembeding() (in module opendataval.dataloader.datasets.imagesets)": [[84, "opendataval.dataloader.datasets.imagesets.ResnetEmbeding"]], "visionadapter (class in opendataval.dataloader.datasets.imagesets)": [[84, "opendataval.dataloader.datasets.imagesets.VisionAdapter"]], "basename() (in module opendataval.dataloader.datasets.challenge)": [[84, "opendataval.dataloader.datasets.challenge.basename"]], "bbc_embedding() (in module opendataval.dataloader.datasets.nlpsets)": [[84, "opendataval.dataloader.datasets.nlpsets.bbc_embedding"]], "cifar10 (in module opendataval.dataloader.datasets.cleanlab)": [[84, "opendataval.dataloader.datasets.cleanlab.cifar10"]], "cifar10 (in module opendataval.dataloader.datasets.imagesets)": [[84, "opendataval.dataloader.datasets.imagesets.cifar10"]], "cifar100 (in module opendataval.dataloader.datasets.cleanlab)": [[84, "opendataval.dataloader.datasets.cleanlab.cifar100"]], "cifar100 (in module opendataval.dataloader.datasets.imagesets)": [[84, "opendataval.dataloader.datasets.imagesets.cifar100"]], "cifar100_embed() (in module opendataval.dataloader.datasets.cleanlab)": [[84, "opendataval.dataloader.datasets.cleanlab.cifar100_embed"]], "cifar10_embed() (in module opendataval.dataloader.datasets.cleanlab)": [[84, "opendataval.dataloader.datasets.cleanlab.cifar10_embed"]], "cifar10_embed() (in module opendataval.dataloader.datasets.imagesets)": [[84, "opendataval.dataloader.datasets.imagesets.cifar10_embed"]], "download_2dplanes() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_2dplanes"]], "download_miniboone() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_MiniBooNE"]], "download_adult() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_adult"]], "download_bbc() (in module opendataval.dataloader.datasets.nlpsets)": [[84, "opendataval.dataloader.datasets.nlpsets.download_bbc"]], "download_breast_cancer() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_breast_cancer"]], "download_creditcard() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_creditcard"]], "download_diabetes() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_diabetes"]], "download_digits() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_digits"]], "download_drive() (in module opendataval.dataloader.datasets.challenge)": [[84, "opendataval.dataloader.datasets.challenge.download_drive"]], "download_echomonths() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_echoMonths"]], "download_election() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_election"]], "download_electricity() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_electricity"]], "download_fried() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_fried"]], "download_imdb() (in module opendataval.dataloader.datasets.nlpsets)": [[84, "opendataval.dataloader.datasets.nlpsets.download_imdb"]], "download_iris() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_iris"]], "download_linnerud() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_linnerud"]], "download_lowbwt() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_lowbwt"]], "download_mv() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_mv"]], "download_nomao() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_nomao"]], "download_pol() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_pol"]], "download_stock() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_stock"]], "download_wave_energy() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.download_wave_energy"]], "fashion (in module opendataval.dataloader.datasets.imagesets)": [[84, "opendataval.dataloader.datasets.imagesets.fashion"]], "gaussian_classifier() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.gaussian_classifier"]], "imagenet (in module opendataval.dataloader.datasets.cleanlab)": [[84, "opendataval.dataloader.datasets.cleanlab.imagenet"]], "imagenet_embed() (in module opendataval.dataloader.datasets.cleanlab)": [[84, "opendataval.dataloader.datasets.cleanlab.imagenet_embed"]], "imdb_embedding() (in module opendataval.dataloader.datasets.nlpsets)": [[84, "opendataval.dataloader.datasets.nlpsets.imdb_embedding"]], "iris_challenge() (in module opendataval.dataloader.datasets.challenge)": [[84, "opendataval.dataloader.datasets.challenge.iris_challenge"]], "load_openml() (in module opendataval.dataloader.datasets.datasets)": [[84, "opendataval.dataloader.datasets.datasets.load_openml"]], "numbers (in module opendataval.dataloader.datasets.imagesets)": [[84, "opendataval.dataloader.datasets.imagesets.numbers"]], "opendataval.dataloader.datasets.challenge": [[84, "module-opendataval.dataloader.datasets.challenge"]], "opendataval.dataloader.datasets.cleanlab": [[84, "module-opendataval.dataloader.datasets.cleanlab"]], "show_image() (in module opendataval.dataloader.datasets.imagesets)": [[84, "opendataval.dataloader.datasets.imagesets.show_image"]], "stl10_embed() (in module opendataval.dataloader.datasets.imagesets)": [[84, "opendataval.dataloader.datasets.imagesets.stl10_embed"]], "svhn_embed() (in module opendataval.dataloader.datasets.imagesets)": [[84, "opendataval.dataloader.datasets.imagesets.svhn_embed"]], "dataevaluator (class in opendataval.dataval.api)": [[85, "opendataval.dataval.api.DataEvaluator"]], "evaluators (opendataval.dataval.api.dataevaluator attribute)": [[85, "opendataval.dataval.api.DataEvaluator.Evaluators"]], "modellessmixin (class in opendataval.dataval.api)": [[85, "opendataval.dataval.api.ModelLessMixin"]], "data_values (opendataval.dataval.api.dataevaluator property)": [[85, "opendataval.dataval.api.DataEvaluator.data_values"]], "embeddings() (opendataval.dataval.api.modellessmixin method)": [[85, "opendataval.dataval.api.ModelLessMixin.embeddings"]], "evaluate() (opendataval.dataval.api.dataevaluator method)": [[85, "opendataval.dataval.api.DataEvaluator.evaluate"]], "evaluate_data_values() (opendataval.dataval.api.dataevaluator method)": [[85, "opendataval.dataval.api.DataEvaluator.evaluate_data_values"]], "input_data() (opendataval.dataval.api.dataevaluator method)": [[85, "opendataval.dataval.api.DataEvaluator.input_data"]], "input_fetcher() (opendataval.dataval.api.dataevaluator method)": [[85, "opendataval.dataval.api.DataEvaluator.input_fetcher"]], "input_metric() (opendataval.dataval.api.dataevaluator method)": [[85, "opendataval.dataval.api.DataEvaluator.input_metric"]], "input_model() (opendataval.dataval.api.dataevaluator method)": [[85, "opendataval.dataval.api.DataEvaluator.input_model"]], "input_model_metric() (opendataval.dataval.api.dataevaluator method)": [[85, "opendataval.dataval.api.DataEvaluator.input_model_metric"]], "opendataval.dataval.api": [[85, "module-opendataval.dataval.api"]], "setup() (opendataval.dataval.api.dataevaluator method)": [[85, "opendataval.dataval.api.DataEvaluator.setup"]], "train() (opendataval.dataval.api.dataevaluator method)": [[85, "opendataval.dataval.api.DataEvaluator.train"]], "train_data_values() (opendataval.dataval.api.dataevaluator method)": [[85, "opendataval.dataval.api.DataEvaluator.train_data_values"]], "ame (class in opendataval.dataval.ame.ame)": [[86, "opendataval.dataval.ame.ame.AME"]], "baggingevaluator (class in opendataval.dataval.ame.ame)": [[86, "opendataval.dataval.ame.ame.BaggingEvaluator"]], "evaluate_data_values() (opendataval.dataval.ame.ame.ame method)": [[86, "opendataval.dataval.ame.ame.AME.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.ame.ame.baggingevaluator method)": [[86, "opendataval.dataval.ame.ame.BaggingEvaluator.evaluate_data_values"]], "get_subset_perf() (opendataval.dataval.ame.ame.baggingevaluator method)": [[86, "opendataval.dataval.ame.ame.BaggingEvaluator.get_subset_perf"]], "input_data() (opendataval.dataval.ame.ame.baggingevaluator method)": [[86, "opendataval.dataval.ame.ame.BaggingEvaluator.input_data"]], "opendataval.dataval.ame": [[86, "module-opendataval.dataval.ame"]], "opendataval.dataval.ame.ame": [[86, "module-opendataval.dataval.ame.ame"]], "train_data_values() (opendataval.dataval.ame.ame.ame method)": [[86, "opendataval.dataval.ame.ame.AME.train_data_values"]], "train_data_values() (opendataval.dataval.ame.ame.baggingevaluator method)": [[86, "opendataval.dataval.ame.ame.BaggingEvaluator.train_data_values"]], "dvrl (class in opendataval.dataval.dvrl.dvrl)": [[87, "opendataval.dataval.dvrl.dvrl.DVRL"]], "datavalueestimatorrl (class in opendataval.dataval.dvrl.dvrl)": [[87, "opendataval.dataval.dvrl.dvrl.DataValueEstimatorRL"]], "dveloss (class in opendataval.dataval.dvrl.dvrl)": [[87, "opendataval.dataval.dvrl.dvrl.DveLoss"]], "evaluate_data_values() (opendataval.dataval.dvrl.dvrl.dvrl method)": [[87, "opendataval.dataval.dvrl.dvrl.DVRL.evaluate_data_values"]], "forward() (opendataval.dataval.dvrl.dvrl.datavalueestimatorrl method)": [[87, "opendataval.dataval.dvrl.dvrl.DataValueEstimatorRL.forward"]], "forward() (opendataval.dataval.dvrl.dvrl.dveloss method)": [[87, "opendataval.dataval.dvrl.dvrl.DveLoss.forward"]], "input_data() (opendataval.dataval.dvrl.dvrl.dvrl method)": [[87, "opendataval.dataval.dvrl.dvrl.DVRL.input_data"]], "opendataval.dataval.dvrl": [[87, "module-opendataval.dataval.dvrl"]], "opendataval.dataval.dvrl.dvrl": [[87, "module-opendataval.dataval.dvrl.dvrl"]], "train_data_values() (opendataval.dataval.dvrl.dvrl.dvrl method)": [[87, "opendataval.dataval.dvrl.dvrl.DVRL.train_data_values"]], "influencefunctioneval (class in opendataval.dataval.influence.influence)": [[88, "opendataval.dataval.influence.influence.InfluenceFunctionEval"]], "evaluate_data_values() (opendataval.dataval.influence.influence.influencefunctioneval method)": [[88, "opendataval.dataval.influence.influence.InfluenceFunctionEval.evaluate_data_values"]], "input_data() (opendataval.dataval.influence.influence.influencefunctioneval method)": [[88, "opendataval.dataval.influence.influence.InfluenceFunctionEval.input_data"]], "opendataval.dataval.influence": [[88, "module-opendataval.dataval.influence"]], "opendataval.dataval.influence.influence": [[88, "module-opendataval.dataval.influence.influence"]], "train_data_values() (opendataval.dataval.influence.influence.influencefunctioneval method)": [[88, "opendataval.dataval.influence.influence.InfluenceFunctionEval.train_data_values"]], "knnshapley (class in opendataval.dataval.knnshap.knnshap)": [[89, "opendataval.dataval.knnshap.knnshap.KNNShapley"]], "evaluate_data_values() (opendataval.dataval.knnshap.knnshap.knnshapley method)": [[89, "opendataval.dataval.knnshap.knnshap.KNNShapley.evaluate_data_values"]], "match() (opendataval.dataval.knnshap.knnshap.knnshapley method)": [[89, "opendataval.dataval.knnshap.knnshap.KNNShapley.match"]], "opendataval.dataval.knnshap": [[89, "module-opendataval.dataval.knnshap"]], "opendataval.dataval.knnshap.knnshap": [[89, "module-opendataval.dataval.knnshap.knnshap"]], "train_data_values() (opendataval.dataval.knnshap.knnshap.knnshapley method)": [[89, "opendataval.dataval.knnshap.knnshap.KNNShapley.train_data_values"]], "datasetdistance (class in opendataval.dataval.lava.otdd)": [[90, "opendataval.dataval.lava.otdd.DatasetDistance"]], "featurecost (class in opendataval.dataval.lava.otdd)": [[90, "opendataval.dataval.lava.otdd.FeatureCost"]], "lavaevaluator (class in opendataval.dataval.lava.lava)": [[90, "opendataval.dataval.lava.lava.LavaEvaluator"]], "batch_augmented_cost() (in module opendataval.dataval.lava.otdd)": [[90, "opendataval.dataval.lava.otdd.batch_augmented_cost"]], "dual_sol() (opendataval.dataval.lava.otdd.datasetdistance method)": [[90, "opendataval.dataval.lava.otdd.DatasetDistance.dual_sol"]], "evaluate_data_values() (opendataval.dataval.lava.lava.lavaevaluator method)": [[90, "opendataval.dataval.lava.lava.LavaEvaluator.evaluate_data_values"]], "extract_dataset() (in module opendataval.dataval.lava.otdd)": [[90, "opendataval.dataval.lava.otdd.extract_dataset"]], "macos_fix() (in module opendataval.dataval.lava.lava)": [[90, "opendataval.dataval.lava.lava.macos_fix"]], "opendataval.dataval.lava": [[90, "module-opendataval.dataval.lava"]], "opendataval.dataval.lava.lava": [[90, "module-opendataval.dataval.lava.lava"]], "opendataval.dataval.lava.otdd": [[90, "module-opendataval.dataval.lava.otdd"]], "pwdist_exact() (in module opendataval.dataval.lava.otdd)": [[90, "opendataval.dataval.lava.otdd.pwdist_exact"]], "train_data_values() (opendataval.dataval.lava.lava.lavaevaluator method)": [[90, "opendataval.dataval.lava.lava.LavaEvaluator.train_data_values"]], "betashapley (class in opendataval.dataval.margcontrib.betashap)": [[91, "opendataval.dataval.margcontrib.betashap.BetaShapley"]], "cache (opendataval.dataval.margcontrib.shap.shapevaluator attribute)": [[91, "opendataval.dataval.margcontrib.shap.ShapEvaluator.CACHE"]], "databanzhaf (class in opendataval.dataval.margcontrib.banzhaf)": [[91, "opendataval.dataval.margcontrib.banzhaf.DataBanzhaf"]], "databanzhafmargcontrib (class in opendataval.dataval.margcontrib.banzhaf)": [[91, "opendataval.dataval.margcontrib.banzhaf.DataBanzhafMargContrib"]], "datashapley (class in opendataval.dataval.margcontrib.datashap)": [[91, "opendataval.dataval.margcontrib.datashap.DataShapley"]], "gr_max (opendataval.dataval.margcontrib.shap.shapevaluator attribute)": [[91, "opendataval.dataval.margcontrib.shap.ShapEvaluator.GR_MAX"]], "leaveoneout (class in opendataval.dataval.margcontrib.loo)": [[91, "opendataval.dataval.margcontrib.loo.LeaveOneOut"]], "shapevaluator (class in opendataval.dataval.margcontrib.shap)": [[91, "opendataval.dataval.margcontrib.shap.ShapEvaluator"]], "compute_weight() (opendataval.dataval.margcontrib.banzhaf.databanzhafmargcontrib method)": [[91, "opendataval.dataval.margcontrib.banzhaf.DataBanzhafMargContrib.compute_weight"]], "compute_weight() (opendataval.dataval.margcontrib.betashap.betashapley method)": [[91, "opendataval.dataval.margcontrib.betashap.BetaShapley.compute_weight"]], "compute_weight() (opendataval.dataval.margcontrib.datashap.datashapley method)": [[91, "opendataval.dataval.margcontrib.datashap.DataShapley.compute_weight"]], "compute_weight() (opendataval.dataval.margcontrib.shap.shapevaluator method)": [[91, "opendataval.dataval.margcontrib.shap.ShapEvaluator.compute_weight"]], "evaluate_data_values() (opendataval.dataval.margcontrib.banzhaf.databanzhaf method)": [[91, "opendataval.dataval.margcontrib.banzhaf.DataBanzhaf.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.margcontrib.banzhaf.databanzhafmargcontrib method)": [[91, "opendataval.dataval.margcontrib.banzhaf.DataBanzhafMargContrib.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.margcontrib.betashap.betashapley method)": [[91, "opendataval.dataval.margcontrib.betashap.BetaShapley.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.margcontrib.datashap.datashapley method)": [[91, "opendataval.dataval.margcontrib.datashap.DataShapley.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.margcontrib.loo.leaveoneout method)": [[91, "opendataval.dataval.margcontrib.loo.LeaveOneOut.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.margcontrib.shap.shapevaluator method)": [[91, "opendataval.dataval.margcontrib.shap.ShapEvaluator.evaluate_data_values"]], "input_data() (opendataval.dataval.margcontrib.banzhaf.databanzhaf method)": [[91, "opendataval.dataval.margcontrib.banzhaf.DataBanzhaf.input_data"]], "input_data() (opendataval.dataval.margcontrib.loo.leaveoneout method)": [[91, "opendataval.dataval.margcontrib.loo.LeaveOneOut.input_data"]], "input_data() (opendataval.dataval.margcontrib.shap.shapevaluator method)": [[91, "opendataval.dataval.margcontrib.shap.ShapEvaluator.input_data"]], "opendataval.dataval.margcontrib": [[91, "module-opendataval.dataval.margcontrib"]], "opendataval.dataval.margcontrib.banzhaf": [[91, "module-opendataval.dataval.margcontrib.banzhaf"]], "opendataval.dataval.margcontrib.betashap": [[91, "module-opendataval.dataval.margcontrib.betashap"]], "opendataval.dataval.margcontrib.datashap": [[91, "module-opendataval.dataval.margcontrib.datashap"]], "opendataval.dataval.margcontrib.loo": [[91, "module-opendataval.dataval.margcontrib.loo"]], "opendataval.dataval.margcontrib.shap": [[91, "module-opendataval.dataval.margcontrib.shap"]], "train_data_values() (opendataval.dataval.margcontrib.banzhaf.databanzhaf method)": [[91, "opendataval.dataval.margcontrib.banzhaf.DataBanzhaf.train_data_values"]], "train_data_values() (opendataval.dataval.margcontrib.loo.leaveoneout method)": [[91, "opendataval.dataval.margcontrib.loo.LeaveOneOut.train_data_values"]], "train_data_values() (opendataval.dataval.margcontrib.shap.shapevaluator method)": [[91, "opendataval.dataval.margcontrib.shap.ShapEvaluator.train_data_values"]], "dataoob (class in opendataval.dataval.oob.oob)": [[92, "opendataval.dataval.oob.oob.DataOob"]], "groupingindex (class in opendataval.dataval.oob.oob)": [[92, "opendataval.dataval.oob.oob.GroupingIndex"]], "add_indices() (opendataval.dataval.oob.oob.groupingindex method)": [[92, "opendataval.dataval.oob.oob.GroupingIndex.add_indices"]], "evaluate_data_values() (opendataval.dataval.oob.oob.dataoob method)": [[92, "opendataval.dataval.oob.oob.DataOob.evaluate_data_values"]], "input_data() (opendataval.dataval.oob.oob.dataoob method)": [[92, "opendataval.dataval.oob.oob.DataOob.input_data"]], "opendataval.dataval.oob": [[92, "module-opendataval.dataval.oob"]], "opendataval.dataval.oob.oob": [[92, "module-opendataval.dataval.oob.oob"]], "train_data_values() (opendataval.dataval.oob.oob.dataoob method)": [[92, "opendataval.dataval.oob.oob.DataOob.train_data_values"]], "randomevaluator (class in opendataval.dataval.random.random)": [[93, "opendataval.dataval.random.random.RandomEvaluator"]], "evaluate_data_values() (opendataval.dataval.random.random.randomevaluator method)": [[93, "opendataval.dataval.random.random.RandomEvaluator.evaluate_data_values"]], "opendataval.dataval.random": [[93, "module-opendataval.dataval.random"]], "opendataval.dataval.random.random": [[93, "module-opendataval.dataval.random.random"]], "train_data_values() (opendataval.dataval.random.random.randomevaluator method)": [[93, "opendataval.dataval.random.random.RandomEvaluator.train_data_values"]], "robustvolumeshapley (class in opendataval.dataval.volume.rvs)": [[94, "opendataval.dataval.volume.rvs.RobustVolumeShapley"]], "compute_robust_volumes() (in module opendataval.dataval.volume.rvs)": [[94, "opendataval.dataval.volume.rvs.compute_robust_volumes"]], "compute_x_tilde_and_counts() (in module opendataval.dataval.volume.rvs)": [[94, "opendataval.dataval.volume.rvs.compute_x_tilde_and_counts"]], "evaluate_data_values() (opendataval.dataval.volume.rvs.robustvolumeshapley method)": [[94, "opendataval.dataval.volume.rvs.RobustVolumeShapley.evaluate_data_values"]], "input_data() (opendataval.dataval.volume.rvs.robustvolumeshapley method)": [[94, "opendataval.dataval.volume.rvs.RobustVolumeShapley.input_data"]], "opendataval.dataval.volume": [[94, "module-opendataval.dataval.volume"]], "opendataval.dataval.volume.rvs": [[94, "module-opendataval.dataval.volume.rvs"]], "train_data_values() (opendataval.dataval.volume.rvs.robustvolumeshapley method)": [[94, "opendataval.dataval.volume.rvs.RobustVolumeShapley.train_data_values"]], "experimentmediator (class in opendataval.experiment.api)": [[95, "opendataval.experiment.api.ExperimentMediator"]], "compute_data_values() (opendataval.experiment.api.experimentmediator method)": [[95, "opendataval.experiment.api.ExperimentMediator.compute_data_values"]], "discover_corrupted_sample() (in module opendataval.experiment.exper_methods)": [[95, "opendataval.experiment.exper_methods.discover_corrupted_sample"]], "evaluate() (opendataval.experiment.api.experimentmediator method)": [[95, "opendataval.experiment.api.ExperimentMediator.evaluate"]], "f1_score() (in module opendataval.experiment.util)": [[95, "opendataval.experiment.util.f1_score"]], "increasing_bin_removal() (in module opendataval.experiment.exper_methods)": [[95, "opendataval.experiment.exper_methods.increasing_bin_removal"]], "model_factory_setup() (opendataval.experiment.api.experimentmediator class method)": [[95, "opendataval.experiment.api.ExperimentMediator.model_factory_setup"]], "noisy_detection() (in module opendataval.experiment.exper_methods)": [[95, "opendataval.experiment.exper_methods.noisy_detection"]], "oned_twonn_clustering() (in module opendataval.experiment.util)": [[95, "opendataval.experiment.util.oned_twonn_clustering"]], "opendataval.experiment.api": [[95, "module-opendataval.experiment.api"]], "opendataval.experiment.util": [[95, "module-opendataval.experiment.util"]], "plot() (opendataval.experiment.api.experimentmediator method)": [[95, "opendataval.experiment.api.ExperimentMediator.plot"]], "remove_high_low() (in module opendataval.experiment.exper_methods)": [[95, "opendataval.experiment.exper_methods.remove_high_low"]], "save_dataval() (in module opendataval.experiment.exper_methods)": [[95, "opendataval.experiment.exper_methods.save_dataval"]], "save_output() (opendataval.experiment.api.experimentmediator method)": [[95, "opendataval.experiment.api.ExperimentMediator.save_output"]], "set_output_directory() (opendataval.experiment.api.experimentmediator method)": [[95, "opendataval.experiment.api.ExperimentMediator.set_output_directory"]], "setup() (opendataval.experiment.api.experimentmediator class method)": [[95, "opendataval.experiment.api.ExperimentMediator.setup"]], "bertclassifier (class in opendataval.model.bert)": [[96, "opendataval.model.bert.BertClassifier"]], "classifiermlp (class in opendataval.model.mlp)": [[96, "opendataval.model.mlp.ClassifierMLP"]], "classifiersklearnwrapper (class in opendataval.model.api)": [[96, "opendataval.model.api.ClassifierSkLearnWrapper"]], "classifierunweightedsklearnwrapper (class in opendataval.model.api)": [[96, "opendataval.model.api.ClassifierUnweightedSkLearnWrapper"]], "lenet (class in opendataval.model.lenet)": [[96, "opendataval.model.lenet.LeNet"]], "logisticregression (class in opendataval.model.logistic_regression)": [[96, "opendataval.model.logistic_regression.LogisticRegression"]], "model (class in opendataval.model.api)": [[96, "opendataval.model.api.Model"]], "models (opendataval.model.api.model attribute)": [[96, "opendataval.model.api.Model.Models"]], "regressionmlp (class in opendataval.model.mlp)": [[96, "opendataval.model.mlp.RegressionMLP"]], "regressionsklearnwrapper (class in opendataval.model.api)": [[96, "opendataval.model.api.RegressionSkLearnWrapper"]], "torchclassmixin (class in opendataval.model.api)": [[96, "opendataval.model.api.TorchClassMixin"]], "torchpredictmixin (class in opendataval.model.api)": [[96, "opendataval.model.api.TorchPredictMixin"]], "torchregressmixin (class in opendataval.model.api)": [[96, "opendataval.model.api.TorchRegressMixin"]], "clone() (opendataval.model.api.model method)": [[96, "opendataval.model.api.Model.clone"]], "device (opendataval.model.api.torchclassmixin property)": [[96, "opendataval.model.api.TorchClassMixin.device"]], "device (opendataval.model.api.torchpredictmixin property)": [[96, "opendataval.model.api.TorchPredictMixin.device"]], "device (opendataval.model.api.torchregressmixin property)": [[96, "opendataval.model.api.TorchRegressMixin.device"]], "fit() (opendataval.model.api.classifiersklearnwrapper method)": [[96, "opendataval.model.api.ClassifierSkLearnWrapper.fit"]], "fit() (opendataval.model.api.classifierunweightedsklearnwrapper method)": [[96, "opendataval.model.api.ClassifierUnweightedSkLearnWrapper.fit"]], "fit() (opendataval.model.api.model method)": [[96, "opendataval.model.api.Model.fit"]], "fit() (opendataval.model.api.regressionsklearnwrapper method)": [[96, "opendataval.model.api.RegressionSkLearnWrapper.fit"]], "fit() (opendataval.model.api.torchclassmixin method)": [[96, "opendataval.model.api.TorchClassMixin.fit"]], "fit() (opendataval.model.api.torchregressmixin method)": [[96, "opendataval.model.api.TorchRegressMixin.fit"]], "fit() (opendataval.model.bert.bertclassifier method)": [[96, "opendataval.model.bert.BertClassifier.fit"]], "forward() (opendataval.model.bert.bertclassifier method)": [[96, "opendataval.model.bert.BertClassifier.forward"]], "forward() (opendataval.model.lenet.lenet method)": [[96, "opendataval.model.lenet.LeNet.forward"]], "forward() (opendataval.model.logistic_regression.logisticregression method)": [[96, "opendataval.model.logistic_regression.LogisticRegression.forward"]], "forward() (opendataval.model.mlp.classifiermlp method)": [[96, "opendataval.model.mlp.ClassifierMLP.forward"]], "forward() (opendataval.model.mlp.regressionmlp method)": [[96, "opendataval.model.mlp.RegressionMLP.forward"]], "opendataval.model.api": [[96, "module-opendataval.model.api"]], "opendataval.model.bert": [[96, "module-opendataval.model.bert"]], "opendataval.model.lenet": [[96, "module-opendataval.model.lenet"]], "opendataval.model.logistic_regression": [[96, "module-opendataval.model.logistic_regression"]], "opendataval.model.mlp": [[96, "module-opendataval.model.mlp"]], "predict() (opendataval.model.api.classifiersklearnwrapper method)": [[96, "opendataval.model.api.ClassifierSkLearnWrapper.predict"]], "predict() (opendataval.model.api.model method)": [[96, "opendataval.model.api.Model.predict"]], "predict() (opendataval.model.api.regressionsklearnwrapper method)": [[96, "opendataval.model.api.RegressionSkLearnWrapper.predict"]], "predict() (opendataval.model.api.torchpredictmixin method)": [[96, "opendataval.model.api.TorchPredictMixin.predict"]], "predict() (opendataval.model.bert.bertclassifier method)": [[96, "opendataval.model.bert.BertClassifier.predict"]], "to_numpy() (in module opendataval.model.api)": [[96, "opendataval.model.api.to_numpy"]], "tokenize() (opendataval.model.bert.bertclassifier method)": [[96, "opendataval.model.bert.BertClassifier.tokenize"]], "training (opendataval.model.api.torchclassmixin attribute)": [[96, "opendataval.model.api.TorchClassMixin.training"]], "training (opendataval.model.api.torchpredictmixin attribute)": [[96, "opendataval.model.api.TorchPredictMixin.training"]], "training (opendataval.model.api.torchregressmixin attribute)": [[96, "opendataval.model.api.TorchRegressMixin.training"]]}})