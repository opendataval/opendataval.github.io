Search.setIndex({"docnames": ["generated/generated/generated/opendataval.dataloader.datasets.datasets", "generated/generated/generated/opendataval.dataloader.datasets.imagesets", "generated/generated/generated/opendataval.dataloader.datasets.nlpsets", "generated/generated/opendataval.dataloader.CatDataset", "generated/generated/opendataval.dataloader.DataFetcher", "generated/generated/opendataval.dataloader.Register", "generated/generated/opendataval.dataloader.cache", "generated/generated/opendataval.dataloader.datasets", "generated/generated/opendataval.dataloader.datasets.datasets", "generated/generated/opendataval.dataloader.datasets.imagesets", "generated/generated/opendataval.dataloader.datasets.nlpsets", "generated/generated/opendataval.dataloader.mix_labels", "generated/generated/opendataval.dataloader.one_hot_encode", "generated/generated/opendataval.dataval.AME", "generated/generated/opendataval.dataval.BetaShapley", "generated/generated/opendataval.dataval.DVRL", "generated/generated/opendataval.dataval.DataBanzhaf", "generated/generated/opendataval.dataval.DataEvaluator", "generated/generated/opendataval.dataval.DataOob", "generated/generated/opendataval.dataval.DataShapley", "generated/generated/opendataval.dataval.InfluenceFunctionEval", "generated/generated/opendataval.dataval.KNNShapley", "generated/generated/opendataval.dataval.LeaveOneOut", "generated/generated/opendataval.dataval.RandomEvaluator", "generated/generated/opendataval.dataval.ShapEvaluator", "generated/generated/opendataval.experiment.ExperimentMediator", "generated/generated/opendataval.experiment.exper_methods", "generated/generated/opendataval.model.ClassifierSkLearnWrapper", "generated/generated/opendataval.model.ClassifierUnweightedSkLearnWrapper", "generated/generated/opendataval.model.Model", "generated/generated/opendataval.model.ModelFactory", "generated/generated/opendataval.model.RegressionSkLearnWrapper", "generated/generated/opendataval.model.TorchClassMixin", "generated/generated/opendataval.model.TorchPredictMixin", "generated/generated/opendataval.model.TorchRegressMixin", "generated/opendataval.__version__", "generated/opendataval.dataloader", "generated/opendataval.dataloader.CatDataset", "generated/opendataval.dataloader.DataFetcher", "generated/opendataval.dataloader.Register", "generated/opendataval.dataloader.cache", "generated/opendataval.dataloader.datasets", "generated/opendataval.dataloader.datasets.datasets", "generated/opendataval.dataloader.datasets.imagesets", "generated/opendataval.dataloader.datasets.nlpsets", "generated/opendataval.dataloader.mix_labels", "generated/opendataval.dataloader.one_hot_encode", "generated/opendataval.dataval", "generated/opendataval.dataval.AME", "generated/opendataval.dataval.BetaShapley", "generated/opendataval.dataval.DVRL", "generated/opendataval.dataval.DataBanzhaf", "generated/opendataval.dataval.DataEvaluator", "generated/opendataval.dataval.DataOob", "generated/opendataval.dataval.DataShapley", "generated/opendataval.dataval.InfluenceFunctionEval", "generated/opendataval.dataval.KNNShapley", "generated/opendataval.dataval.LeaveOneOut", "generated/opendataval.dataval.RandomEvaluator", "generated/opendataval.dataval.ShapEvaluator", "generated/opendataval.experiment", "generated/opendataval.experiment.ExperimentMediator", "generated/opendataval.experiment.exper_methods", "generated/opendataval.model", "generated/opendataval.model.ClassifierSkLearnWrapper", "generated/opendataval.model.ClassifierUnweightedSkLearnWrapper", "generated/opendataval.model.Model", "generated/opendataval.model.ModelFactory", "generated/opendataval.model.RegressionSkLearnWrapper", "generated/opendataval.model.TorchClassMixin", "generated/opendataval.model.TorchPredictMixin", "generated/opendataval.model.TorchRegressMixin", "generated/opendataval.util.load_mediator_output", "generated/opendataval.util.set_random_state", "index", "leaderboards", "license", "modules", "opendataval", "opendataval.dataloader", "opendataval.dataloader.datasets", "opendataval.dataval", "opendataval.dataval.ame", "opendataval.dataval.dvrl", "opendataval.dataval.influence", "opendataval.dataval.knnshap", "opendataval.dataval.margcontrib", "opendataval.dataval.oob", "opendataval.dataval.random", "opendataval.experiment", "opendataval.model", "paper"], "filenames": ["generated/generated/generated/opendataval.dataloader.datasets.datasets.rst", "generated/generated/generated/opendataval.dataloader.datasets.imagesets.rst", "generated/generated/generated/opendataval.dataloader.datasets.nlpsets.rst", "generated/generated/opendataval.dataloader.CatDataset.rst", "generated/generated/opendataval.dataloader.DataFetcher.rst", "generated/generated/opendataval.dataloader.Register.rst", "generated/generated/opendataval.dataloader.cache.rst", "generated/generated/opendataval.dataloader.datasets.rst", "generated/generated/opendataval.dataloader.datasets.datasets.rst", "generated/generated/opendataval.dataloader.datasets.imagesets.rst", "generated/generated/opendataval.dataloader.datasets.nlpsets.rst", "generated/generated/opendataval.dataloader.mix_labels.rst", "generated/generated/opendataval.dataloader.one_hot_encode.rst", "generated/generated/opendataval.dataval.AME.rst", "generated/generated/opendataval.dataval.BetaShapley.rst", "generated/generated/opendataval.dataval.DVRL.rst", "generated/generated/opendataval.dataval.DataBanzhaf.rst", "generated/generated/opendataval.dataval.DataEvaluator.rst", "generated/generated/opendataval.dataval.DataOob.rst", "generated/generated/opendataval.dataval.DataShapley.rst", "generated/generated/opendataval.dataval.InfluenceFunctionEval.rst", "generated/generated/opendataval.dataval.KNNShapley.rst", "generated/generated/opendataval.dataval.LeaveOneOut.rst", "generated/generated/opendataval.dataval.RandomEvaluator.rst", "generated/generated/opendataval.dataval.ShapEvaluator.rst", "generated/generated/opendataval.experiment.ExperimentMediator.rst", "generated/generated/opendataval.experiment.exper_methods.rst", "generated/generated/opendataval.model.ClassifierSkLearnWrapper.rst", "generated/generated/opendataval.model.ClassifierUnweightedSkLearnWrapper.rst", "generated/generated/opendataval.model.Model.rst", "generated/generated/opendataval.model.ModelFactory.rst", "generated/generated/opendataval.model.RegressionSkLearnWrapper.rst", "generated/generated/opendataval.model.TorchClassMixin.rst", "generated/generated/opendataval.model.TorchPredictMixin.rst", "generated/generated/opendataval.model.TorchRegressMixin.rst", "generated/opendataval.__version__.rst", "generated/opendataval.dataloader.rst", "generated/opendataval.dataloader.CatDataset.rst", "generated/opendataval.dataloader.DataFetcher.rst", "generated/opendataval.dataloader.Register.rst", "generated/opendataval.dataloader.cache.rst", "generated/opendataval.dataloader.datasets.rst", "generated/opendataval.dataloader.datasets.datasets.rst", "generated/opendataval.dataloader.datasets.imagesets.rst", "generated/opendataval.dataloader.datasets.nlpsets.rst", "generated/opendataval.dataloader.mix_labels.rst", "generated/opendataval.dataloader.one_hot_encode.rst", "generated/opendataval.dataval.rst", "generated/opendataval.dataval.AME.rst", "generated/opendataval.dataval.BetaShapley.rst", "generated/opendataval.dataval.DVRL.rst", "generated/opendataval.dataval.DataBanzhaf.rst", "generated/opendataval.dataval.DataEvaluator.rst", "generated/opendataval.dataval.DataOob.rst", "generated/opendataval.dataval.DataShapley.rst", "generated/opendataval.dataval.InfluenceFunctionEval.rst", "generated/opendataval.dataval.KNNShapley.rst", "generated/opendataval.dataval.LeaveOneOut.rst", "generated/opendataval.dataval.RandomEvaluator.rst", "generated/opendataval.dataval.ShapEvaluator.rst", "generated/opendataval.experiment.rst", "generated/opendataval.experiment.ExperimentMediator.rst", "generated/opendataval.experiment.exper_methods.rst", "generated/opendataval.model.rst", "generated/opendataval.model.ClassifierSkLearnWrapper.rst", "generated/opendataval.model.ClassifierUnweightedSkLearnWrapper.rst", "generated/opendataval.model.Model.rst", "generated/opendataval.model.ModelFactory.rst", "generated/opendataval.model.RegressionSkLearnWrapper.rst", "generated/opendataval.model.TorchClassMixin.rst", "generated/opendataval.model.TorchPredictMixin.rst", "generated/opendataval.model.TorchRegressMixin.rst", "generated/opendataval.util.load_mediator_output.rst", "generated/opendataval.util.set_random_state.rst", "index.rst", "leaderboards.rst", "license.rst", "modules.rst", "opendataval.rst", "opendataval.dataloader.rst", "opendataval.dataloader.datasets.rst", "opendataval.dataval.rst", "opendataval.dataval.ame.rst", "opendataval.dataval.dvrl.rst", "opendataval.dataval.influence.rst", "opendataval.dataval.knnshap.rst", "opendataval.dataval.margcontrib.rst", "opendataval.dataval.oob.rst", "opendataval.dataval.random.rst", "opendataval.experiment.rst", "opendataval.model.rst", "paper.rst"], "titles": ["opendataval.dataloader.datasets.datasets", "opendataval.dataloader.datasets.imagesets", "opendataval.dataloader.datasets.nlpsets", "opendataval.dataloader.CatDataset", "opendataval.dataloader.DataFetcher", "opendataval.dataloader.Register", "opendataval.dataloader.cache", "opendataval.dataloader.datasets", "opendataval.dataloader.datasets.datasets", "opendataval.dataloader.datasets.imagesets", "opendataval.dataloader.datasets.nlpsets", "opendataval.dataloader.mix_labels", "opendataval.dataloader.one_hot_encode", "opendataval.dataval.AME", "opendataval.dataval.BetaShapley", "opendataval.dataval.DVRL", "opendataval.dataval.DataBanzhaf", "opendataval.dataval.DataEvaluator", "opendataval.dataval.DataOob", "opendataval.dataval.DataShapley", "opendataval.dataval.InfluenceFunctionEval", "opendataval.dataval.KNNShapley", "opendataval.dataval.LeaveOneOut", "opendataval.dataval.RandomEvaluator", "opendataval.dataval.ShapEvaluator", "opendataval.experiment.ExperimentMediator", "opendataval.experiment.exper_methods", "opendataval.model.ClassifierSkLearnWrapper", "opendataval.model.ClassifierUnweightedSkLearnWrapper", "opendataval.model.Model", "opendataval.model.ModelFactory", "opendataval.model.RegressionSkLearnWrapper", "opendataval.model.TorchClassMixin", "opendataval.model.TorchPredictMixin", "opendataval.model.TorchRegressMixin", "opendataval.__version__", "opendataval.dataloader", "opendataval.dataloader.CatDataset", "opendataval.dataloader.DataFetcher", "opendataval.dataloader.Register", "opendataval.dataloader.cache", "opendataval.dataloader.datasets", "opendataval.dataloader.datasets.datasets", "opendataval.dataloader.datasets.imagesets", "opendataval.dataloader.datasets.nlpsets", "opendataval.dataloader.mix_labels", "opendataval.dataloader.one_hot_encode", "opendataval.dataval", "opendataval.dataval.AME", "opendataval.dataval.BetaShapley", "opendataval.dataval.DVRL", "opendataval.dataval.DataBanzhaf", "opendataval.dataval.DataEvaluator", "opendataval.dataval.DataOob", "opendataval.dataval.DataShapley", "opendataval.dataval.InfluenceFunctionEval", "opendataval.dataval.KNNShapley", "opendataval.dataval.LeaveOneOut", "opendataval.dataval.RandomEvaluator", "opendataval.dataval.ShapEvaluator", "opendataval.experiment", "opendataval.experiment.ExperimentMediator", "opendataval.experiment.exper_methods", "opendataval.model", "opendataval.model.ClassifierSkLearnWrapper", "opendataval.model.ClassifierUnweightedSkLearnWrapper", "opendataval.model.Model", "opendataval.model.ModelFactory", "opendataval.model.RegressionSkLearnWrapper", "opendataval.model.TorchClassMixin", "opendataval.model.TorchPredictMixin", "opendataval.model.TorchRegressMixin", "opendataval.util.load_mediator_output", "opendataval.util.set_random_state", "OpenDataVal Documentation", "OpenDataVal Leaderboards", "OpenDataVal license", "opendataval", "opendataval package", "opendataval.dataloader package", "opendataval.dataloader.datasets package", "opendataval.dataval package", "opendataval.dataval.ame package", "opendataval.dataval.dvrl package", "opendataval.dataval.influence package", "opendataval.dataval.knnshap package", "opendataval.dataval.margcontrib package", "opendataval.dataval.oob package", "opendataval.dataval.random package", "opendataval.experiment package", "opendataval.model package", "OpenDataVal: a Unified Benchmark for Data Valuation"], "terms": {"default": [0, 4, 5, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 38, 39, 40, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "data": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 74, 75, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90], "set": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 25, 37, 38, 39, 42, 43, 44, 45, 60, 61, 73, 78, 81, 84, 86, 89, 90], "function": [0, 1, 2, 4, 5, 8, 9, 10, 14, 20, 26, 36, 38, 39, 42, 43, 44, 49, 55, 60, 62, 63, 78, 79, 80, 81, 83, 84, 86, 89, 90], "torchvis": [1, 9, 43, 80], "us": [1, 2, 4, 7, 9, 10, 14, 15, 17, 21, 25, 30, 38, 41, 43, 44, 49, 50, 52, 56, 60, 61, 63, 67, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90], "depend": [1, 2, 9, 10, 43, 44, 80, 81], "modul": [1, 2, 9, 10, 32, 33, 34, 43, 44, 69, 70, 71, 77], "attribut": [1, 2, 5, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 39, 43, 44, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 68, 69, 70, 71], "class": [1, 3, 4, 5, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 69, 70, 71, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "nlp": [2, 10, 44, 74, 79, 80], "huggingfac": [2, 10, 44, 80, 90], "transform": [2, 4, 5, 10, 38, 39, 44, 79, 80, 81, 82, 83, 84, 86, 87, 90], "dataset": [3, 18, 36, 37, 53, 74, 78, 79, 81, 83, 86, 87, 89, 90], "list": [3, 37, 78, 79, 80, 87, 89, 90], "torch": [3, 4, 15, 30, 32, 33, 34, 37, 38, 50, 67, 69, 70, 71, 79, 80, 81, 82, 83, 84, 86, 87, 89], "util": [3, 37, 77, 80, 81], "ani": [3, 5, 17, 25, 27, 28, 30, 31, 37, 39, 52, 61, 64, 65, 67, 68, 74, 76, 79, 81, 82, 83, 84, 86, 87, 89, 90], "wrap": [3, 27, 28, 31, 37, 64, 65, 68, 78, 79, 80, 90], "index": [3, 37, 74, 79, 89], "tupl": [3, 4, 17, 30, 37, 38, 52, 67, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90], "we": [3, 11, 14, 15, 18, 19, 21, 24, 37, 45, 49, 50, 53, 54, 56, 59, 74, 79, 81, 83, 84, 85, 86, 87, 89, 90], "would": [3, 17, 37, 52, 79, 81], "like": [3, 37, 79, 83], "concat": [3, 15, 37, 50, 79, 83], "togeth": [3, 37, 79], "must": [3, 4, 5, 14, 25, 37, 38, 39, 49, 61, 79, 86, 89, 90], "same": [3, 4, 11, 37, 38, 45, 79, 81, 89, 90], "length": [3, 4, 37, 38, 79, 89], "valueerror": [3, 4, 12, 30, 37, 38, 46, 67, 79, 90], "If": [3, 4, 5, 37, 38, 39, 79, 83, 89, 90], "all": [3, 4, 5, 24, 25, 37, 38, 39, 59, 61, 74, 76, 78, 79, 80, 84, 85, 86, 87, 89], "input": [3, 4, 12, 15, 18, 30, 37, 38, 46, 50, 53, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "ar": [3, 4, 5, 14, 18, 19, 24, 37, 38, 39, 49, 53, 54, 59, 60, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90], "__init__": [3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 69, 70, 71, 80], "method": [3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 69, 70, 71, 78, 81, 86, 90], "dataset_nam": [4, 5, 38, 39, 79, 89], "str": [4, 5, 6, 7, 11, 14, 17, 19, 24, 25, 30, 38, 39, 40, 41, 45, 49, 52, 54, 59, 61, 67, 72, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90], "cache_dir": [4, 6, 38, 40, 79, 80, 89], "none": [4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 33, 34, 38, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 67, 69, 70, 71, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "force_download": [4, 6, 38, 40, 79, 80, 89], "bool": [4, 5, 6, 38, 39, 40, 79, 80, 89, 90], "fals": [4, 5, 6, 38, 39, 40, 79, 80, 89], "random_st": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89], "randomst": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89], "load": [4, 7, 21, 38, 41, 56, 72, 78, 80, 83, 85, 89, 90], "an": [4, 17, 21, 25, 36, 38, 47, 52, 56, 60, 61, 63, 74, 76, 78, 79, 80, 81, 83, 85, 89, 90], "experi": [4, 13, 17, 38, 48, 52, 75, 78, 79, 81, 82], "from": [4, 23, 30, 38, 47, 58, 67, 75, 76, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90], "name": [4, 5, 6, 7, 25, 30, 36, 38, 39, 40, 41, 61, 67, 75, 78, 79, 80, 89, 90], "facad": [4, 38, 79], "regist": [4, 7, 36, 38, 41, 47, 78, 80, 81, 89], "object": [4, 5, 11, 36, 38, 39, 45, 63, 78, 79, 80, 81, 89, 90], "prepar": [4, 38, 79], "provid": [4, 29, 36, 38, 47, 60, 66, 74, 76, 78, 79, 80, 81, 89, 90], "api": [4, 17, 36, 38, 52, 60, 74, 78, 79], "subsequ": [4, 38, 79], "split": [4, 38, 79], "ad": [4, 5, 11, 38, 39, 45, 78, 79, 81, 86], "nois": [4, 11, 14, 24, 38, 45, 49, 59, 79, 80, 86, 89], "tensor": [4, 15, 21, 30, 38, 50, 56, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "option": [4, 5, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "directori": [4, 6, 25, 38, 40, 61, 79, 80, 89, 90], "where": [4, 38, 74, 79, 80, 89], "cach": [4, 5, 14, 17, 19, 24, 38, 39, 49, 52, 54, 59, 79, 80, 81, 86, 89], "which": [4, 38, 79, 82, 86, 89, 90], "forc": [4, 6, 38, 40, 79, 80, 89], "download": [4, 5, 6, 38, 39, 40, 79, 80, 89], "sourc": [4, 38, 74, 79, 89], "url": [4, 6, 38, 40, 79, 80, 89], "random": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89], "initi": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 33, 34, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 69, 70, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "state": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 33, 34, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 69, 70, 71, 73, 74, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "datapoint": [4, 38, 79], "train": [4, 11, 13, 15, 17, 20, 21, 25, 38, 45, 48, 50, 52, 55, 56, 61, 63, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "valid": [4, 11, 18, 38, 45, 53, 79, 80, 81, 87, 89], "test": [4, 20, 26, 38, 55, 60, 62, 79, 80, 81, 82, 83, 84, 86, 87, 89], "covari": [4, 30, 36, 38, 67, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90], "label": [4, 5, 11, 25, 27, 28, 30, 36, 38, 39, 45, 61, 64, 65, 67, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90], "covar_dim": [4, 30, 38, 67, 79, 90], "int": [4, 13, 14, 15, 16, 18, 19, 20, 21, 24, 27, 28, 30, 38, 48, 49, 50, 51, 53, 54, 55, 56, 59, 64, 65, 67, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90], "dimens": [4, 15, 30, 38, 50, 67, 79, 83, 90], "label_dim": [4, 30, 38, 67, 79, 90], "num_point": [4, 20, 38, 55, 79, 84], "number": [4, 13, 14, 15, 16, 18, 19, 20, 21, 24, 35, 38, 48, 49, 50, 51, 53, 54, 55, 56, 59, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "point": [4, 11, 18, 20, 21, 25, 38, 45, 53, 55, 56, 61, 74, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "total": [4, 38, 79, 89], "one_hot": [4, 5, 38, 39, 79], "true": [4, 38, 79, 89, 90], "ha": [4, 38, 79, 81, 86, 89, 90], "categor": [4, 38, 79, 80, 81, 90], "one": [4, 5, 18, 26, 38, 39, 53, 62, 79, 81, 86, 87, 89, 90], "hot": [4, 5, 12, 38, 39, 46, 79], "encod": [4, 5, 12, 38, 39, 46, 79, 83], "_indic": [4, 38, 79], "np": [4, 11, 14, 17, 19, 24, 38, 45, 49, 52, 54, 59, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "ndarrai": [4, 11, 12, 38, 45, 46, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "The": [4, 17, 38, 47, 52, 75, 76, 78, 79, 80, 81, 83, 84, 90], "indic": [4, 11, 25, 38, 45, 61, 75, 79, 83, 89, 90], "origin": [4, 38, 79], "make": [4, 38, 63, 79, 90], "noisy_train_indic": [4, 11, 38, 45, 79, 89], "them": [4, 36, 38, 78, 79, 90], "x": [4, 38, 78, 79, 80, 83, 89, 90], "y": [4, 14, 18, 24, 38, 49, 53, 59, 78, 79, 81, 83, 85, 86, 87, 90], "_": [4, 38, 79], "access": [4, 25, 38, 61, 79, 89], "raw": [4, 38, 79, 80, 81], "prior": [4, 14, 19, 24, 38, 49, 54, 59, 79, 80, 86], "being": [4, 38, 79, 83], "keyerror": [4, 38, 79], "In": [4, 38, 60, 74, 79, 83, 89], "order": [4, 38, 79, 87], "you": [4, 38, 79, 86], "creat": [4, 5, 30, 38, 39, 47, 67, 78, 81, 89, 90], "exce": [4, 38, 79], "other": [4, 38, 63, 76, 79, 86, 90], "word": [4, 17, 25, 30, 38, 52, 61, 63, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "valu": [4, 14, 15, 16, 17, 18, 19, 20, 23, 24, 38, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 63, 74, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "less": [4, 15, 21, 38, 50, 56, 79, 81, 83, 85, 89, 90], "than": [4, 15, 38, 50, 79, 83, 89, 90], "thei": [4, 38, 79, 80], "float": [4, 11, 14, 15, 18, 19, 20, 24, 38, 45, 49, 50, 53, 54, 55, 59, 78, 79, 81, 82, 83, 84, 86, 87, 89, 90], "1": [4, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 35, 38, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 63, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "0": [4, 11, 15, 18, 20, 23, 35, 38, 45, 50, 53, 55, 58, 63, 74, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90], "anyth": [4, 38, 79], "els": [4, 38, 79], "error": [4, 38, 63, 79, 80, 81, 90], "specifi": [4, 14, 20, 21, 30, 38, 49, 55, 56, 67, 79, 81, 84, 85, 86, 89, 90], "repeat": [4, 38, 79], "outsid": [4, 15, 38, 50, 79, 83], "rang": [4, 38, 79], "cacheabl": [5, 39, 79], "presplit": [5, 39, 79], "defin": [5, 36, 39, 79, 80, 89], "its": [5, 39, 79], "retriev": [5, 39, 79], "fetch": [5, 39, 79], "datafetch": [5, 7, 11, 25, 30, 36, 39, 41, 45, 47, 61, 67, 78, 79, 80, 81, 89, 90], "also": [5, 39, 79, 89], "allow": [5, 36, 39, 79], "specif": [5, 21, 30, 39, 56, 67, 79, 81, 84, 85, 90], "appli": [5, 39, 74, 79, 89, 90], "thi": [5, 11, 21, 30, 36, 39, 45, 56, 67, 74, 76, 79, 85, 86, 89, 90], "give": [5, 39, 79], "benefit": [5, 39, 79], "distinguish": [5, 39, 79], "separ": [5, 36, 39, 79], "whether": [5, 39, 76, 79, 80, 89, 90], "should": [5, 39, 74, 79, 90], "can": [5, 7, 21, 27, 28, 39, 41, 56, 60, 64, 65, 74, 79, 80, 83, 85, 86, 89, 90], "wa": [5, 39, 79, 89, 90], "keep": [5, 39, 79], "track": [5, 39, 79], "uniqu": [5, 11, 14, 19, 24, 39, 45, 49, 54, 59, 79, 86], "duplic": [5, 39, 79], "user": [5, 39, 74, 79], "path": [6, 25, 40, 61, 79, 89], "file_nam": [6, 40, 79, 89], "file": [6, 40, 76, 79, 80, 89], "i": [6, 11, 12, 17, 20, 21, 30, 40, 45, 46, 47, 52, 55, 56, 63, 67, 74, 76, 78, 79, 80, 81, 83, 84, 85, 86, 89, 90], "present": [6, 40, 79], "file_path": [6, 40, 72, 78, 79], "within": [6, 40, 74, 79, 83, 89], "regardless": [6, 40, 79], "catalog": [7, 41, 80], "pass": [7, 26, 30, 41, 62, 67, 79, 80, 83, 89, 90], "need": [7, 41, 79, 80, 89, 90], "fetcher": [11, 25, 30, 45, 61, 67, 75, 78, 81, 89, 90], "noise_r": [11, 45, 79], "2": [11, 24, 27, 28, 45, 59, 64, 65, 76, 79, 80, 86, 89, 90], "dict": [11, 17, 25, 45, 52, 61, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90], "numpi": [11, 12, 45, 46, 79, 80, 89], "mix": [11, 45, 79], "y_train": [11, 17, 45, 52, 79, 81, 82, 83, 84, 86, 87, 89, 90], "For": [11, 45, 79, 83, 89, 90], "given": [11, 45, 79, 80, 89, 90], "shift": [11, 45, 79], "forward": [11, 45, 79, 80, 83, 90], "up": [11, 25, 45, 60, 61, 79, 80, 86, 89], "n": [11, 12, 45, 46, 79, 80, 86], "step": [11, 45, 79], "prevent": [11, 45, 79], "select": [11, 45, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90], "when": [11, 12, 30, 45, 46, 67, 79, 80, 81, 84, 86, 89, 90], "hous": [11, 45, 79], "have": [11, 25, 27, 28, 45, 61, 64, 65, 74, 79, 83, 89, 90], "proport": [11, 18, 20, 45, 53, 55, 79, 82, 84, 87, 89], "add": [11, 36, 45, 79, 83, 87, 89], "dictionari": [11, 45, 79], "updat": [11, 45, 75, 79, 89], "y_valid": [11, 17, 45, 52, 79, 81, 82, 83, 84, 86, 87, 89], "One": [12, 22, 46, 57, 79, 86], "arrai": [12, 17, 46, 52, 63, 74, 79, 80, 81, 90], "shape": [12, 30, 46, 67, 79, 84, 90], "arg": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 67, 68, 69, 70, 71, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "kwarg": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 67, 68, 69, 70, 71, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "implement": [13, 14, 15, 16, 18, 19, 20, 21, 22, 48, 49, 50, 51, 53, 54, 55, 56, 57, 74, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90], "averag": [13, 48, 82, 83, 84, 86], "margin": [13, 14, 19, 24, 48, 49, 54, 59, 82, 86], "effect": [13, 48, 74, 82], "valuat": [13, 14, 15, 16, 18, 19, 21, 22, 24, 48, 49, 50, 51, 53, 54, 56, 57, 59, 74, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89], "j": [13, 14, 15, 16, 18, 19, 24, 48, 49, 50, 51, 53, 54, 59, 80, 82, 83, 86, 87, 90], "lin": [13, 48, 82], "A": [13, 16, 19, 24, 48, 51, 54, 59, 76, 80, 82, 86], "zhang": [13, 20, 48, 55, 80, 82, 84, 89], "m": [13, 48, 80, 82, 90], "lecuy": [13, 48, 82], "li": [13, 48, 80, 82], "panda": [13, 48, 72, 78, 79, 82, 89], "": [13, 15, 48, 50, 74, 80, 82, 83, 86], "sen": [13, 48, 82], "measur": [13, 48, 82, 85], "deep": [13, 48, 80, 82, 90], "learn": [13, 14, 15, 16, 19, 24, 27, 28, 31, 48, 49, 50, 51, 54, 59, 64, 65, 68, 74, 80, 82, 83, 86], "predict": [13, 17, 18, 21, 25, 30, 33, 48, 52, 53, 56, 61, 63, 67, 70, 74, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "via": [13, 20, 48, 55, 78, 80, 82, 84, 89], "arxiv": [13, 14, 15, 16, 18, 19, 20, 21, 24, 48, 49, 50, 51, 53, 54, 55, 56, 59, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91], "org": [13, 14, 15, 16, 18, 19, 20, 21, 24, 48, 49, 50, 51, 53, 54, 55, 56, 59, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "2022": [13, 16, 48, 51, 82, 86], "avail": [13, 14, 15, 16, 18, 19, 20, 21, 24, 48, 49, 50, 51, 53, 54, 55, 56, 59, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "http": [13, 14, 15, 16, 18, 19, 20, 21, 24, 48, 49, 50, 51, 53, 54, 55, 56, 59, 74, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "ab": [13, 14, 15, 16, 18, 19, 20, 21, 24, 48, 49, 50, 51, 53, 54, 55, 56, 59, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "2206": [13, 48, 82], "10013": [13, 48, 82], "num_model": [13, 16, 18, 20, 48, 51, 53, 55, 82, 86, 87], "model": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 48, 49, 51, 52, 53, 54, 55, 56, 59, 61, 74, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89], "bag": [13, 18, 48, 53, 82, 87], "aggreg": [13, 18, 48, 53, 82, 87], "1000": [13, 14, 15, 16, 18, 19, 20, 24, 48, 49, 50, 51, 53, 54, 55, 59, 82, 83, 84, 86, 87], "beta": [14, 24, 49, 59, 86], "shaplei": [14, 19, 21, 24, 49, 54, 56, 59, 80, 81, 85, 86], "alpha": [14, 49, 86], "kwon": [14, 18, 24, 49, 53, 59, 86, 87], "zou": [14, 18, 19, 24, 49, 53, 54, 59, 80, 86, 87], "unifi": [14, 24, 49, 59, 74, 86], "reduc": [14, 24, 49, 59, 86], "framework": [14, 16, 24, 49, 51, 59, 74, 78, 86], "machin": [14, 16, 19, 24, 49, 51, 54, 59, 74, 80, 83, 86], "2021": [14, 24, 49, 59, 80, 86], "2110": [14, 24, 49, 59, 86], "14049": [14, 24, 49, 59, 86], "gr_threshold": [14, 19, 24, 49, 54, 59, 86], "converg": [14, 19, 24, 49, 54, 59, 86], "threshold": [14, 15, 19, 24, 49, 50, 54, 59, 83, 86, 89], "gelman": [14, 19, 24, 49, 54, 59, 86], "rubin": [14, 19, 24, 49, 54, 59, 86], "statist": [14, 19, 24, 49, 54, 59, 83, 86], "hard": [14, 19, 24, 49, 54, 59, 86], "so": [14, 19, 24, 49, 54, 59, 76, 86, 90], "resort": [14, 19, 24, 49, 54, 59, 86], "mcmc": [14, 19, 24, 49, 54, 59, 86], "sampl": [14, 18, 19, 20, 24, 49, 53, 54, 55, 59, 78, 82, 83, 84, 86, 87, 89, 90], "05": [14, 19, 24, 49, 54, 59, 86, 89], "max_mc_epoch": [14, 19, 24, 49, 54, 59, 86], "max": [14, 19, 24, 49, 54, 59, 86], "outer": [14, 19, 24, 49, 54, 59, 86], "iter": [14, 19, 24, 49, 54, 59, 86, 89], "100": [14, 15, 19, 24, 49, 50, 54, 59, 80, 83, 86], "models_per_iter": [14, 19, 24, 49, 54, 59, 86], "fit": [14, 19, 20, 24, 27, 28, 49, 54, 55, 59, 64, 65, 76, 82, 84, 86, 90], "take": [14, 16, 19, 20, 24, 25, 49, 51, 54, 55, 59, 61, 63, 79, 80, 84, 86, 89, 90], "per": [14, 19, 24, 49, 54, 59, 79, 83, 86, 89], "check": [14, 19, 24, 49, 54, 59, 79, 83, 86, 89], "gr": [14, 19, 24, 49, 54, 59, 86], "mc_epoch": [14, 19, 24, 49, 54, 59, 86], "minimum": [14, 19, 24, 49, 54, 59, 86, 90], "befor": [14, 19, 24, 49, 54, 59, 86], "cache_nam": [14, 19, 24, 49, 54, 59, 86], "contribut": [14, 17, 19, 24, 49, 52, 54, 59, 81, 86], "distribut": [14, 49, 76, 79, 86], "weight": [14, 27, 28, 49, 64, 65, 86, 90], "4": [14, 22, 49, 57, 76, 83, 86], "reinforc": [15, 50, 80, 83], "pytorch": [15, 50, 80, 83, 85], "yoon": [15, 50, 80, 83], "arik": [15, 50, 80, 83], "t": [15, 16, 28, 50, 51, 63, 65, 80, 83, 86, 90], "pfister": [15, 50, 80, 83], "2019": [15, 19, 21, 24, 50, 54, 56, 59, 80, 81, 83, 85, 86, 90], "1909": [15, 50, 80, 83], "11671": [15, 50, 80, 83], "hidden_dim": [15, 50, 83, 90], "hidden": [15, 50, 83, 90], "rl": [15, 50, 83], "multilay": [15, 50, 83, 90], "perceptron": [15, 50, 83, 90], "estim": [15, 18, 20, 50, 53, 55, 83, 84, 86, 87, 89], "ve": [15, 50, 83], "detail": [15, 50, 83], "datavalueestimatorrl": [15, 50, 83], "layer_numb": [15, 50, 83], "layer": [15, 50, 80, 83, 90], "5": [15, 50, 63, 83, 84, 86, 90], "comb_dim": [15, 50, 83], "after": [15, 50, 75, 79, 83, 87, 89], "how": [15, 17, 50, 52, 79, 81, 83, 87], "mani": [15, 50, 83], "much": [15, 17, 50, 52, 81, 83], "10": [15, 21, 50, 56, 78, 80, 83, 85, 90], "rl_epoch": [15, 50, 83], "epoch": [15, 17, 24, 50, 52, 59, 63, 81, 83, 86, 90], "rl_batch_siz": [15, 50, 83], "batch": [15, 21, 50, 56, 63, 83, 85, 90], "size": [15, 21, 50, 56, 63, 80, 83, 85, 89, 90], "32": [15, 21, 50, 56, 63, 83, 85, 90], "lr": [15, 50, 83, 90], "rate": [15, 50, 63, 83, 90], "01": [15, 50, 63, 83, 90], "search": [15, 50, 83, 89], "mai": [15, 50, 83, 86], "get": [15, 50, 79, 80, 82, 83, 86], "stuck": [15, 50, 83], "certain": [15, 50, 81, 83], "bound": [15, 50, 83], "close": [15, 20, 50, 55, 83, 84], "thu": [15, 50, 80, 83, 89], "encourag": [15, 50, 83], "9": [15, 50, 78, 83], "devic": [15, 30, 50, 67, 81, 83, 89, 90], "acceler": [15, 30, 50, 67, 83, 89, 90], "cpu": [15, 30, 50, 67, 81, 83, 89, 90], "type": [15, 30, 50, 67, 78, 79, 80, 83, 89, 90], "banzhaf": [16, 51, 81, 84], "wang": [16, 51, 86], "r": [16, 21, 22, 51, 56, 57, 80, 81, 83, 85, 86], "jia": [16, 21, 51, 56, 81, 85, 86], "robust": [16, 51, 78, 86], "2205": [16, 51, 86], "15466": [16, 51, 86], "comput": [16, 17, 20, 24, 51, 52, 55, 59, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "abstract": [17, 24, 29, 52, 59, 66, 81, 86, 90], "evalu": [17, 18, 20, 25, 26, 52, 53, 55, 61, 62, 63, 74, 75, 78, 82, 83, 84, 86, 87, 89, 90], "facilit": [17, 52, 81], "follow": [17, 47, 52, 76, 79, 81, 83, 85, 89], "exampl": [17, 18, 20, 27, 28, 31, 52, 53, 55, 64, 65, 68, 81, 84, 87, 90], "work": [17, 47, 52, 81], "input_model": [17, 52, 81], "input_metr": [17, 52, 81], "metric": [17, 18, 25, 52, 53, 61, 81, 82, 87, 89], "input_data": [17, 52, 78, 81, 82, 83, 84, 86, 87], "x_train": [17, 52, 79, 81, 82, 83, 84, 86, 87, 89, 90], "x_valid": [17, 52, 79, 81, 82, 83, 84, 86, 87, 89], "train_data_valu": [17, 52, 81, 82, 83, 84, 85, 86, 87, 88], "batch_siz": [17, 21, 52, 56, 81, 85, 90], "evaluate_data_valu": [17, 52, 81, 82, 83, 84, 85, 86, 87, 88], "davaevalu": [17, 52, 81], "posit": [17, 30, 52, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "argument": [17, 25, 30, 52, 61, 63, 67, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90], "kei": [17, 25, 30, 52, 61, 63, 67, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90], "pred_model": [17, 25, 52, 61, 78, 81, 89], "find": [17, 20, 52, 55, 74, 81, 84, 86, 88, 89], "each": [17, 20, 52, 55, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "datum": [17, 52, 81], "toward": [17, 52, 81], "data_valu": [17, 52, 81], "exper_method": [17, 47, 52, 60, 78, 81], "out": [18, 22, 53, 57, 76, 81, 82, 83, 84, 86, 87], "compar": [18, 25, 53, 61, 74, 81, 87, 89], "across": [18, 53, 74, 84, 86, 87], "sever": [18, 53, 60, 74, 78, 87, 89, 90], "includ": [18, 53, 74, 76, 84, 86, 87], "accuraci": [18, 20, 25, 53, 55, 61, 80, 84, 87, 89], "l2": [18, 53, 87], "distanc": [18, 53, 87], "oob": [18, 53, 81], "simpl": [18, 53, 83, 86, 87], "effici": [18, 21, 53, 56, 81, 83, 85, 86, 87], "2023": [18, 53, 76, 87], "2304": [18, 53, 87], "07718": [18, 53, 87], "sample_s": [18, 53, 87], "len": [18, 53, 79, 87, 90], "ghorbani": [19, 24, 54, 59, 80, 86], "equit": [19, 24, 54, 59, 80, 86], "1904": [19, 24, 54, 59, 80, 86], "02868": [19, 24, 54, 59, 80, 86], "influenc": [20, 55, 81, 89], "through": [20, 55, 80, 83, 84, 90], "relat": [20, 55, 63, 84, 90], "subsampl": [20, 55, 84], "v": [20, 55, 80, 84, 89, 90], "feldman": [20, 55, 84, 89], "c": [20, 55, 76, 80, 84, 89], "what": [20, 55, 79, 84, 89, 90], "neural": [20, 32, 33, 34, 55, 69, 70, 71, 84, 89, 90], "network": [20, 32, 33, 34, 55, 69, 70, 71, 84, 89, 90], "memor": [20, 55, 84, 89], "why": [20, 55, 84, 89], "discov": [20, 55, 84, 89], "long": [20, 55, 80, 84, 89], "tail": [20, 55, 84, 89], "2020": [20, 55, 80, 84, 89], "2008": [20, 55, 84, 89], "03703": [20, 55, 84, 89], "cardin": [20, 55, 84, 86], "subset": [20, 55, 79, 82, 84, 86, 89], "p": [20, 55, 80, 83, 84, 90], "7": [20, 55, 84], "knn": [21, 56, 81, 85, 89], "mixin": [21, 32, 33, 34, 56, 69, 70, 71, 81, 85], "mean": [21, 56, 63, 78, 85, 89, 90], "cannot": [21, 56, 85], "underli": [21, 56, 81, 85], "dataevalu": [21, 23, 25, 26, 47, 56, 58, 60, 61, 62, 63, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "howev": [21, 56, 74, 85], "pretrain": [21, 56, 85, 90], "embed": [21, 56, 79, 80, 81, 85, 90], "et": [21, 56, 81, 82, 85], "al": [21, 56, 81, 82, 85], "task": [21, 56, 74, 80, 81, 85, 90], "nearest": [21, 56, 81, 85], "neighbor": [21, 56, 81, 85], "algorithm": [21, 56, 63, 74, 80, 81, 83, 85, 90], "1908": [21, 56, 81, 85], "08619": [21, 56, 81, 85], "k_neighbor": [21, 56, 85], "group": [21, 25, 56, 61, 81, 85, 89], "time": [21, 25, 26, 56, 61, 62, 78, 80, 85, 86, 89, 90], "dure": [21, 56, 85], "embedding_model": [21, 56, 81, 85], "pre": [21, 56, 80, 83, 85, 89, 90], "leav": [22, 57, 86], "cook": [22, 57, 86], "detect": [22, 57, 75, 86], "influenti": [22, 57, 86], "observ": [22, 57, 86], "linear": [22, 57, 86], "regress": [22, 31, 57, 63, 68, 80, 82, 86, 90], "technometr": [22, 57, 86], "vol": [22, 57, 83, 86, 90], "19": [22, 57, 86], "No": [22, 57, 86], "feb": [22, 57, 86], "1977": [22, 57, 86], "pp": [22, 57, 83, 86, 90], "15": [22, 57, 86], "18": [22, 57, 86], "page": [22, 57, 86], "complet": [23, 58, 88, 89], "baselin": [23, 58, 88], "comparison": [23, 58, 88], "purpos": [23, 58, 76, 88], "gener": [23, 58, 72, 78, 79, 80, 88, 90], "uniform": [23, 58, 84, 86, 88], "base": [24, 30, 59, 67, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "train_kwarg": [25, 61, 89], "metric_nam": [25, 61, 89], "output_dir": [25, 61, 89], "timedelta": [25, 61, 89], "exper_func": [25, 61, 89], "noisi": [25, 61, 75, 79, 89], "perform": [25, 26, 61, 62, 74, 78, 81, 82, 83, 84, 86, 89, 90], "string": [25, 61, 78, 80, 89], "better": [25, 61, 83, 89], "union": [25, 61, 79, 81, 89], "pathlib": [25, 61, 89], "output": [25, 61, 72, 75, 78, 89, 90], "plot": [26, 62, 89], "base_model": [27, 28, 31, 64, 65, 68, 90], "num_class": [27, 28, 64, 65, 90], "wrapper": [27, 28, 31, 64, 65, 68, 78, 79, 81], "sk": [27, 28, 31, 64, 65, 68, 90], "classifi": [27, 28, 32, 64, 65, 69, 75, 80, 89, 90], "linearregress": [27, 31, 64, 68, 90], "basemodel": [27, 28, 31, 64, 65, 68, 90], "support": [27, 28, 31, 64, 65, 68, 90], "sample_weight": [27, 28, 31, 64, 65, 68, 90], "dimension": [27, 28, 64, 65, 83, 89, 90], "don": [28, 65, 90], "classifiersklearnwrapp": [28, 65, 90], "kneighborsclassifi": [28, 65, 90], "templat": [29, 66, 90], "model_nam": [30, 67, 89, 90], "factori": [30, 67, 90], "preset": [30, 67, 77, 89, 90], "mode": [30, 67, 90], "recommend": [30, 67, 86, 90], "import": [30, 67, 74, 83, 90], "addit": [30, 67, 79, 83, 89, 90], "instead": [30, 67, 90], "reli": [30, 67, 90], "typic": [30, 67, 90], "besid": [30, 67, 90], "first": [30, 67, 90], "some": [30, 67, 90], "do": [30, 67, 76, 90], "constructor": [30, 67, 80, 90], "except": [30, 67, 90], "intern": [32, 33, 34, 69, 70, 71, 80], "share": [32, 33, 34, 69, 70, 71, 81], "both": [32, 33, 34, 69, 70, 71], "nn": [32, 33, 34, 69, 70, 71, 90], "scriptmodul": [32, 33, 34, 69, 70, 71], "regressor": [34, 71, 90], "version": [35, 74, 80, 89, 90], "releas": [35, 74], "new": [36, 78, 79], "To": [36, 79], "Then": [36, 79], "u": [36, 79, 80], "flexibl": [36, 79], "call": [36, 79, 80], "later": [36, 79], "quantifi": [47, 74, 78, 81], "abc": [47, 63, 81, 86, 90], "inherit": [47, 78, 81], "flow": [47, 81], "run": [60, 78, 89], "experimentmedi": [60, 72, 78, 89], "exist": [63, 90], "compat": [63, 90], "newcommand": [63, 90], "rule": [63, 90], "0pt": [63, 90], "1em": [63, 90], "3em": [63, 90], "begin": [63, 90], "llll": [63, 90], "hline": [63, 90], "textbf": [63, 90], "mbox": [63, 90], "logist": [63, 90], "ye": [63, 90], "optim": [63, 89, 90], "adam": [63, 90], "loss": [63, 83, 90], "cross": [63, 90], "entropi": [63, 90], "mlp": [63, 78, 83], "classif": [63, 80, 90], "bert": [63, 78, 79, 80, 83], "001": [63, 90], "adamw": [63, 90], "lenet": [63, 78], "squar": [63, 90], "end": [63, 90], "datafram": [72, 78, 79, 89], "csv": [72, 75, 78, 79], "recreat": [73, 78], "result": [73, 75, 78, 80, 89], "link": 74, "instal": 74, "repositori": [74, 80], "issu": 74, "tracker": 74, "open": 74, "divers": 74, "imag": [74, 80, 83, 90], "tabular": [74, 83], "algorithim": [74, 81], "just": [74, 79, 80, 90], "few": [74, 90], "line": 74, "code": 74, "assess": 74, "qualiti": 74, "impact": 74, "individu": 74, "critic": 74, "improv": 74, "mitig": 74, "undesir": 74, "bias": [74, 83], "been": [74, 79, 81, 86, 90], "propos": 74, "lack": 74, "system": 74, "standard": [74, 78, 79], "benchmark": [74, 80], "paper": [74, 80, 89, 91], "introduc": [74, 83], "easi": 74, "empow": 74, "research": 74, "practition": 74, "variou": 74, "integr": 74, "environ": 74, "collect": [74, 87], "natur": 74, "languag": [74, 80, 90], "ii": [74, 83], "nine": 74, "differ": [74, 79, 82, 83, 84, 86, 89], "art": 74, "iii": 74, "scikit": 74, "furthermor": 74, "four": 74, "downstream": [74, 80], "analysi": [74, 80, 90], "efficaci": 74, "approach": [74, 86], "singl": 74, "uniformli": 74, "best": 74, "appropri": [74, 83], "emploi": 74, "publicli": 74, "github": [74, 85], "io": 74, "comprehens": 74, "leaderboard": 74, "own": [74, 78, 80, 90], "save": [75, 79, 80, 89], "upload": 75, "your": [75, 78, 80, 90], "here": [75, 83, 90], "approxim": 75, "dai": 75, "save_datav": [75, 89], "placehold": 75, "place": 75, "holder": [75, 76], "col1": 75, "lorem": 75, "ipsum": 75, "filler": 75, "yada": 75, "col2": 75, "col3": 75, "iri": [75, 79, 80], "challeng": [75, 79], "f1": [75, 89], "score": [75, 89], "identifi": [75, 78, 89], "2mean": 75, "mit": [76, 80], "copyright": 76, "anonym": 76, "author": 76, "3": [76, 83, 86], "permiss": 76, "herebi": 76, "grant": 76, "free": 76, "charg": 76, "person": 76, "obtain": 76, "copi": [76, 90], "softwar": 76, "associ": [76, 80, 89, 90], "document": [76, 80, 90], "deal": 76, "without": [76, 81, 84, 90], "restrict": 76, "limit": 76, "right": 76, "modifi": [76, 83], "merg": 76, "publish": 76, "sublicens": 76, "sell": 76, "permit": 76, "whom": 76, "furnish": 76, "subject": 76, "condit": [76, 90], "abov": [76, 89], "notic": 76, "shall": 76, "substanti": 76, "portion": 76, "THE": 76, "AS": 76, "warranti": 76, "OF": 76, "kind": 76, "express": 76, "OR": 76, "impli": 76, "BUT": 76, "NOT": [76, 80], "TO": 76, "merchant": 76, "FOR": 76, "particular": 76, "AND": 76, "noninfring": 76, "IN": 76, "NO": 76, "event": 76, "BE": 76, "liabl": 76, "claim": 76, "damag": 76, "liabil": 76, "action": 76, "contract": 76, "tort": 76, "otherwis": [76, 85, 86], "aris": [76, 81], "connect": 76, "WITH": 76, "packag": 77, "subpackag": 77, "submodul": 77, "content": 77, "dataload": [78, 89], "noisifi": 78, "datav": [78, 89], "logistic_regress": 78, "resnet": [78, 83], "configur": 78, "funcenum": [78, 79], "qualnam": [78, 79], "start": [78, 79, 87], "boundari": [78, 79], "strenum": 78, "enum": 78, "static": [78, 79], "callabl": [78, 79, 80, 81, 89, 90], "seen": 78, "convers": 78, "meanstdtim": 78, "elapsed_tim": 78, "format": 78, "paramsweep": 78, "sweep": 78, "kwargs_list": 78, "python3": 78, "load_mediator_output": 78, "set_random_st": 78, "worth": 78, "easili": 78, "extend": 78, "replic": 78, "wai": [78, 81], "determin": [78, 81, 89], "cleanlab": 79, "imageset": 79, "nlpset": 79, "properti": [79, 81, 90], "covar": 79, "datasets_avail": 79, "classmethod": [79, 89], "from_data": 79, "therefor": 79, "alreadi": [79, 83, 86], "flag": 79, "map": 79, "from_data_split": 79, "x_test": [79, 89], "y_test": [79, 89], "add_nois": [79, 89], "self": [79, 80, 81, 89, 90], "noise_arg": 79, "noise_kwarg": [79, 89], "signifi": 79, "chang": [79, 80, 89, 90], "made": [79, 89, 90], "requir": [79, 89, 90], "those": [79, 82, 89], "setup": [79, 81], "train_count": [79, 89], "valid_count": [79, 89], "test_count": [79, 89], "split_dataset_by_count": 79, "count": 79, "invalid": 79, "either": [79, 80, 81], "more": [79, 90], "greater": [79, 89], "split_dataset_by_indic": 79, "train_indic": 79, "sequenc": [79, 90], "valid_indic": 79, "test_indic": 79, "leak": 79, "least": [79, 89], "split_dataset_by_prop": 79, "train_prop": 79, "valid_prop": 79, "test_prop": 79, "noisefunc": 79, "add_gauss_nois": 79, "mix_label": [79, 89], "mu": 79, "sigma": 79, "gaussian": [79, 80], "center": 79, "deviat": 79, "data_fil": 79, "2dplane": [79, 80], "miniboon": [79, 80], "adult": [79, 80], "bbc": [79, 80], "breast_canc": 79, "cifar10": [79, 80], "val": [79, 80], "cifar100": [79, 80], "creditcard": [79, 80], "diabet": [79, 80], "digit": [79, 80, 90], "elect": [79, 80], "electr": [79, 80], "fashion": [79, 80], "fri": [79, 80], "gaussian_classifi": [79, 80], "gaussian_classifier_high_dim": 79, "imagenet": [79, 80], "imdb": [79, 80], "linnerud": [79, 80], "mnist": [79, 80], "nomao": [79, 80], "pol": [79, 80], "add_covar_transform": 79, "add_label_transform": 79, "from_covar_func": 79, "func": [79, 80], "from_covar_label_func": 79, "from_csv": 79, "label_column": 79, "from_label_func": 79, "from_numpi": 79, "from_panda": 79, "df": [79, 89], "frame": [79, 89], "load_data": 79, "one_hot_encod": 79, "catdataset": 79, "indextransformdataset": 79, "t_co": 79, "index_transform": 79, "primarili": 79, "__getitem__": 79, "well": [79, 90], "listdataset": [79, 80], "input_list": 79, "want": 79, "back": 79, "around": 79, "intend": [79, 80], "axi": [79, 89], "variabl": [79, 83], "token": [79, 90], "onli": [79, 89, 90], "clean": 80, "lab": 80, "correct": [80, 89], "most": [80, 89], "common": 80, "ml": 80, "cifar": 80, "caltech": 80, "256": [80, 83], "quickdraw": 80, "amazon": 80, "review": 80, "20new": 80, "audioset": 80, "These": 80, "perfect": 80, "nor": 80, "g": [80, 83], "northcutt": 80, "athaly": 80, "mueller": 80, "pervas": 80, "destabil": 80, "onlin": 80, "2103": 80, "14749": 80, "cleanlabimagenet": 80, "root": 80, "deng": 80, "w": [80, 86, 90], "dong": 80, "socher": 80, "lj": 80, "k": [80, 90], "l": [80, 90], "fei": 80, "larg": [80, 83], "scale": [80, 90], "hierarch": 80, "databas": 80, "jun": 80, "2009": 80, "doi": [80, 83, 90], "1109": [80, 90], "cvpr": 80, "5206848": 80, "visionadapt": 80, "vision": 80, "cifar100_emb": 80, "resnet50": 80, "cifar10_emb": 80, "imagenet_emb": 80, "challenge_url": 80, "yongchanstat": 80, "com": [80, 85], "backend": 80, "sign": 80, "download_path": 80, "signed_url": 80, "cloud": 80, "bucket": 80, "sing": 80, "iris_challeng": 80, "download_2dplan": 80, "download_miniboon": 80, "download_adult": 80, "binari": [80, 89], "categori": 80, "incom": 80, "dvrl": [80, 81], "kohavi": 80, "naiv": [80, 83], "bay": 80, "decis": 80, "tree": 80, "hybrid": 80, "proceed": [80, 90], "second": 80, "confer": 80, "knowledg": 80, "discoveri": [80, 89], "mine": 80, "1996": 80, "sercan": [80, 83], "o": [80, 83], "download_breast_canc": 80, "download_creditcard": 80, "download_diabet": 80, "download_digit": 80, "download_elect": 80, "presidenti": 80, "scienc": 80, "e": [80, 83], "presid": 80, "1976": 80, "harvard": 80, "datavers": 80, "2017": 80, "7910": 80, "dvn": 80, "42mvdx": 80, "download_electr": 80, "download_fri": 80, "download_iri": 80, "download_linnerud": 80, "download_nomao": 80, "download_pol": 80, "10000": 80, "input_dim": [80, 90], "artifici": 80, "load_openml": 80, "data_id": 80, "openml": 80, "help": [80, 90], "id": [80, 90], "resnetembed": 80, "dataset_class": 80, "visiondataset": 80, "224": 80, "convert": [80, 90], "pil": 80, "color": [80, 90], "done": 80, "vector": 80, "extract": [80, 83], "avgpool": 80, "hook": 80, "featur": 80, "he": 80, "ren": 80, "sun": 80, "residu": 80, "recognit": [80, 90], "2016": 80, "ieee": [80, 90], "pattern": 80, "90": 80, "image_set": 80, "resiz": 80, "adapt": 80, "__call__": 80, "show_imag": 80, "img": 80, "displai": [80, 89], "bertembed": 80, "text": [80, 83], "pool": 80, "distilbert": [80, 90], "see": [80, 90], "below": [80, 83, 89, 90], "sentenc": [80, 90], "It": 80, "equival": [80, 86], "frozen": 80, "advis": 80, "locat": 80, "py": [80, 85, 89], "faster": [80, 90], "devlin": [80, 90], "lee": [80, 90], "toutanova": [80, 90], "bidirect": [80, 90], "understand": [80, 90], "2018": [80, 90], "1810": [80, 90], "04805": [80, 90], "sanh": [80, 90], "debut": [80, 90], "chaumond": [80, 90], "wolf": [80, 90], "distil": [80, 90], "smaller": [80, 90], "cheaper": [80, 90], "lighter": [80, 90], "1910": [80, 90], "01108": [80, 90], "max_dataset_s": 80, "cap": 80, "bbc_embed": 80, "download_bbc": 80, "articl": [80, 91], "d": [80, 89], "green": 80, "cunningham": 80, "practic": 80, "solut": 80, "problem": [80, 90], "diagon": 80, "domin": 80, "kernel": [80, 90], "cluster": 80, "proc": 80, "icml": 80, "2006": 80, "download_imdb": 80, "sentiment": 80, "neg": 80, "maa": 80, "dali": 80, "pham": 80, "huang": 80, "ng": 80, "pott": 80, "49th": 80, "annual": 80, "meet": 80, "linguist": 80, "2011": 80, "imdb_embed": 80, "am": 81, "knnshap": 81, "margcontrib": 81, "betashap": 81, "datashap": 81, "loo": 81, "shap": 81, "baggingevalu": [81, 82], "betashaplei": [81, 86], "databanzhaf": [81, 86], "databanzhafmargcontrib": [81, 86], "dataoob": [81, 87], "datashaplei": [81, 86], "influencefunctionev": [81, 84], "knnshaplei": [81, 85], "leaveoneout": [81, 86], "randomevalu": [81, 88], "shapevalu": [81, 86], "y_hat": [81, 83], "between": [81, 83], "move": [81, 90], "becaus": [81, 89], "bug": 81, "store": [81, 82, 83, 84, 86, 87], "held": [81, 82, 83, 84, 86, 87], "input_fetch": 81, "altern": 81, "input_model_metr": 81, "iput": 81, "contain": [81, 89, 90], "assign": [81, 83], "mse": [81, 90], "acc": 81, "under": 81, "modellessmixin": [81, 85], "predictiong": 81, "ruoxi": 81, "lava": 81, "unus": [81, 87], "seri": 81, "against": 81, "tuppl": 81, "equal": [81, 89], "coeffici": 82, "lasso": 82, "accord": [82, 86], "everi": [82, 84, 86, 87], "bernouli": 82, "bernoulli": [82, 83], "get_subset_perf": 82, "correspond": [82, 89], "num_work": 83, "probabl": [83, 90], "signal": 83, "worker": 83, "main": 83, "process": 83, "x_dim": 83, "y_dim": 83, "assum": [83, 89], "multi": [83, 90], "architectur": 83, "relev": 83, "inform": 83, "high": [83, 89], "induct": 83, "case": 83, "two": 83, "represent": 83, "last": [83, 90], "activ": [83, 90], "top": 83, "simpli": 83, "come": 83, "predictor": [83, 86], "entir": 83, "definit": 83, "bia": 83, "convolut": [83, 90], "attent": [83, 90], "flatten": 83, "dveloss": 83, "exploration_weight": 83, "custom": 83, "bce": 83, "explor": [83, 89], "constant": 83, "1e3": 83, "pred_datav": 83, "selector_input": 83, "reward_input": 83, "multipli": [83, 86], "reward": 83, "william": 83, "gradient": [83, 90], "connectionist": 83, "8": 83, "229": 83, "1992": 83, "1007": 83, "bf00992696": 83, "full": 83, "minu": [84, 86], "form": 84, "similar": 84, "math": 84, "likewis": 84, "match": [85, 90], "row": [85, 89], "ignor": 85, "ai": 85, "secur": 85, "studi": 85, "blob": 85, "master": 85, "knn_shaplei": 85, "powerset": 86, "previou": 86, "minim": 86, "compute_weight": 86, "combin": 86, "respect": [86, 89, 90], "equat": 86, "frac": 86, "tbinom": 86, "propto": 86, "semivalu": 86, "gr_max": 86, "maximum": 86, "burn": 86, "calcul": 86, "look": [86, 89], "scratch": 86, "marginal_increment_array_stack": 86, "increment": [86, 87], "Of": 87, "groupingindex": 87, "defaultdict": 87, "insert": 87, "stack": 87, "add_indic": 87, "record": 87, "return": 88, "randomev": 88, "doe": [88, 89], "compute_data_valu": 89, "data_evalu": 89, "include_train": 89, "save_output": 89, "exper_kwarg": 89, "note": [89, 90], "wether": 89, "eval_kwarg": 89, "pd": 89, "model_factory_setup": 89, "mtrand": 89, "modelfactori": [89, 90], "loader": 89, "model_factori": 89, "ax": 89, "figur": 89, "col": 89, "core": 89, "matplotlib": 89, "fig": 89, "subplot": 89, "num_evalu": 89, "column": 89, "f": 89, "output_directori": 89, "set_output_directori": 89, "init": 89, "discover_corrupted_sampl": 89, "percentil": 89, "low": 89, "repeatedli": 89, "found": 89, "addition": 89, "valuabl": 89, "current": [89, 90], "corrupt_found": 89, "corrupt": 89, "inspect": 89, "until": 89, "exhaust": 89, "were": 89, "randomli": 89, "expect": 89, "corrupted_sampl": 89, "increasing_bin_remov": 89, "bin_siz": 89, "remov": 89, "inspir": 89, "principl": 89, "bin": 89, "cutoff": 89, "examin": 89, "consid": 89, "frac_datapoints_explor": 89, "_at_datavalu": 89, "noisy_detect": 89, "abil": 89, "2nn": 89, "while": 89, "non": [89, 90], "zero": [89, 90], "kmean": 89, "convex": 89, "highest": 89, "lowest": 89, "belong": 89, "kmeans_f1": 89, "1d": 89, "lower": 89, "higher": [89, 90], "remove_high_low": 89, "remove_least_influential_first_": 89, "remove_most_influential_first_": 89, "output_path": 89, "dummi": 90, "mlpclassifi": 90, "predict_proba": 90, "dim": 90, "classifierunweightedsklearnwrapp": 90, "bertclassifi": 90, "classifiermlp": 90, "logisticregress": 90, "regressionmlp": 90, "regressionsklearnwrapp": 90, "torchclassmixin": 90, "torchpredictmixin": 90, "torchregressmixin": 90, "clone": 90, "repres": 90, "often": 90, "consist": 90, "sklearn": 90, "insuffici": 90, "dummyregressor": 90, "num_sampl": 90, "to_numpi": 90, "mini": 90, "pretrained_model_nam": 90, "uncas": 90, "dropout_r": 90, "num_train_lay": 90, "fine": 90, "tune": 90, "meant": 90, "onto": 90, "dropout": 90, "input_id": 90, "attention_mask": 90, "applic": 90, "doesn": 90, "token_type_id": 90, "fed": 90, "co": 90, "glossari": 90, "attend": 90, "mask": 90, "tensordataset": 90, "reflect": 90, "depth": 90, "return_attention_mask": 90, "model_input_nam": 90, "aren": 90, "return_token_type_id": 90, "gray_scal": 90, "net": 90, "5x5": 90, "earliest": 90, "conceiv": 90, "cnn": 90, "particularli": 90, "lecun": 90, "bottou": 90, "bengio": 90, "haffner": 90, "86": 90, "11": 90, "2278": 90, "2324": 90, "1998": 90, "726791": 90, "grai": 90, "disabl": 90, "risk": 90, "25": 90, "act_fn": 90, "relu": 90}, "objects": {"": [[78, 0, 0, "-", "opendataval"]], "opendataval": [[35, 1, 1, "", "__version__"], [79, 0, 0, "-", "dataloader"], [81, 0, 0, "-", "dataval"], [89, 0, 0, "-", "experiment"], [90, 0, 0, "-", "model"], [78, 0, 0, "-", "presets"], [78, 0, 0, "-", "util"]], "opendataval.dataloader": [[37, 2, 1, "", "CatDataset"], [38, 2, 1, "", "DataFetcher"], [39, 2, 1, "", "Register"], [40, 4, 1, "", "cache"], [80, 0, 0, "-", "datasets"], [79, 0, 0, "-", "fetcher"], [45, 4, 1, "", "mix_labels"], [79, 0, 0, "-", "noisify"], [46, 4, 1, "", "one_hot_encode"], [79, 0, 0, "-", "register"], [79, 0, 0, "-", "util"]], "opendataval.dataloader.CatDataset": [[37, 3, 1, "", "__init__"]], "opendataval.dataloader.DataFetcher": [[38, 3, 1, "", "__init__"]], "opendataval.dataloader.Register": [[39, 3, 1, "", "__init__"]], "opendataval.dataloader.datasets": [[80, 0, 0, "-", "challenge"], [80, 0, 0, "-", "cleanlab"], [80, 0, 0, "-", "datasets"], [80, 0, 0, "-", "imagesets"], [80, 0, 0, "-", "nlpsets"]], "opendataval.dataloader.datasets.challenge": [[80, 1, 1, "", "CHALLENGE_URL"], [80, 4, 1, "", "download_paths"], [80, 4, 1, "", "iris_challenge"]], "opendataval.dataloader.datasets.cleanlab": [[80, 4, 1, "", "CleanLabImagenet"], [80, 1, 1, "", "cifar10"], [80, 1, 1, "", "cifar100"], [80, 4, 1, "", "cifar100_embed"], [80, 4, 1, "", "cifar10_embed"], [80, 1, 1, "", "imagenet"], [80, 4, 1, "", "imagenet_embed"]], "opendataval.dataloader.datasets.datasets": [[80, 4, 1, "", "download_2dplanes"], [80, 4, 1, "", "download_MiniBooNE"], [80, 4, 1, "", "download_adult"], [80, 4, 1, "", "download_breast_cancer"], [80, 4, 1, "", "download_creditcard"], [80, 4, 1, "", "download_diabetes"], [80, 4, 1, "", "download_digits"], [80, 4, 1, "", "download_election"], [80, 4, 1, "", "download_electricity"], [80, 4, 1, "", "download_fried"], [80, 4, 1, "", "download_iris"], [80, 4, 1, "", "download_linnerud"], [80, 4, 1, "", "download_nomao"], [80, 4, 1, "", "download_pol"], [80, 4, 1, "", "gaussian_classifier"], [80, 4, 1, "", "load_openml"]], "opendataval.dataloader.datasets.imagesets": [[80, 4, 1, "", "ResnetEmbeding"], [80, 2, 1, "", "VisionAdapter"], [80, 1, 1, "", "cifar10"], [80, 1, 1, "", "cifar100"], [80, 4, 1, "", "cifar10_embed"], [80, 1, 1, "", "fashion"], [80, 1, 1, "", "numbers"], [80, 4, 1, "", "show_image"]], "opendataval.dataloader.datasets.nlpsets": [[80, 4, 1, "", "BertEmbeddings"], [80, 1, 1, "", "MAX_DATASET_SIZE"], [80, 4, 1, "", "bbc_embedding"], [80, 4, 1, "", "download_bbc"], [80, 4, 1, "", "download_imdb"], [80, 4, 1, "", "imdb_embedding"]], "opendataval.dataloader.fetcher": [[79, 2, 1, "", "DataFetcher"]], "opendataval.dataloader.fetcher.DataFetcher": [[79, 5, 1, "", "covar_dim"], [79, 5, 1, "", "datapoints"], [79, 3, 1, "", "datasets_available"], [79, 3, 1, "", "from_data"], [79, 3, 1, "", "from_data_splits"], [79, 5, 1, "", "label_dim"], [79, 3, 1, "", "noisify"], [79, 5, 1, "", "num_points"], [79, 3, 1, "", "setup"], [79, 3, 1, "", "split_dataset_by_count"], [79, 3, 1, "", "split_dataset_by_indices"], [79, 3, 1, "", "split_dataset_by_prop"]], "opendataval.dataloader.noisify": [[79, 2, 1, "", "NoiseFunc"], [79, 4, 1, "", "add_gauss_noise"], [79, 4, 1, "", "mix_labels"]], "opendataval.dataloader.noisify.NoiseFunc": [[79, 6, 1, "", "ADD_GAUSS_NOISE"], [79, 6, 1, "", "MIX_LABELS"]], "opendataval.dataloader.register": [[79, 2, 1, "", "Register"], [79, 4, 1, "", "cache"], [79, 4, 1, "", "one_hot_encode"]], "opendataval.dataloader.register.Register": [[79, 6, 1, "", "CACHE_DIR"], [79, 6, 1, "", "Datasets"], [79, 3, 1, "", "add_covar_transform"], [79, 3, 1, "", "add_label_transform"], [79, 3, 1, "", "from_covar_func"], [79, 3, 1, "", "from_covar_label_func"], [79, 3, 1, "", "from_csv"], [79, 3, 1, "", "from_data"], [79, 3, 1, "", "from_label_func"], [79, 3, 1, "", "from_numpy"], [79, 3, 1, "", "from_pandas"], [79, 3, 1, "", "load_data"]], "opendataval.dataloader.util": [[79, 2, 1, "", "CatDataset"], [79, 2, 1, "", "IndexTransformDataset"], [79, 2, 1, "", "ListDataset"]], "opendataval.dataloader.util.IndexTransformDataset": [[79, 5, 1, "", "transform"]], "opendataval.dataval": [[48, 2, 1, "", "AME"], [49, 2, 1, "", "BetaShapley"], [50, 2, 1, "", "DVRL"], [51, 2, 1, "", "DataBanzhaf"], [52, 2, 1, "", "DataEvaluator"], [53, 2, 1, "", "DataOob"], [54, 2, 1, "", "DataShapley"], [55, 2, 1, "", "InfluenceFunctionEval"], [56, 2, 1, "", "KNNShapley"], [57, 2, 1, "", "LeaveOneOut"], [58, 2, 1, "", "RandomEvaluator"], [59, 2, 1, "", "ShapEvaluator"], [82, 0, 0, "-", "ame"], [81, 0, 0, "-", "api"], [83, 0, 0, "-", "dvrl"], [84, 0, 0, "-", "influence"], [85, 0, 0, "-", "knnshap"], [86, 0, 0, "-", "margcontrib"], [87, 0, 0, "-", "oob"], [88, 0, 0, "-", "random"]], "opendataval.dataval.AME": [[48, 3, 1, "", "__init__"]], "opendataval.dataval.BetaShapley": [[49, 3, 1, "", "__init__"]], "opendataval.dataval.DVRL": [[50, 3, 1, "", "__init__"]], "opendataval.dataval.DataBanzhaf": [[51, 3, 1, "", "__init__"]], "opendataval.dataval.DataEvaluator": [[52, 3, 1, "", "__init__"]], "opendataval.dataval.DataOob": [[53, 3, 1, "", "__init__"]], "opendataval.dataval.DataShapley": [[54, 3, 1, "", "__init__"]], "opendataval.dataval.InfluenceFunctionEval": [[55, 3, 1, "", "__init__"]], "opendataval.dataval.KNNShapley": [[56, 3, 1, "", "__init__"]], "opendataval.dataval.LeaveOneOut": [[57, 3, 1, "", "__init__"]], "opendataval.dataval.RandomEvaluator": [[58, 3, 1, "", "__init__"]], "opendataval.dataval.ShapEvaluator": [[59, 3, 1, "", "__init__"]], "opendataval.dataval.ame": [[82, 0, 0, "-", "ame"]], "opendataval.dataval.ame.ame": [[82, 2, 1, "", "AME"], [82, 2, 1, "", "BaggingEvaluator"]], "opendataval.dataval.ame.ame.AME": [[82, 3, 1, "", "evaluate_data_values"], [82, 3, 1, "", "train_data_values"]], "opendataval.dataval.ame.ame.BaggingEvaluator": [[82, 3, 1, "", "evaluate_data_values"], [82, 3, 1, "", "get_subset_perf"], [82, 3, 1, "", "input_data"], [82, 3, 1, "", "train_data_values"]], "opendataval.dataval.api": [[81, 2, 1, "", "DataEvaluator"], [81, 2, 1, "", "ModelLessMixin"]], "opendataval.dataval.api.DataEvaluator": [[81, 6, 1, "", "Evaluators"], [81, 5, 1, "", "data_values"], [81, 3, 1, "", "evaluate"], [81, 3, 1, "", "evaluate_data_values"], [81, 3, 1, "", "input_data"], [81, 3, 1, "", "input_fetcher"], [81, 3, 1, "", "input_metric"], [81, 3, 1, "", "input_model"], [81, 3, 1, "", "input_model_metric"], [81, 3, 1, "", "setup"], [81, 3, 1, "", "train"], [81, 3, 1, "", "train_data_values"]], "opendataval.dataval.api.ModelLessMixin": [[81, 3, 1, "", "embeddings"]], "opendataval.dataval.dvrl": [[83, 0, 0, "-", "dvrl"]], "opendataval.dataval.dvrl.dvrl": [[83, 2, 1, "", "DVRL"], [83, 2, 1, "", "DataValueEstimatorRL"], [83, 2, 1, "", "DveLoss"]], "opendataval.dataval.dvrl.dvrl.DVRL": [[83, 3, 1, "", "evaluate_data_values"], [83, 3, 1, "", "input_data"], [83, 3, 1, "", "train_data_values"]], "opendataval.dataval.dvrl.dvrl.DataValueEstimatorRL": [[83, 3, 1, "", "forward"]], "opendataval.dataval.dvrl.dvrl.DveLoss": [[83, 3, 1, "", "forward"]], "opendataval.dataval.influence": [[84, 0, 0, "-", "influence"]], "opendataval.dataval.influence.influence": [[84, 2, 1, "", "InfluenceFunctionEval"]], "opendataval.dataval.influence.influence.InfluenceFunctionEval": [[84, 3, 1, "", "evaluate_data_values"], [84, 3, 1, "", "input_data"], [84, 3, 1, "", "train_data_values"]], "opendataval.dataval.knnshap": [[85, 0, 0, "-", "knnshap"]], "opendataval.dataval.knnshap.knnshap": [[85, 2, 1, "", "KNNShapley"]], "opendataval.dataval.knnshap.knnshap.KNNShapley": [[85, 3, 1, "", "evaluate_data_values"], [85, 3, 1, "", "match"], [85, 3, 1, "", "train_data_values"]], "opendataval.dataval.margcontrib": [[86, 0, 0, "-", "banzhaf"], [86, 0, 0, "-", "betashap"], [86, 0, 0, "-", "datashap"], [86, 0, 0, "-", "loo"], [86, 0, 0, "-", "shap"]], "opendataval.dataval.margcontrib.banzhaf": [[86, 2, 1, "", "DataBanzhaf"], [86, 2, 1, "", "DataBanzhafMargContrib"]], "opendataval.dataval.margcontrib.banzhaf.DataBanzhaf": [[86, 3, 1, "", "evaluate_data_values"], [86, 3, 1, "", "input_data"], [86, 3, 1, "", "train_data_values"]], "opendataval.dataval.margcontrib.banzhaf.DataBanzhafMargContrib": [[86, 3, 1, "", "compute_weight"], [86, 3, 1, "", "evaluate_data_values"]], "opendataval.dataval.margcontrib.betashap": [[86, 2, 1, "", "BetaShapley"]], "opendataval.dataval.margcontrib.betashap.BetaShapley": [[86, 3, 1, "", "compute_weight"], [86, 3, 1, "", "evaluate_data_values"]], "opendataval.dataval.margcontrib.datashap": [[86, 2, 1, "", "DataShapley"]], "opendataval.dataval.margcontrib.datashap.DataShapley": [[86, 3, 1, "", "compute_weight"], [86, 3, 1, "", "evaluate_data_values"]], "opendataval.dataval.margcontrib.loo": [[86, 2, 1, "", "LeaveOneOut"]], "opendataval.dataval.margcontrib.loo.LeaveOneOut": [[86, 3, 1, "", "evaluate_data_values"], [86, 3, 1, "", "input_data"], [86, 3, 1, "", "train_data_values"]], "opendataval.dataval.margcontrib.shap": [[86, 2, 1, "", "ShapEvaluator"]], "opendataval.dataval.margcontrib.shap.ShapEvaluator": [[86, 6, 1, "", "CACHE"], [86, 6, 1, "", "GR_MAX"], [86, 3, 1, "", "compute_weight"], [86, 3, 1, "", "evaluate_data_values"], [86, 3, 1, "", "input_data"], [86, 3, 1, "", "train_data_values"]], "opendataval.dataval.oob": [[87, 0, 0, "-", "oob"]], "opendataval.dataval.oob.oob": [[87, 2, 1, "", "DataOob"], [87, 2, 1, "", "GroupingIndex"]], "opendataval.dataval.oob.oob.DataOob": [[87, 3, 1, "", "evaluate_data_values"], [87, 3, 1, "", "input_data"], [87, 3, 1, "", "train_data_values"]], "opendataval.dataval.oob.oob.GroupingIndex": [[87, 3, 1, "", "add_indices"]], "opendataval.dataval.random": [[88, 0, 0, "-", "random"]], "opendataval.dataval.random.random": [[88, 2, 1, "", "RandomEvaluator"]], "opendataval.dataval.random.random.RandomEvaluator": [[88, 3, 1, "", "evaluate_data_values"], [88, 3, 1, "", "train_data_values"]], "opendataval.experiment": [[61, 2, 1, "", "ExperimentMediator"], [89, 0, 0, "-", "api"], [89, 0, 0, "-", "exper_methods"]], "opendataval.experiment.ExperimentMediator": [[61, 3, 1, "", "__init__"]], "opendataval.experiment.api": [[89, 2, 1, "", "ExperimentMediator"]], "opendataval.experiment.api.ExperimentMediator": [[89, 3, 1, "", "compute_data_values"], [89, 3, 1, "", "evaluate"], [89, 3, 1, "", "model_factory_setup"], [89, 3, 1, "", "plot"], [89, 3, 1, "", "save_output"], [89, 3, 1, "", "set_output_directory"], [89, 3, 1, "", "setup"]], "opendataval.experiment.exper_methods": [[89, 4, 1, "", "discover_corrupted_sample"], [89, 4, 1, "", "increasing_bin_removal"], [89, 4, 1, "", "noisy_detection"], [89, 4, 1, "", "remove_high_low"], [89, 4, 1, "", "save_dataval"]], "opendataval.model": [[64, 2, 1, "", "ClassifierSkLearnWrapper"], [65, 2, 1, "", "ClassifierUnweightedSkLearnWrapper"], [66, 2, 1, "", "Model"], [90, 4, 1, "", "ModelFactory"], [68, 2, 1, "", "RegressionSkLearnWrapper"], [69, 2, 1, "", "TorchClassMixin"], [70, 2, 1, "", "TorchPredictMixin"], [71, 2, 1, "", "TorchRegressMixin"], [90, 0, 0, "-", "api"], [90, 0, 0, "-", "bert"], [90, 0, 0, "-", "lenet"], [90, 0, 0, "-", "logistic_regression"], [90, 0, 0, "-", "mlp"]], "opendataval.model.ClassifierSkLearnWrapper": [[64, 3, 1, "", "__init__"]], "opendataval.model.ClassifierUnweightedSkLearnWrapper": [[65, 3, 1, "", "__init__"]], "opendataval.model.Model": [[66, 3, 1, "", "__init__"]], "opendataval.model.RegressionSkLearnWrapper": [[68, 3, 1, "", "__init__"]], "opendataval.model.TorchClassMixin": [[69, 3, 1, "", "__init__"]], "opendataval.model.TorchPredictMixin": [[70, 3, 1, "", "__init__"]], "opendataval.model.TorchRegressMixin": [[71, 3, 1, "", "__init__"]], "opendataval.model.api": [[90, 2, 1, "", "ClassifierSkLearnWrapper"], [90, 2, 1, "", "ClassifierUnweightedSkLearnWrapper"], [90, 2, 1, "", "Model"], [90, 2, 1, "", "RegressionSkLearnWrapper"], [90, 2, 1, "", "TorchClassMixin"], [90, 2, 1, "", "TorchPredictMixin"], [90, 2, 1, "", "TorchRegressMixin"], [90, 4, 1, "", "to_numpy"]], "opendataval.model.api.ClassifierSkLearnWrapper": [[90, 3, 1, "", "fit"], [90, 3, 1, "", "predict"]], "opendataval.model.api.ClassifierUnweightedSkLearnWrapper": [[90, 3, 1, "", "fit"]], "opendataval.model.api.Model": [[90, 6, 1, "", "Models"], [90, 3, 1, "", "clone"], [90, 3, 1, "", "fit"], [90, 3, 1, "", "predict"]], "opendataval.model.api.RegressionSkLearnWrapper": [[90, 3, 1, "", "fit"], [90, 3, 1, "", "predict"]], "opendataval.model.api.TorchClassMixin": [[90, 5, 1, "", "device"], [90, 3, 1, "", "fit"], [90, 6, 1, "", "training"]], "opendataval.model.api.TorchPredictMixin": [[90, 5, 1, "", "device"], [90, 3, 1, "", "predict"], [90, 6, 1, "", "training"]], "opendataval.model.api.TorchRegressMixin": [[90, 5, 1, "", "device"], [90, 3, 1, "", "fit"], [90, 6, 1, "", "training"]], "opendataval.model.bert": [[90, 2, 1, "", "BertClassifier"]], "opendataval.model.bert.BertClassifier": [[90, 3, 1, "", "fit"], [90, 3, 1, "", "forward"], [90, 3, 1, "", "predict"], [90, 3, 1, "", "tokenize"]], "opendataval.model.lenet": [[90, 2, 1, "", "LeNet"]], "opendataval.model.lenet.LeNet": [[90, 3, 1, "", "forward"]], "opendataval.model.logistic_regression": [[90, 2, 1, "", "LogisticRegression"]], "opendataval.model.logistic_regression.LogisticRegression": [[90, 3, 1, "", "forward"]], "opendataval.model.mlp": [[90, 2, 1, "", "ClassifierMLP"], [90, 2, 1, "", "RegressionMLP"]], "opendataval.model.mlp.ClassifierMLP": [[90, 3, 1, "", "forward"]], "opendataval.model.mlp.RegressionMLP": [[90, 3, 1, "", "forward"]], "opendataval.util": [[78, 2, 1, "", "FuncEnum"], [78, 2, 1, "", "MeanStdTime"], [78, 2, 1, "", "ParamSweep"], [78, 2, 1, "", "StrEnum"], [78, 4, 1, "", "load_mediator_output"], [78, 4, 1, "", "set_random_state"], [78, 2, 1, "", "wrapper"]], "opendataval.util.FuncEnum": [[78, 3, 1, "", "wrap"]], "opendataval.util.ParamSweep": [[78, 3, 1, "", "sweep"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"opendatav": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "dataload": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 79, 80], "dataset": [0, 1, 2, 7, 8, 9, 10, 41, 42, 43, 44, 80], "imageset": [1, 9, 43, 80], "nlpset": [2, 10, 44, 80], "catdataset": [3, 37], "paramet": [3, 4, 5, 6, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 37, 38, 39, 40, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 67, 68, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "rais": [3, 4, 12, 30, 37, 38, 46, 67, 79, 90], "datafetch": [4, 38], "attribut": [4, 17, 25, 38, 52, 61, 79, 81, 89], "regist": [5, 39, 79], "warn": [5, 39, 79], "cach": [6, 40], "return": [6, 11, 30, 40, 45, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "data": [7, 36, 41, 47, 79, 80, 81, 91], "set": [7, 36, 41, 79, 80], "mix_label": [11, 45], "one_hot_encod": [12, 46], "datav": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 81, 82, 83, 84, 85, 86, 87, 88], "am": [13, 48, 82], "refer": [13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "betashaplei": [14, 49], "dvrl": [15, 50, 83], "databanzhaf": [16, 51], "dataevalu": [17, 52], "dataoob": [18, 53], "datashaplei": [19, 54], "influencefunctionev": [20, 55], "knnshaplei": [21, 56], "leaveoneout": [22, 57], "randomevalu": [23, 58], "shapevalu": [24, 59], "experi": [25, 26, 60, 61, 62, 89], "experimentmedi": [25, 61], "exper_method": [26, 62, 89], "model": [27, 28, 29, 30, 31, 32, 33, 34, 63, 64, 65, 66, 67, 68, 69, 70, 71, 90], "classifiersklearnwrapp": [27, 64], "classifierunweightedsklearnwrapp": [28, 65], "modelfactori": [30, 67], "regressionsklearnwrapp": [31, 68], "torchclassmixin": [32, 69], "torchpredictmixin": [33, 70], "torchregressmixin": [34, 71], "__version__": 35, "loader": [36, 79], "creat": [36, 79], "load": [36, 79], "util": [36, 72, 73, 78, 79], "evalu": [47, 81], "catalog": [47, 81], "setup": [60, 89], "api": [63, 81, 89, 90], "torch": [63, 90], "mixin": [63, 90], "sci": [63, 90], "kit": [63, 90], "learn": [63, 90], "wrapper": [63, 90], "default": [63, 90], "hyperparamet": [63, 90], "load_mediator_output": 72, "set_random_st": 73, "document": 74, "abstract": 74, "indic": 74, "tabl": 74, "leaderboard": 75, "licens": 76, "packag": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "subpackag": [78, 79, 81], "submodul": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "preset": 78, "modul": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "content": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "fetcher": 79, "noisifi": 79, "cleanlab": 80, "challeng": 80, "influenc": 84, "knnshap": 85, "margcontrib": 86, "banzhaf": 86, "betashap": 86, "datashap": 86, "loo": 86, "shap": 86, "note": 86, "oob": 87, "random": 88, "bert": 90, "lenet": 90, "logistic_regress": 90, "mlp": 90, "resnet": 90, "unifi": 91, "benchmark": 91, "valuat": 91}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"opendataval.dataloader.datasets.datasets": [[0, "module-opendataval.dataloader.datasets.datasets"], [8, "module-opendataval.dataloader.datasets.datasets"], [42, "module-opendataval.dataloader.datasets.datasets"]], "opendataval.dataloader.datasets.imagesets": [[1, "module-opendataval.dataloader.datasets.imagesets"], [9, "module-opendataval.dataloader.datasets.imagesets"], [43, "module-opendataval.dataloader.datasets.imagesets"]], "opendataval.dataloader.datasets.nlpsets": [[2, "module-opendataval.dataloader.datasets.nlpsets"], [10, "module-opendataval.dataloader.datasets.nlpsets"], [44, "module-opendataval.dataloader.datasets.nlpsets"]], "opendataval.dataloader.CatDataset": [[3, "opendataval-dataloader-catdataset"], [37, "opendataval-dataloader-catdataset"]], "Parameters": [[3, "parameters"], [4, "parameters"], [5, "parameters"], [6, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [27, "parameters"], [28, "parameters"], [30, "parameters"], [31, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [45, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [61, "parameters"], [64, "parameters"], [65, "parameters"], [67, "parameters"], [68, "parameters"], [79, "parameters"], [79, "id1"], [79, "id3"], [79, "id5"], [79, "id7"], [79, "id10"], [79, "id13"], [79, "id15"], [79, "id17"], [79, "id18"], [79, "id20"], [79, "id23"], [79, "id25"], [79, "id26"], [80, "parameters"], [80, "id12"], [81, "parameters"], [81, "id1"], [81, "id3"], [81, "id5"], [81, "id6"], [81, "id7"], [81, "id9"], [81, "id11"], [81, "id13"], [82, "parameters"], [82, "id2"], [82, "id5"], [82, "id7"], [82, "id8"], [83, "parameters"], [83, "id2"], [83, "id3"], [83, "id6"], [83, "id7"], [83, "id9"], [83, "id12"], [84, "parameters"], [84, "id2"], [84, "id5"], [85, "parameters"], [86, "parameters"], [86, "id2"], [86, "id5"], [86, "id8"], [86, "id13"], [86, "id20"], [86, "id25"], [86, "id27"], [86, "id28"], [86, "id32"], [86, "id34"], [86, "id35"], [87, "parameters"], [87, "id2"], [87, "id3"], [87, "id4"], [88, "parameters"], [89, "parameters"], [89, "id1"], [89, "id2"], [89, "id3"], [89, "id5"], [89, "id7"], [89, "id8"], [89, "id11"], [89, "id13"], [89, "id15"], [90, "parameters"], [90, "id1"], [90, "id2"], [90, "id3"], [90, "id4"], [90, "id6"], [90, "id8"], [90, "id10"], [90, "id11"], [90, "id12"], [90, "id14"], [90, "id15"], [90, "id17"], [90, "id20"], [90, "id21"], [90, "id23"], [90, "id25"], [90, "id27"], [90, "id31"], [90, "id32"], [90, "id33"], [90, "id35"], [90, "id36"], [90, "id38"], [90, "id39"], [90, "id41"]], "Raises": [[3, "raises"], [4, "raises"], [12, "raises"], [30, "raises"], [37, "raises"], [38, "raises"], [46, "raises"], [67, "raises"], [79, "raises"], [79, "id2"], [79, "id4"], [79, "id9"], [79, "id12"], [79, "id22"], [79, "id24"], [90, "raises"]], "opendataval.dataloader.DataFetcher": [[4, "opendataval-dataloader-datafetcher"], [38, "opendataval-dataloader-datafetcher"]], "Attributes": [[4, "attributes"], [17, "attributes"], [25, "attributes"], [38, "attributes"], [52, "attributes"], [61, "attributes"], [79, "attributes"], [81, "attributes"], [81, "id16"], [89, "attributes"]], "opendataval.dataloader.Register": [[5, "opendataval-dataloader-register"], [39, "opendataval-dataloader-register"]], "Warns": [[5, "warns"], [39, "warns"], [79, "warns"]], "opendataval.dataloader.cache": [[6, "opendataval-dataloader-cache"], [40, "opendataval-dataloader-cache"]], "Returns": [[6, "returns"], [11, "returns"], [30, "returns"], [40, "returns"], [45, "returns"], [67, "returns"], [79, "returns"], [79, "id6"], [79, "id8"], [79, "id11"], [79, "id14"], [79, "id16"], [79, "id19"], [79, "id21"], [80, "returns"], [81, "returns"], [81, "id2"], [81, "id4"], [81, "id8"], [81, "id10"], [81, "id12"], [81, "id14"], [81, "id17"], [82, "returns"], [82, "id6"], [83, "returns"], [83, "id8"], [83, "id13"], [84, "returns"], [85, "returns"], [86, "returns"], [86, "id9"], [86, "id10"], [86, "id16"], [86, "id17"], [86, "id21"], [86, "id22"], [86, "id26"], [86, "id33"], [87, "returns"], [89, "returns"], [89, "id4"], [89, "id6"], [89, "id9"], [89, "id12"], [89, "id14"], [89, "id16"], [90, "returns"], [90, "id5"], [90, "id7"], [90, "id9"], [90, "id13"], [90, "id16"], [90, "id22"], [90, "id24"], [90, "id26"], [90, "id28"], [90, "id34"], [90, "id37"], [90, "id40"], [90, "id42"]], "opendataval.dataloader.datasets": [[7, "module-opendataval.dataloader.datasets"], [41, "module-opendataval.dataloader.datasets"]], "Data sets": [[7, "data-sets"], [41, "data-sets"], [80, "data-sets"]], "opendataval.dataloader.mix_labels": [[11, "opendataval-dataloader-mix-labels"], [45, "opendataval-dataloader-mix-labels"]], "opendataval.dataloader.one_hot_encode": [[12, "opendataval-dataloader-one-hot-encode"], [46, "opendataval-dataloader-one-hot-encode"]], "opendataval.dataval.AME": [[13, "opendataval-dataval-ame"], [48, "opendataval-dataval-ame"]], "References": [[13, "references"], [14, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [20, "references"], [21, "references"], [22, "references"], [24, "references"], [48, "references"], [49, "references"], [50, "references"], [51, "references"], [53, "references"], [54, "references"], [55, "references"], [56, "references"], [57, "references"], [59, "references"], [80, "references"], [80, "id4"], [80, "id7"], [80, "id9"], [80, "id13"], [80, "id16"], [80, "id18"], [81, "references"], [82, "references"], [82, "id3"], [83, "references"], [83, "id4"], [83, "id10"], [84, "references"], [85, "references"], [85, "id2"], [86, "references"], [86, "id3"], [86, "id6"], [86, "id11"], [86, "id14"], [86, "id18"], [86, "id23"], [86, "id29"], [87, "references"], [89, "references"], [90, "references"], [90, "id29"]], "opendataval.dataval.BetaShapley": [[14, "opendataval-dataval-betashapley"], [49, "opendataval-dataval-betashapley"]], "opendataval.dataval.DVRL": [[15, "opendataval-dataval-dvrl"], [50, "opendataval-dataval-dvrl"]], "opendataval.dataval.DataBanzhaf": [[16, "opendataval-dataval-databanzhaf"], [51, "opendataval-dataval-databanzhaf"]], "opendataval.dataval.DataEvaluator": [[17, "opendataval-dataval-dataevaluator"], [52, "opendataval-dataval-dataevaluator"]], "opendataval.dataval.DataOob": [[18, "opendataval-dataval-dataoob"], [53, "opendataval-dataval-dataoob"]], "opendataval.dataval.DataShapley": [[19, "opendataval-dataval-datashapley"], [54, "opendataval-dataval-datashapley"]], "opendataval.dataval.InfluenceFunctionEval": [[20, "opendataval-dataval-influencefunctioneval"], [55, "opendataval-dataval-influencefunctioneval"]], "opendataval.dataval.KNNShapley": [[21, "opendataval-dataval-knnshapley"], [56, "opendataval-dataval-knnshapley"]], "opendataval.dataval.LeaveOneOut": [[22, "opendataval-dataval-leaveoneout"], [57, "opendataval-dataval-leaveoneout"]], "opendataval.dataval.RandomEvaluator": [[23, "opendataval-dataval-randomevaluator"], [58, "opendataval-dataval-randomevaluator"]], "opendataval.dataval.ShapEvaluator": [[24, "opendataval-dataval-shapevaluator"], [59, "opendataval-dataval-shapevaluator"]], "opendataval.experiment.ExperimentMediator": [[25, "opendataval-experiment-experimentmediator"], [61, "opendataval-experiment-experimentmediator"]], "opendataval.experiment.exper_methods": [[26, "module-opendataval.experiment.exper_methods"], [62, "module-opendataval.experiment.exper_methods"]], "opendataval.model.ClassifierSkLearnWrapper": [[27, "opendataval-model-classifiersklearnwrapper"], [64, "opendataval-model-classifiersklearnwrapper"]], "opendataval.model.ClassifierUnweightedSkLearnWrapper": [[28, "opendataval-model-classifierunweightedsklearnwrapper"], [65, "opendataval-model-classifierunweightedsklearnwrapper"]], "opendataval.model.Model": [[29, "opendataval-model-model"], [66, "opendataval-model-model"]], "opendataval.model.ModelFactory": [[30, "opendataval-model-modelfactory"], [67, "opendataval-model-modelfactory"]], "opendataval.model.RegressionSkLearnWrapper": [[31, "opendataval-model-regressionsklearnwrapper"], [68, "opendataval-model-regressionsklearnwrapper"]], "opendataval.model.TorchClassMixin": [[32, "opendataval-model-torchclassmixin"], [69, "opendataval-model-torchclassmixin"]], "opendataval.model.TorchPredictMixin": [[33, "opendataval-model-torchpredictmixin"], [70, "opendataval-model-torchpredictmixin"]], "opendataval.model.TorchRegressMixin": [[34, "opendataval-model-torchregressmixin"], [71, "opendataval-model-torchregressmixin"]], "opendataval.__version__": [[35, "opendataval-version"]], "opendataval.dataloader": [[36, "module-opendataval.dataloader"]], "Data Loader": [[36, "data-loader"], [79, "data-loader"]], "Creating/Loading data sets": [[36, "creating-loading-data-sets"], [79, "creating-loading-data-sets"]], "Utils": [[36, "utils"], [78, "utils"], [79, "utils"]], "opendataval.dataval": [[47, "module-opendataval.dataval"]], "Data Evaluator": [[47, "data-evaluator"], [81, "data-evaluator"]], "Catalog": [[47, "catalog"], [81, "catalog"]], "opendataval.experiment": [[60, "module-opendataval.experiment"]], "Experiment": [[60, "experiment"], [89, "experiment"]], "Experiment Setup": [[60, "experiment-setup"], [89, "experiment-setup"]], "Experiments": [[60, "experiments"], [89, "experiments"]], "opendataval.model": [[63, "module-opendataval.model"]], "Models": [[63, "models"], [90, "models"]], "API": [[63, "api"], [90, "api"]], "Torch Mixins": [[63, "torch-mixins"], [90, "torch-mixins"]], "Sci-kit learn wrappers": [[63, "sci-kit-learn-wrappers"], [90, "sci-kit-learn-wrappers"]], "Default Hyperparameters": [[63, "default-hyperparameters"], [90, "default-hyperparameters"]], "opendataval.util.load_mediator_output": [[72, "opendataval-util-load-mediator-output"]], "opendataval.util.set_random_state": [[73, "opendataval-util-set-random-state"]], "OpenDataVal Documentation": [[74, "opendataval-documentation"]], "Abstract": [[74, "abstract"]], "Indices and tables": [[74, "indices-and-tables"]], "OpenDataVal Leaderboards": [[75, "opendataval-leaderboards"]], "OpenDataVal license": [[76, "opendataval-license"]], "opendataval": [[77, "opendataval"], [78, "opendataval"]], "opendataval package": [[78, "opendataval-package"]], "Subpackages": [[78, "subpackages"], [79, "subpackages"], [81, "subpackages"]], "Submodules": [[78, "submodules"], [79, "submodules"], [80, "submodules"], [81, "submodules"], [82, "submodules"], [83, "submodules"], [84, "submodules"], [85, "submodules"], [86, "submodules"], [87, "submodules"], [88, "submodules"], [89, "submodules"], [90, "submodules"]], "opendataval.presets module": [[78, "module-opendataval.presets"]], "opendataval.util module": [[78, "module-opendataval.util"]], "Module contents": [[78, "module-opendataval"], [79, "module-opendataval.dataloader"], [80, "module-opendataval.dataloader.datasets"], [81, "module-opendataval.dataval"], [82, "module-opendataval.dataval.ame"], [83, "module-opendataval.dataval.dvrl"], [84, "module-opendataval.dataval.influence"], [85, "module-opendataval.dataval.knnshap"], [86, "module-opendataval.dataval.margcontrib"], [87, "module-opendataval.dataval.oob"], [88, "module-opendataval.dataval.random"], [89, "module-opendataval.experiment"], [90, "module-opendataval.model"]], "Modules": [[78, "modules"]], "opendataval.dataloader package": [[79, "opendataval-dataloader-package"]], "opendataval.dataloader.fetcher module": [[79, "module-opendataval.dataloader.fetcher"]], "opendataval.dataloader.noisify module": [[79, "module-opendataval.dataloader.noisify"]], "opendataval.dataloader.register module": [[79, "module-opendataval.dataloader.register"]], "opendataval.dataloader.util module": [[79, "module-opendataval.dataloader.util"]], "opendataval.dataloader.datasets package": [[80, "opendataval-dataloader-datasets-package"]], "opendataval.dataloader.datasets.cleanlab module": [[80, "module-opendataval.dataloader.datasets.cleanlab"]], "opendataval.dataloader.datasets.challenge module": [[80, "opendataval-dataloader-datasets-challenge-module"]], "opendataval.dataloader.datasets.datasets module": [[80, "module-opendataval.dataloader.datasets.datasets"]], "opendataval.dataloader.datasets.imagesets module": [[80, "module-opendataval.dataloader.datasets.imagesets"]], "opendataval.dataloader.datasets.nlpsets module": [[80, "module-opendataval.dataloader.datasets.nlpsets"]], "opendataval.dataval package": [[81, "opendataval-dataval-package"]], "opendataval.dataval.api module": [[81, "module-opendataval.dataval.api"]], "opendataval.dataval.ame package": [[82, "opendataval-dataval-ame-package"]], "opendataval.dataval.ame.ame module": [[82, "module-opendataval.dataval.ame.ame"]], "opendataval.dataval.dvrl package": [[83, "opendataval-dataval-dvrl-package"]], "opendataval.dataval.dvrl.dvrl module": [[83, "module-opendataval.dataval.dvrl.dvrl"]], "opendataval.dataval.influence package": [[84, "opendataval-dataval-influence-package"]], "opendataval.dataval.influence.influence module": [[84, "module-opendataval.dataval.influence.influence"]], "opendataval.dataval.knnshap package": [[85, "opendataval-dataval-knnshap-package"]], "opendataval.dataval.knnshap.knnshap module": [[85, "module-opendataval.dataval.knnshap.knnshap"]], "opendataval.dataval.margcontrib package": [[86, "opendataval-dataval-margcontrib-package"]], "opendataval.dataval.margcontrib.banzhaf module": [[86, "module-opendataval.dataval.margcontrib.banzhaf"]], "opendataval.dataval.margcontrib.betashap module": [[86, "module-opendataval.dataval.margcontrib.betashap"]], "opendataval.dataval.margcontrib.datashap module": [[86, "module-opendataval.dataval.margcontrib.datashap"]], "opendataval.dataval.margcontrib.loo module": [[86, "module-opendataval.dataval.margcontrib.loo"]], "opendataval.dataval.margcontrib.shap module": [[86, "module-opendataval.dataval.margcontrib.shap"]], "Notes": [[86, "notes"]], "opendataval.dataval.oob package": [[87, "opendataval-dataval-oob-package"]], "opendataval.dataval.oob.oob module": [[87, "module-opendataval.dataval.oob.oob"]], "opendataval.dataval.random package": [[88, "opendataval-dataval-random-package"]], "opendataval.dataval.random.random module": [[88, "module-opendataval.dataval.random.random"]], "opendataval.experiment package": [[89, "opendataval-experiment-package"]], "opendataval.experiment.api module": [[89, "module-opendataval.experiment.api"]], "opendataval.experiment.exper_methods module": [[89, "module-opendataval.experiment.exper_methods"]], "opendataval.model package": [[90, "opendataval-model-package"]], "opendataval.model.api module": [[90, "module-opendataval.model.api"]], "opendataval.model.bert module": [[90, "module-opendataval.model.bert"]], "opendataval.model.lenet module": [[90, "module-opendataval.model.lenet"]], "opendataval.model.logistic_regression module": [[90, "module-opendataval.model.logistic_regression"]], "opendataval.model.mlp module": [[90, "module-opendataval.model.mlp"]], "opendataval.model.resnet module": [[90, "opendataval-model-resnet-module"]], "OpenDataVal: a Unified Benchmark for Data Valuation": [[91, "opendataval-a-unified-benchmark-for-data-valuation"]]}, "indexentries": {"module": [[0, "module-opendataval.dataloader.datasets.datasets"], [1, "module-opendataval.dataloader.datasets.imagesets"], [2, "module-opendataval.dataloader.datasets.nlpsets"], [7, "module-opendataval.dataloader.datasets"], [8, "module-opendataval.dataloader.datasets.datasets"], [9, "module-opendataval.dataloader.datasets.imagesets"], [10, "module-opendataval.dataloader.datasets.nlpsets"], [26, "module-opendataval.experiment.exper_methods"], [36, "module-opendataval.dataloader"], [41, "module-opendataval.dataloader.datasets"], [42, "module-opendataval.dataloader.datasets.datasets"], [43, "module-opendataval.dataloader.datasets.imagesets"], [44, "module-opendataval.dataloader.datasets.nlpsets"], [47, "module-opendataval.dataval"], [60, "module-opendataval.experiment"], [62, "module-opendataval.experiment.exper_methods"], [63, "module-opendataval.model"], [78, "module-opendataval"], [78, "module-opendataval.presets"], [78, "module-opendataval.util"], [79, "module-opendataval.dataloader"], [79, "module-opendataval.dataloader.fetcher"], [79, "module-opendataval.dataloader.noisify"], [79, "module-opendataval.dataloader.register"], [79, "module-opendataval.dataloader.util"], [80, "module-opendataval.dataloader.datasets"], [80, "module-opendataval.dataloader.datasets.challenge"], [80, "module-opendataval.dataloader.datasets.cleanlab"], [80, "module-opendataval.dataloader.datasets.datasets"], [80, "module-opendataval.dataloader.datasets.imagesets"], [80, "module-opendataval.dataloader.datasets.nlpsets"], [81, "module-opendataval.dataval"], [81, "module-opendataval.dataval.api"], [82, "module-opendataval.dataval.ame"], [82, "module-opendataval.dataval.ame.ame"], [83, "module-opendataval.dataval.dvrl"], [83, "module-opendataval.dataval.dvrl.dvrl"], [84, "module-opendataval.dataval.influence"], [84, "module-opendataval.dataval.influence.influence"], [85, "module-opendataval.dataval.knnshap"], [85, "module-opendataval.dataval.knnshap.knnshap"], [86, "module-opendataval.dataval.margcontrib"], [86, "module-opendataval.dataval.margcontrib.banzhaf"], [86, "module-opendataval.dataval.margcontrib.betashap"], [86, "module-opendataval.dataval.margcontrib.datashap"], [86, "module-opendataval.dataval.margcontrib.loo"], [86, "module-opendataval.dataval.margcontrib.shap"], [87, "module-opendataval.dataval.oob"], [87, "module-opendataval.dataval.oob.oob"], [88, "module-opendataval.dataval.random"], [88, "module-opendataval.dataval.random.random"], [89, "module-opendataval.experiment"], [89, "module-opendataval.experiment.api"], [89, "module-opendataval.experiment.exper_methods"], [90, "module-opendataval.model"], [90, "module-opendataval.model.api"], [90, "module-opendataval.model.bert"], [90, "module-opendataval.model.lenet"], [90, "module-opendataval.model.logistic_regression"], [90, "module-opendataval.model.mlp"]], "opendataval.dataloader.datasets.datasets": [[0, "module-opendataval.dataloader.datasets.datasets"], [8, "module-opendataval.dataloader.datasets.datasets"], [42, "module-opendataval.dataloader.datasets.datasets"], [80, "module-opendataval.dataloader.datasets.datasets"]], "opendataval.dataloader.datasets.imagesets": [[1, "module-opendataval.dataloader.datasets.imagesets"], [9, "module-opendataval.dataloader.datasets.imagesets"], [43, "module-opendataval.dataloader.datasets.imagesets"], [80, "module-opendataval.dataloader.datasets.imagesets"]], "opendataval.dataloader.datasets.nlpsets": [[2, "module-opendataval.dataloader.datasets.nlpsets"], [10, "module-opendataval.dataloader.datasets.nlpsets"], [44, "module-opendataval.dataloader.datasets.nlpsets"], [80, "module-opendataval.dataloader.datasets.nlpsets"]], "catdataset (class in opendataval.dataloader)": [[3, "opendataval.dataloader.CatDataset"], [37, "opendataval.dataloader.CatDataset"]], "__init__() (opendataval.dataloader.catdataset method)": [[3, "opendataval.dataloader.CatDataset.__init__"], [37, "opendataval.dataloader.CatDataset.__init__"]], "datafetcher (class in opendataval.dataloader)": [[4, "opendataval.dataloader.DataFetcher"], [38, "opendataval.dataloader.DataFetcher"]], "__init__() (opendataval.dataloader.datafetcher method)": [[4, "opendataval.dataloader.DataFetcher.__init__"], [38, "opendataval.dataloader.DataFetcher.__init__"]], "register (class in opendataval.dataloader)": [[5, "opendataval.dataloader.Register"], [39, "opendataval.dataloader.Register"]], "__init__() (opendataval.dataloader.register method)": [[5, "opendataval.dataloader.Register.__init__"], [39, "opendataval.dataloader.Register.__init__"]], "cache() (in module opendataval.dataloader)": [[6, "opendataval.dataloader.cache"], [40, "opendataval.dataloader.cache"]], "opendataval.dataloader.datasets": [[7, "module-opendataval.dataloader.datasets"], [41, "module-opendataval.dataloader.datasets"], [80, "module-opendataval.dataloader.datasets"]], "mix_labels() (in module opendataval.dataloader)": [[11, "opendataval.dataloader.mix_labels"], [45, "opendataval.dataloader.mix_labels"]], "one_hot_encode() (in module opendataval.dataloader)": [[12, "opendataval.dataloader.one_hot_encode"], [46, "opendataval.dataloader.one_hot_encode"]], "ame (class in opendataval.dataval)": [[13, "opendataval.dataval.AME"], [48, "opendataval.dataval.AME"]], "__init__() (opendataval.dataval.ame method)": [[13, "opendataval.dataval.AME.__init__"], [48, "opendataval.dataval.AME.__init__"]], "betashapley (class in opendataval.dataval)": [[14, "opendataval.dataval.BetaShapley"], [49, "opendataval.dataval.BetaShapley"]], "__init__() (opendataval.dataval.betashapley method)": [[14, "opendataval.dataval.BetaShapley.__init__"], [49, "opendataval.dataval.BetaShapley.__init__"]], "dvrl (class in opendataval.dataval)": [[15, "opendataval.dataval.DVRL"], [50, "opendataval.dataval.DVRL"]], "__init__() (opendataval.dataval.dvrl method)": [[15, "opendataval.dataval.DVRL.__init__"], [50, "opendataval.dataval.DVRL.__init__"]], "databanzhaf (class in opendataval.dataval)": [[16, "opendataval.dataval.DataBanzhaf"], [51, "opendataval.dataval.DataBanzhaf"]], "__init__() (opendataval.dataval.databanzhaf method)": [[16, "opendataval.dataval.DataBanzhaf.__init__"], [51, "opendataval.dataval.DataBanzhaf.__init__"]], "dataevaluator (class in opendataval.dataval)": [[17, "opendataval.dataval.DataEvaluator"], [52, "opendataval.dataval.DataEvaluator"]], "__init__() (opendataval.dataval.dataevaluator method)": [[17, "opendataval.dataval.DataEvaluator.__init__"], [52, "opendataval.dataval.DataEvaluator.__init__"]], "dataoob (class in opendataval.dataval)": [[18, "opendataval.dataval.DataOob"], [53, "opendataval.dataval.DataOob"]], "__init__() (opendataval.dataval.dataoob method)": [[18, "opendataval.dataval.DataOob.__init__"], [53, "opendataval.dataval.DataOob.__init__"]], "datashapley (class in opendataval.dataval)": [[19, "opendataval.dataval.DataShapley"], [54, "opendataval.dataval.DataShapley"]], "__init__() (opendataval.dataval.datashapley method)": [[19, "opendataval.dataval.DataShapley.__init__"], [54, "opendataval.dataval.DataShapley.__init__"]], "influencefunctioneval (class in opendataval.dataval)": [[20, "opendataval.dataval.InfluenceFunctionEval"], [55, "opendataval.dataval.InfluenceFunctionEval"]], "__init__() (opendataval.dataval.influencefunctioneval method)": [[20, "opendataval.dataval.InfluenceFunctionEval.__init__"], [55, "opendataval.dataval.InfluenceFunctionEval.__init__"]], "knnshapley (class in opendataval.dataval)": [[21, "opendataval.dataval.KNNShapley"], [56, "opendataval.dataval.KNNShapley"]], "__init__() (opendataval.dataval.knnshapley method)": [[21, "opendataval.dataval.KNNShapley.__init__"], [56, "opendataval.dataval.KNNShapley.__init__"]], "leaveoneout (class in opendataval.dataval)": [[22, "opendataval.dataval.LeaveOneOut"], [57, "opendataval.dataval.LeaveOneOut"]], "__init__() (opendataval.dataval.leaveoneout method)": [[22, "opendataval.dataval.LeaveOneOut.__init__"], [57, "opendataval.dataval.LeaveOneOut.__init__"]], "randomevaluator (class in opendataval.dataval)": [[23, "opendataval.dataval.RandomEvaluator"], [58, "opendataval.dataval.RandomEvaluator"]], "__init__() (opendataval.dataval.randomevaluator method)": [[23, "opendataval.dataval.RandomEvaluator.__init__"], [58, "opendataval.dataval.RandomEvaluator.__init__"]], "shapevaluator (class in opendataval.dataval)": [[24, "opendataval.dataval.ShapEvaluator"], [59, "opendataval.dataval.ShapEvaluator"]], "__init__() (opendataval.dataval.shapevaluator method)": [[24, "opendataval.dataval.ShapEvaluator.__init__"], [59, "opendataval.dataval.ShapEvaluator.__init__"]], "experimentmediator (class in opendataval.experiment)": [[25, "opendataval.experiment.ExperimentMediator"], [61, "opendataval.experiment.ExperimentMediator"]], "__init__() (opendataval.experiment.experimentmediator method)": [[25, "opendataval.experiment.ExperimentMediator.__init__"], [61, "opendataval.experiment.ExperimentMediator.__init__"]], "opendataval.experiment.exper_methods": [[26, "module-opendataval.experiment.exper_methods"], [62, "module-opendataval.experiment.exper_methods"], [89, "module-opendataval.experiment.exper_methods"]], "classifiersklearnwrapper (class in opendataval.model)": [[27, "opendataval.model.ClassifierSkLearnWrapper"], [64, "opendataval.model.ClassifierSkLearnWrapper"]], "__init__() (opendataval.model.classifiersklearnwrapper method)": [[27, "opendataval.model.ClassifierSkLearnWrapper.__init__"], [64, "opendataval.model.ClassifierSkLearnWrapper.__init__"]], "classifierunweightedsklearnwrapper (class in opendataval.model)": [[28, "opendataval.model.ClassifierUnweightedSkLearnWrapper"], [65, "opendataval.model.ClassifierUnweightedSkLearnWrapper"]], "__init__() (opendataval.model.classifierunweightedsklearnwrapper method)": [[28, "opendataval.model.ClassifierUnweightedSkLearnWrapper.__init__"], [65, "opendataval.model.ClassifierUnweightedSkLearnWrapper.__init__"]], "model (class in opendataval.model)": [[29, "opendataval.model.Model"], [66, "opendataval.model.Model"]], "__init__() (opendataval.model.model method)": [[29, "opendataval.model.Model.__init__"], [66, "opendataval.model.Model.__init__"]], "modelfactory() (in module opendataval.model)": [[30, "opendataval.model.ModelFactory"], [67, "opendataval.model.ModelFactory"], [90, "opendataval.model.ModelFactory"]], "regressionsklearnwrapper (class in opendataval.model)": [[31, "opendataval.model.RegressionSkLearnWrapper"], [68, "opendataval.model.RegressionSkLearnWrapper"]], "__init__() (opendataval.model.regressionsklearnwrapper method)": [[31, "opendataval.model.RegressionSkLearnWrapper.__init__"], [68, "opendataval.model.RegressionSkLearnWrapper.__init__"]], "torchclassmixin (class in opendataval.model)": [[32, "opendataval.model.TorchClassMixin"], [69, "opendataval.model.TorchClassMixin"]], "__init__() (opendataval.model.torchclassmixin method)": [[32, "opendataval.model.TorchClassMixin.__init__"], [69, "opendataval.model.TorchClassMixin.__init__"]], "torchpredictmixin (class in opendataval.model)": [[33, "opendataval.model.TorchPredictMixin"], [70, "opendataval.model.TorchPredictMixin"]], "__init__() (opendataval.model.torchpredictmixin method)": [[33, "opendataval.model.TorchPredictMixin.__init__"], [70, "opendataval.model.TorchPredictMixin.__init__"]], "torchregressmixin (class in opendataval.model)": [[34, "opendataval.model.TorchRegressMixin"], [71, "opendataval.model.TorchRegressMixin"]], "__init__() (opendataval.model.torchregressmixin method)": [[34, "opendataval.model.TorchRegressMixin.__init__"], [71, "opendataval.model.TorchRegressMixin.__init__"]], "__version__ (in module opendataval)": [[35, "opendataval.__version__"]], "opendataval.dataloader": [[36, "module-opendataval.dataloader"], [79, "module-opendataval.dataloader"]], "opendataval.dataval": [[47, "module-opendataval.dataval"], [81, "module-opendataval.dataval"]], "opendataval.experiment": [[60, "module-opendataval.experiment"], [89, "module-opendataval.experiment"]], "opendataval.model": [[63, "module-opendataval.model"], [90, "module-opendataval.model"]], "load_mediator_output() (in module opendataval.util)": [[72, "opendataval.util.load_mediator_output"], [78, "opendataval.util.load_mediator_output"]], "set_random_state() (in module opendataval.util)": [[73, "opendataval.util.set_random_state"], [78, "opendataval.util.set_random_state"]], "funcenum (class in opendataval.util)": [[78, "opendataval.util.FuncEnum"]], "meanstdtime (class in opendataval.util)": [[78, "opendataval.util.MeanStdTime"]], "paramsweep (class in opendataval.util)": [[78, "opendataval.util.ParamSweep"]], "strenum (class in opendataval.util)": [[78, "opendataval.util.StrEnum"]], "opendataval": [[78, "module-opendataval"]], "opendataval.presets": [[78, "module-opendataval.presets"]], "opendataval.util": [[78, "module-opendataval.util"]], "sweep() (opendataval.util.paramsweep method)": [[78, "opendataval.util.ParamSweep.sweep"]], "wrap() (opendataval.util.funcenum static method)": [[78, "opendataval.util.FuncEnum.wrap"]], "wrapper (class in opendataval.util)": [[78, "opendataval.util.wrapper"]], "add_gauss_noise (opendataval.dataloader.noisify.noisefunc attribute)": [[79, "opendataval.dataloader.noisify.NoiseFunc.ADD_GAUSS_NOISE"]], "cache_dir (opendataval.dataloader.register.register attribute)": [[79, "opendataval.dataloader.register.Register.CACHE_DIR"]], "catdataset (class in opendataval.dataloader.util)": [[79, "opendataval.dataloader.util.CatDataset"]], "datafetcher (class in opendataval.dataloader.fetcher)": [[79, "opendataval.dataloader.fetcher.DataFetcher"]], "datasets (opendataval.dataloader.register.register attribute)": [[79, "opendataval.dataloader.register.Register.Datasets"]], "indextransformdataset (class in opendataval.dataloader.util)": [[79, "opendataval.dataloader.util.IndexTransformDataset"]], "listdataset (class in opendataval.dataloader.util)": [[79, "opendataval.dataloader.util.ListDataset"]], "mix_labels (opendataval.dataloader.noisify.noisefunc attribute)": [[79, "opendataval.dataloader.noisify.NoiseFunc.MIX_LABELS"]], "noisefunc (class in opendataval.dataloader.noisify)": [[79, "opendataval.dataloader.noisify.NoiseFunc"]], "register (class in opendataval.dataloader.register)": [[79, "opendataval.dataloader.register.Register"]], "add_covar_transform() (opendataval.dataloader.register.register method)": [[79, "opendataval.dataloader.register.Register.add_covar_transform"]], "add_gauss_noise() (in module opendataval.dataloader.noisify)": [[79, "opendataval.dataloader.noisify.add_gauss_noise"]], "add_label_transform() (opendataval.dataloader.register.register method)": [[79, "opendataval.dataloader.register.Register.add_label_transform"]], "cache() (in module opendataval.dataloader.register)": [[79, "opendataval.dataloader.register.cache"]], "covar_dim (opendataval.dataloader.fetcher.datafetcher property)": [[79, "opendataval.dataloader.fetcher.DataFetcher.covar_dim"]], "datapoints (opendataval.dataloader.fetcher.datafetcher property)": [[79, "opendataval.dataloader.fetcher.DataFetcher.datapoints"]], "datasets_available() (opendataval.dataloader.fetcher.datafetcher static method)": [[79, "opendataval.dataloader.fetcher.DataFetcher.datasets_available"]], "from_covar_func() (opendataval.dataloader.register.register method)": [[79, "opendataval.dataloader.register.Register.from_covar_func"]], "from_covar_label_func() (opendataval.dataloader.register.register method)": [[79, "opendataval.dataloader.register.Register.from_covar_label_func"]], "from_csv() (opendataval.dataloader.register.register method)": [[79, "opendataval.dataloader.register.Register.from_csv"]], "from_data() (opendataval.dataloader.fetcher.datafetcher class method)": [[79, "opendataval.dataloader.fetcher.DataFetcher.from_data"]], "from_data() (opendataval.dataloader.register.register method)": [[79, "opendataval.dataloader.register.Register.from_data"]], "from_data_splits() (opendataval.dataloader.fetcher.datafetcher class method)": [[79, "opendataval.dataloader.fetcher.DataFetcher.from_data_splits"]], "from_label_func() (opendataval.dataloader.register.register method)": [[79, "opendataval.dataloader.register.Register.from_label_func"]], "from_numpy() (opendataval.dataloader.register.register method)": [[79, "opendataval.dataloader.register.Register.from_numpy"]], "from_pandas() (opendataval.dataloader.register.register method)": [[79, "opendataval.dataloader.register.Register.from_pandas"]], "label_dim (opendataval.dataloader.fetcher.datafetcher property)": [[79, "opendataval.dataloader.fetcher.DataFetcher.label_dim"]], "load_data() (opendataval.dataloader.register.register method)": [[79, "opendataval.dataloader.register.Register.load_data"]], "mix_labels() (in module opendataval.dataloader.noisify)": [[79, "opendataval.dataloader.noisify.mix_labels"]], "noisify() (opendataval.dataloader.fetcher.datafetcher method)": [[79, "opendataval.dataloader.fetcher.DataFetcher.noisify"]], "num_points (opendataval.dataloader.fetcher.datafetcher property)": [[79, "opendataval.dataloader.fetcher.DataFetcher.num_points"]], "one_hot_encode() (in module opendataval.dataloader.register)": [[79, "opendataval.dataloader.register.one_hot_encode"]], "opendataval.dataloader.fetcher": [[79, "module-opendataval.dataloader.fetcher"]], "opendataval.dataloader.noisify": [[79, "module-opendataval.dataloader.noisify"]], "opendataval.dataloader.register": [[79, "module-opendataval.dataloader.register"]], "opendataval.dataloader.util": [[79, "module-opendataval.dataloader.util"]], "setup() (opendataval.dataloader.fetcher.datafetcher class method)": [[79, "opendataval.dataloader.fetcher.DataFetcher.setup"]], "split_dataset_by_count() (opendataval.dataloader.fetcher.datafetcher method)": [[79, "opendataval.dataloader.fetcher.DataFetcher.split_dataset_by_count"]], "split_dataset_by_indices() (opendataval.dataloader.fetcher.datafetcher method)": [[79, "opendataval.dataloader.fetcher.DataFetcher.split_dataset_by_indices"]], "split_dataset_by_prop() (opendataval.dataloader.fetcher.datafetcher method)": [[79, "opendataval.dataloader.fetcher.DataFetcher.split_dataset_by_prop"]], "transform (opendataval.dataloader.util.indextransformdataset property)": [[79, "opendataval.dataloader.util.IndexTransformDataset.transform"]], "bertembeddings() (in module opendataval.dataloader.datasets.nlpsets)": [[80, "opendataval.dataloader.datasets.nlpsets.BertEmbeddings"]], "challenge_url (in module opendataval.dataloader.datasets.challenge)": [[80, "opendataval.dataloader.datasets.challenge.CHALLENGE_URL"]], "cleanlabimagenet() (in module opendataval.dataloader.datasets.cleanlab)": [[80, "opendataval.dataloader.datasets.cleanlab.CleanLabImagenet"]], "max_dataset_size (in module opendataval.dataloader.datasets.nlpsets)": [[80, "opendataval.dataloader.datasets.nlpsets.MAX_DATASET_SIZE"]], "resnetembeding() (in module opendataval.dataloader.datasets.imagesets)": [[80, "opendataval.dataloader.datasets.imagesets.ResnetEmbeding"]], "visionadapter (class in opendataval.dataloader.datasets.imagesets)": [[80, "opendataval.dataloader.datasets.imagesets.VisionAdapter"]], "bbc_embedding() (in module opendataval.dataloader.datasets.nlpsets)": [[80, "opendataval.dataloader.datasets.nlpsets.bbc_embedding"]], "cifar10 (in module opendataval.dataloader.datasets.cleanlab)": [[80, "opendataval.dataloader.datasets.cleanlab.cifar10"]], "cifar10 (in module opendataval.dataloader.datasets.imagesets)": [[80, "opendataval.dataloader.datasets.imagesets.cifar10"]], "cifar100 (in module opendataval.dataloader.datasets.cleanlab)": [[80, "opendataval.dataloader.datasets.cleanlab.cifar100"]], "cifar100 (in module opendataval.dataloader.datasets.imagesets)": [[80, "opendataval.dataloader.datasets.imagesets.cifar100"]], "cifar100_embed() (in module opendataval.dataloader.datasets.cleanlab)": [[80, "opendataval.dataloader.datasets.cleanlab.cifar100_embed"]], "cifar10_embed() (in module opendataval.dataloader.datasets.cleanlab)": [[80, "opendataval.dataloader.datasets.cleanlab.cifar10_embed"]], "cifar10_embed() (in module opendataval.dataloader.datasets.imagesets)": [[80, "opendataval.dataloader.datasets.imagesets.cifar10_embed"]], "download_2dplanes() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_2dplanes"]], "download_miniboone() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_MiniBooNE"]], "download_adult() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_adult"]], "download_bbc() (in module opendataval.dataloader.datasets.nlpsets)": [[80, "opendataval.dataloader.datasets.nlpsets.download_bbc"]], "download_breast_cancer() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_breast_cancer"]], "download_creditcard() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_creditcard"]], "download_diabetes() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_diabetes"]], "download_digits() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_digits"]], "download_election() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_election"]], "download_electricity() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_electricity"]], "download_fried() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_fried"]], "download_imdb() (in module opendataval.dataloader.datasets.nlpsets)": [[80, "opendataval.dataloader.datasets.nlpsets.download_imdb"]], "download_iris() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_iris"]], "download_linnerud() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_linnerud"]], "download_nomao() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_nomao"]], "download_paths() (in module opendataval.dataloader.datasets.challenge)": [[80, "opendataval.dataloader.datasets.challenge.download_paths"]], "download_pol() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.download_pol"]], "fashion (in module opendataval.dataloader.datasets.imagesets)": [[80, "opendataval.dataloader.datasets.imagesets.fashion"]], "gaussian_classifier() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.gaussian_classifier"]], "imagenet (in module opendataval.dataloader.datasets.cleanlab)": [[80, "opendataval.dataloader.datasets.cleanlab.imagenet"]], "imagenet_embed() (in module opendataval.dataloader.datasets.cleanlab)": [[80, "opendataval.dataloader.datasets.cleanlab.imagenet_embed"]], "imdb_embedding() (in module opendataval.dataloader.datasets.nlpsets)": [[80, "opendataval.dataloader.datasets.nlpsets.imdb_embedding"]], "iris_challenge() (in module opendataval.dataloader.datasets.challenge)": [[80, "opendataval.dataloader.datasets.challenge.iris_challenge"]], "load_openml() (in module opendataval.dataloader.datasets.datasets)": [[80, "opendataval.dataloader.datasets.datasets.load_openml"]], "numbers (in module opendataval.dataloader.datasets.imagesets)": [[80, "opendataval.dataloader.datasets.imagesets.numbers"]], "opendataval.dataloader.datasets.challenge": [[80, "module-opendataval.dataloader.datasets.challenge"]], "opendataval.dataloader.datasets.cleanlab": [[80, "module-opendataval.dataloader.datasets.cleanlab"]], "show_image() (in module opendataval.dataloader.datasets.imagesets)": [[80, "opendataval.dataloader.datasets.imagesets.show_image"]], "dataevaluator (class in opendataval.dataval.api)": [[81, "opendataval.dataval.api.DataEvaluator"]], "evaluators (opendataval.dataval.api.dataevaluator attribute)": [[81, "opendataval.dataval.api.DataEvaluator.Evaluators"]], "modellessmixin (class in opendataval.dataval.api)": [[81, "opendataval.dataval.api.ModelLessMixin"]], "data_values (opendataval.dataval.api.dataevaluator property)": [[81, "opendataval.dataval.api.DataEvaluator.data_values"]], "embeddings() (opendataval.dataval.api.modellessmixin method)": [[81, "opendataval.dataval.api.ModelLessMixin.embeddings"]], "evaluate() (opendataval.dataval.api.dataevaluator method)": [[81, "opendataval.dataval.api.DataEvaluator.evaluate"]], "evaluate_data_values() (opendataval.dataval.api.dataevaluator method)": [[81, "opendataval.dataval.api.DataEvaluator.evaluate_data_values"]], "input_data() (opendataval.dataval.api.dataevaluator method)": [[81, "opendataval.dataval.api.DataEvaluator.input_data"]], "input_fetcher() (opendataval.dataval.api.dataevaluator method)": [[81, "opendataval.dataval.api.DataEvaluator.input_fetcher"]], "input_metric() (opendataval.dataval.api.dataevaluator method)": [[81, "opendataval.dataval.api.DataEvaluator.input_metric"]], "input_model() (opendataval.dataval.api.dataevaluator method)": [[81, "opendataval.dataval.api.DataEvaluator.input_model"]], "input_model_metric() (opendataval.dataval.api.dataevaluator method)": [[81, "opendataval.dataval.api.DataEvaluator.input_model_metric"]], "opendataval.dataval.api": [[81, "module-opendataval.dataval.api"]], "setup() (opendataval.dataval.api.dataevaluator method)": [[81, "opendataval.dataval.api.DataEvaluator.setup"]], "train() (opendataval.dataval.api.dataevaluator method)": [[81, "opendataval.dataval.api.DataEvaluator.train"]], "train_data_values() (opendataval.dataval.api.dataevaluator method)": [[81, "opendataval.dataval.api.DataEvaluator.train_data_values"]], "ame (class in opendataval.dataval.ame.ame)": [[82, "opendataval.dataval.ame.ame.AME"]], "baggingevaluator (class in opendataval.dataval.ame.ame)": [[82, "opendataval.dataval.ame.ame.BaggingEvaluator"]], "evaluate_data_values() (opendataval.dataval.ame.ame.ame method)": [[82, "opendataval.dataval.ame.ame.AME.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.ame.ame.baggingevaluator method)": [[82, "opendataval.dataval.ame.ame.BaggingEvaluator.evaluate_data_values"]], "get_subset_perf() (opendataval.dataval.ame.ame.baggingevaluator method)": [[82, "opendataval.dataval.ame.ame.BaggingEvaluator.get_subset_perf"]], "input_data() (opendataval.dataval.ame.ame.baggingevaluator method)": [[82, "opendataval.dataval.ame.ame.BaggingEvaluator.input_data"]], "opendataval.dataval.ame": [[82, "module-opendataval.dataval.ame"]], "opendataval.dataval.ame.ame": [[82, "module-opendataval.dataval.ame.ame"]], "train_data_values() (opendataval.dataval.ame.ame.ame method)": [[82, "opendataval.dataval.ame.ame.AME.train_data_values"]], "train_data_values() (opendataval.dataval.ame.ame.baggingevaluator method)": [[82, "opendataval.dataval.ame.ame.BaggingEvaluator.train_data_values"]], "dvrl (class in opendataval.dataval.dvrl.dvrl)": [[83, "opendataval.dataval.dvrl.dvrl.DVRL"]], "datavalueestimatorrl (class in opendataval.dataval.dvrl.dvrl)": [[83, "opendataval.dataval.dvrl.dvrl.DataValueEstimatorRL"]], "dveloss (class in opendataval.dataval.dvrl.dvrl)": [[83, "opendataval.dataval.dvrl.dvrl.DveLoss"]], "evaluate_data_values() (opendataval.dataval.dvrl.dvrl.dvrl method)": [[83, "opendataval.dataval.dvrl.dvrl.DVRL.evaluate_data_values"]], "forward() (opendataval.dataval.dvrl.dvrl.datavalueestimatorrl method)": [[83, "opendataval.dataval.dvrl.dvrl.DataValueEstimatorRL.forward"]], "forward() (opendataval.dataval.dvrl.dvrl.dveloss method)": [[83, "opendataval.dataval.dvrl.dvrl.DveLoss.forward"]], "input_data() (opendataval.dataval.dvrl.dvrl.dvrl method)": [[83, "opendataval.dataval.dvrl.dvrl.DVRL.input_data"]], "opendataval.dataval.dvrl": [[83, "module-opendataval.dataval.dvrl"]], "opendataval.dataval.dvrl.dvrl": [[83, "module-opendataval.dataval.dvrl.dvrl"]], "train_data_values() (opendataval.dataval.dvrl.dvrl.dvrl method)": [[83, "opendataval.dataval.dvrl.dvrl.DVRL.train_data_values"]], "influencefunctioneval (class in opendataval.dataval.influence.influence)": [[84, "opendataval.dataval.influence.influence.InfluenceFunctionEval"]], "evaluate_data_values() (opendataval.dataval.influence.influence.influencefunctioneval method)": [[84, "opendataval.dataval.influence.influence.InfluenceFunctionEval.evaluate_data_values"]], "input_data() (opendataval.dataval.influence.influence.influencefunctioneval method)": [[84, "opendataval.dataval.influence.influence.InfluenceFunctionEval.input_data"]], "opendataval.dataval.influence": [[84, "module-opendataval.dataval.influence"]], "opendataval.dataval.influence.influence": [[84, "module-opendataval.dataval.influence.influence"]], "train_data_values() (opendataval.dataval.influence.influence.influencefunctioneval method)": [[84, "opendataval.dataval.influence.influence.InfluenceFunctionEval.train_data_values"]], "knnshapley (class in opendataval.dataval.knnshap.knnshap)": [[85, "opendataval.dataval.knnshap.knnshap.KNNShapley"]], "evaluate_data_values() (opendataval.dataval.knnshap.knnshap.knnshapley method)": [[85, "opendataval.dataval.knnshap.knnshap.KNNShapley.evaluate_data_values"]], "match() (opendataval.dataval.knnshap.knnshap.knnshapley method)": [[85, "opendataval.dataval.knnshap.knnshap.KNNShapley.match"]], "opendataval.dataval.knnshap": [[85, "module-opendataval.dataval.knnshap"]], "opendataval.dataval.knnshap.knnshap": [[85, "module-opendataval.dataval.knnshap.knnshap"]], "train_data_values() (opendataval.dataval.knnshap.knnshap.knnshapley method)": [[85, "opendataval.dataval.knnshap.knnshap.KNNShapley.train_data_values"]], "betashapley (class in opendataval.dataval.margcontrib.betashap)": [[86, "opendataval.dataval.margcontrib.betashap.BetaShapley"]], "cache (opendataval.dataval.margcontrib.shap.shapevaluator attribute)": [[86, "opendataval.dataval.margcontrib.shap.ShapEvaluator.CACHE"]], "databanzhaf (class in opendataval.dataval.margcontrib.banzhaf)": [[86, "opendataval.dataval.margcontrib.banzhaf.DataBanzhaf"]], "databanzhafmargcontrib (class in opendataval.dataval.margcontrib.banzhaf)": [[86, "opendataval.dataval.margcontrib.banzhaf.DataBanzhafMargContrib"]], "datashapley (class in opendataval.dataval.margcontrib.datashap)": [[86, "opendataval.dataval.margcontrib.datashap.DataShapley"]], "gr_max (opendataval.dataval.margcontrib.shap.shapevaluator attribute)": [[86, "opendataval.dataval.margcontrib.shap.ShapEvaluator.GR_MAX"]], "leaveoneout (class in opendataval.dataval.margcontrib.loo)": [[86, "opendataval.dataval.margcontrib.loo.LeaveOneOut"]], "shapevaluator (class in opendataval.dataval.margcontrib.shap)": [[86, "opendataval.dataval.margcontrib.shap.ShapEvaluator"]], "compute_weight() (opendataval.dataval.margcontrib.banzhaf.databanzhafmargcontrib method)": [[86, "opendataval.dataval.margcontrib.banzhaf.DataBanzhafMargContrib.compute_weight"]], "compute_weight() (opendataval.dataval.margcontrib.betashap.betashapley method)": [[86, "opendataval.dataval.margcontrib.betashap.BetaShapley.compute_weight"]], "compute_weight() (opendataval.dataval.margcontrib.datashap.datashapley method)": [[86, "opendataval.dataval.margcontrib.datashap.DataShapley.compute_weight"]], "compute_weight() (opendataval.dataval.margcontrib.shap.shapevaluator method)": [[86, "opendataval.dataval.margcontrib.shap.ShapEvaluator.compute_weight"]], "evaluate_data_values() (opendataval.dataval.margcontrib.banzhaf.databanzhaf method)": [[86, "opendataval.dataval.margcontrib.banzhaf.DataBanzhaf.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.margcontrib.banzhaf.databanzhafmargcontrib method)": [[86, "opendataval.dataval.margcontrib.banzhaf.DataBanzhafMargContrib.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.margcontrib.betashap.betashapley method)": [[86, "opendataval.dataval.margcontrib.betashap.BetaShapley.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.margcontrib.datashap.datashapley method)": [[86, "opendataval.dataval.margcontrib.datashap.DataShapley.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.margcontrib.loo.leaveoneout method)": [[86, "opendataval.dataval.margcontrib.loo.LeaveOneOut.evaluate_data_values"]], "evaluate_data_values() (opendataval.dataval.margcontrib.shap.shapevaluator method)": [[86, "opendataval.dataval.margcontrib.shap.ShapEvaluator.evaluate_data_values"]], "input_data() (opendataval.dataval.margcontrib.banzhaf.databanzhaf method)": [[86, "opendataval.dataval.margcontrib.banzhaf.DataBanzhaf.input_data"]], "input_data() (opendataval.dataval.margcontrib.loo.leaveoneout method)": [[86, "opendataval.dataval.margcontrib.loo.LeaveOneOut.input_data"]], "input_data() (opendataval.dataval.margcontrib.shap.shapevaluator method)": [[86, "opendataval.dataval.margcontrib.shap.ShapEvaluator.input_data"]], "opendataval.dataval.margcontrib": [[86, "module-opendataval.dataval.margcontrib"]], "opendataval.dataval.margcontrib.banzhaf": [[86, "module-opendataval.dataval.margcontrib.banzhaf"]], "opendataval.dataval.margcontrib.betashap": [[86, "module-opendataval.dataval.margcontrib.betashap"]], "opendataval.dataval.margcontrib.datashap": [[86, "module-opendataval.dataval.margcontrib.datashap"]], "opendataval.dataval.margcontrib.loo": [[86, "module-opendataval.dataval.margcontrib.loo"]], "opendataval.dataval.margcontrib.shap": [[86, "module-opendataval.dataval.margcontrib.shap"]], "train_data_values() (opendataval.dataval.margcontrib.banzhaf.databanzhaf method)": [[86, "opendataval.dataval.margcontrib.banzhaf.DataBanzhaf.train_data_values"]], "train_data_values() (opendataval.dataval.margcontrib.loo.leaveoneout method)": [[86, "opendataval.dataval.margcontrib.loo.LeaveOneOut.train_data_values"]], "train_data_values() (opendataval.dataval.margcontrib.shap.shapevaluator method)": [[86, "opendataval.dataval.margcontrib.shap.ShapEvaluator.train_data_values"]], "dataoob (class in opendataval.dataval.oob.oob)": [[87, "opendataval.dataval.oob.oob.DataOob"]], "groupingindex (class in opendataval.dataval.oob.oob)": [[87, "opendataval.dataval.oob.oob.GroupingIndex"]], "add_indices() (opendataval.dataval.oob.oob.groupingindex method)": [[87, "opendataval.dataval.oob.oob.GroupingIndex.add_indices"]], "evaluate_data_values() (opendataval.dataval.oob.oob.dataoob method)": [[87, "opendataval.dataval.oob.oob.DataOob.evaluate_data_values"]], "input_data() (opendataval.dataval.oob.oob.dataoob method)": [[87, "opendataval.dataval.oob.oob.DataOob.input_data"]], "opendataval.dataval.oob": [[87, "module-opendataval.dataval.oob"]], "opendataval.dataval.oob.oob": [[87, "module-opendataval.dataval.oob.oob"]], "train_data_values() (opendataval.dataval.oob.oob.dataoob method)": [[87, "opendataval.dataval.oob.oob.DataOob.train_data_values"]], "randomevaluator (class in opendataval.dataval.random.random)": [[88, "opendataval.dataval.random.random.RandomEvaluator"]], "evaluate_data_values() (opendataval.dataval.random.random.randomevaluator method)": [[88, "opendataval.dataval.random.random.RandomEvaluator.evaluate_data_values"]], "opendataval.dataval.random": [[88, "module-opendataval.dataval.random"]], "opendataval.dataval.random.random": [[88, "module-opendataval.dataval.random.random"]], "train_data_values() (opendataval.dataval.random.random.randomevaluator method)": [[88, "opendataval.dataval.random.random.RandomEvaluator.train_data_values"]], "experimentmediator (class in opendataval.experiment.api)": [[89, "opendataval.experiment.api.ExperimentMediator"]], "compute_data_values() (opendataval.experiment.api.experimentmediator method)": [[89, "opendataval.experiment.api.ExperimentMediator.compute_data_values"]], "discover_corrupted_sample() (in module opendataval.experiment.exper_methods)": [[89, "opendataval.experiment.exper_methods.discover_corrupted_sample"]], "evaluate() (opendataval.experiment.api.experimentmediator method)": [[89, "opendataval.experiment.api.ExperimentMediator.evaluate"]], "increasing_bin_removal() (in module opendataval.experiment.exper_methods)": [[89, "opendataval.experiment.exper_methods.increasing_bin_removal"]], "model_factory_setup() (opendataval.experiment.api.experimentmediator class method)": [[89, "opendataval.experiment.api.ExperimentMediator.model_factory_setup"]], "noisy_detection() (in module opendataval.experiment.exper_methods)": [[89, "opendataval.experiment.exper_methods.noisy_detection"]], "opendataval.experiment.api": [[89, "module-opendataval.experiment.api"]], "plot() (opendataval.experiment.api.experimentmediator method)": [[89, "opendataval.experiment.api.ExperimentMediator.plot"]], "remove_high_low() (in module opendataval.experiment.exper_methods)": [[89, "opendataval.experiment.exper_methods.remove_high_low"]], "save_dataval() (in module opendataval.experiment.exper_methods)": [[89, "opendataval.experiment.exper_methods.save_dataval"]], "save_output() (opendataval.experiment.api.experimentmediator method)": [[89, "opendataval.experiment.api.ExperimentMediator.save_output"]], "set_output_directory() (opendataval.experiment.api.experimentmediator method)": [[89, "opendataval.experiment.api.ExperimentMediator.set_output_directory"]], "setup() (opendataval.experiment.api.experimentmediator class method)": [[89, "opendataval.experiment.api.ExperimentMediator.setup"]], "bertclassifier (class in opendataval.model.bert)": [[90, "opendataval.model.bert.BertClassifier"]], "classifiermlp (class in opendataval.model.mlp)": [[90, "opendataval.model.mlp.ClassifierMLP"]], "classifiersklearnwrapper (class in opendataval.model.api)": [[90, "opendataval.model.api.ClassifierSkLearnWrapper"]], "classifierunweightedsklearnwrapper (class in opendataval.model.api)": [[90, "opendataval.model.api.ClassifierUnweightedSkLearnWrapper"]], "lenet (class in opendataval.model.lenet)": [[90, "opendataval.model.lenet.LeNet"]], "logisticregression (class in opendataval.model.logistic_regression)": [[90, "opendataval.model.logistic_regression.LogisticRegression"]], "model (class in opendataval.model.api)": [[90, "opendataval.model.api.Model"]], "models (opendataval.model.api.model attribute)": [[90, "opendataval.model.api.Model.Models"]], "regressionmlp (class in opendataval.model.mlp)": [[90, "opendataval.model.mlp.RegressionMLP"]], "regressionsklearnwrapper (class in opendataval.model.api)": [[90, "opendataval.model.api.RegressionSkLearnWrapper"]], "torchclassmixin (class in opendataval.model.api)": [[90, "opendataval.model.api.TorchClassMixin"]], "torchpredictmixin (class in opendataval.model.api)": [[90, "opendataval.model.api.TorchPredictMixin"]], "torchregressmixin (class in opendataval.model.api)": [[90, "opendataval.model.api.TorchRegressMixin"]], "clone() (opendataval.model.api.model method)": [[90, "opendataval.model.api.Model.clone"]], "device (opendataval.model.api.torchclassmixin property)": [[90, "opendataval.model.api.TorchClassMixin.device"]], "device (opendataval.model.api.torchpredictmixin property)": [[90, "opendataval.model.api.TorchPredictMixin.device"]], "device (opendataval.model.api.torchregressmixin property)": [[90, "opendataval.model.api.TorchRegressMixin.device"]], "fit() (opendataval.model.api.classifiersklearnwrapper method)": [[90, "opendataval.model.api.ClassifierSkLearnWrapper.fit"]], "fit() (opendataval.model.api.classifierunweightedsklearnwrapper method)": [[90, "opendataval.model.api.ClassifierUnweightedSkLearnWrapper.fit"]], "fit() (opendataval.model.api.model method)": [[90, "opendataval.model.api.Model.fit"]], "fit() (opendataval.model.api.regressionsklearnwrapper method)": [[90, "opendataval.model.api.RegressionSkLearnWrapper.fit"]], "fit() (opendataval.model.api.torchclassmixin method)": [[90, "opendataval.model.api.TorchClassMixin.fit"]], "fit() (opendataval.model.api.torchregressmixin method)": [[90, "opendataval.model.api.TorchRegressMixin.fit"]], "fit() (opendataval.model.bert.bertclassifier method)": [[90, "opendataval.model.bert.BertClassifier.fit"]], "forward() (opendataval.model.bert.bertclassifier method)": [[90, "opendataval.model.bert.BertClassifier.forward"]], "forward() (opendataval.model.lenet.lenet method)": [[90, "opendataval.model.lenet.LeNet.forward"]], "forward() (opendataval.model.logistic_regression.logisticregression method)": [[90, "opendataval.model.logistic_regression.LogisticRegression.forward"]], "forward() (opendataval.model.mlp.classifiermlp method)": [[90, "opendataval.model.mlp.ClassifierMLP.forward"]], "forward() (opendataval.model.mlp.regressionmlp method)": [[90, "opendataval.model.mlp.RegressionMLP.forward"]], "opendataval.model.api": [[90, "module-opendataval.model.api"]], "opendataval.model.bert": [[90, "module-opendataval.model.bert"]], "opendataval.model.lenet": [[90, "module-opendataval.model.lenet"]], "opendataval.model.logistic_regression": [[90, "module-opendataval.model.logistic_regression"]], "opendataval.model.mlp": [[90, "module-opendataval.model.mlp"]], "predict() (opendataval.model.api.classifiersklearnwrapper method)": [[90, "opendataval.model.api.ClassifierSkLearnWrapper.predict"]], "predict() (opendataval.model.api.model method)": [[90, "opendataval.model.api.Model.predict"]], "predict() (opendataval.model.api.regressionsklearnwrapper method)": [[90, "opendataval.model.api.RegressionSkLearnWrapper.predict"]], "predict() (opendataval.model.api.torchpredictmixin method)": [[90, "opendataval.model.api.TorchPredictMixin.predict"]], "predict() (opendataval.model.bert.bertclassifier method)": [[90, "opendataval.model.bert.BertClassifier.predict"]], "to_numpy() (in module opendataval.model.api)": [[90, "opendataval.model.api.to_numpy"]], "tokenize() (opendataval.model.bert.bertclassifier method)": [[90, "opendataval.model.bert.BertClassifier.tokenize"]], "training (opendataval.model.api.torchclassmixin attribute)": [[90, "opendataval.model.api.TorchClassMixin.training"]], "training (opendataval.model.api.torchpredictmixin attribute)": [[90, "opendataval.model.api.TorchPredictMixin.training"]], "training (opendataval.model.api.torchregressmixin attribute)": [[90, "opendataval.model.api.TorchRegressMixin.training"]]}})